{"meta":{"title":"喵","subtitle":"欢迎光临喵~","description":"絢香的小世界","author":"Ayaka Neko","url":"https://neko.ayaka.moe","root":"/"},"pages":[{"title":"","date":"2020-10-26T06:30:05.247Z","updated":"2020-10-26T06:29:56.968Z","comments":true,"path":"tests/botlink.html","permalink":"https://neko.ayaka.moe/tests/botlink.html","excerpt":"","text":""},{"title":"","date":"2020-10-26T06:30:05.247Z","updated":"2020-10-26T06:29:56.968Z","comments":true,"path":"tests/redirect.html","permalink":"https://neko.ayaka.moe/tests/redirect.html","excerpt":"","text":""},{"title":"页面被吃掉了！","date":"2020-10-26T06:29:58.062Z","updated":"2020-10-26T06:29:56.868Z","comments":false,"path":"/404.html","permalink":"https://neko.ayaka.moe/404.html","excerpt":"","text":"可能是博客生成错误的说…可以去留言板上给我回复哦~回主页或者是去归档看看"},{"title":"Neko 是什么？","date":"2014-12-22T04:39:04.000Z","updated":"2020-10-26T06:29:56.880Z","comments":false,"path":"about/index.html","permalink":"https://neko.ayaka.moe/about/index.html","excerpt":"","text":"是一只名叫 Ayaka Neko 的猫，生活在一个自己看上去似乎无望的世界上，尝试并且努力尝试寻找着属于自己的归属之地、归宿的猫。 以前说，自己是「天真的笨猫，什么都不会」，在 Twitter 的个人资料页面上也是这么说自己，虽然自己的确有在 Twitter 上写满过个人资料那个区域，甚至觉得不够，后来又把自己的所有技能全部丢上去写了一篇满文字的推文然后置顶，记得当时羽毛说，「这个人看上去好厉害啊，怎么什么都会，还是屏蔽掉好了（然后后来觉得感兴趣又解开来接触我）」，然后就是之后抑郁恶化严重，就删掉了那些东西，因为自己深知自己是比不过网络上其他人的，自己的那些技能其实都不算什么可以拿的出手的东西，虽然的确有一部分在现在的我看来，依然很厉害：写音乐也好，会 C# 程序也好，当时的我一定很厉害吧。自己经历过这么多曲折的弯路再来看这些东西的时候就会觉得，这些真的很厉害呢。以前自己企划的 Project EMOSYS 还有 moeFramework 在现在的自己看起来都是很厉害很优秀的想法，自己在过去阴暗的那段时间里虽然也有一些自己新的想法，但是比不上过去的自己所做出来的这些重要的成就。 这个页面很久没有更新了呢，自从猫猫去年年底说更新这个博客，到换主题的现在，还是没有好好编辑过这个页面。当时准备离开这个世界的时候，就把很多东西删掉了，然后留下： 是笨猫。 过去的 12017 年…好累呢。好累呢。好累呢。 12018 年什么希望也没有…我已经离开了呢，离开这个世界了。前往了那个所谓的一直希望去到的地方 – 世界的另一端 各位，再见了呢 这样的话在这个页面上。说实话，现在的自己也不知道应该怎么样介绍自己会比较好，有一部分人，来自 Bilibili 的也好，网易云音乐的也好，都知道过去发生过一些很不愉快的事情，这些东西猫猫到现在也没有在博客里面好好讲清楚过，也没有好好去审视自己的那段时间到底是不是有意义的诸如此类的一些东西，都不知道要不要更新到博客上。总之自己是 LGBTQ+ 的一员，自己的愿望是世界大和，世界和平，不要再有现在这样的争执。你看上面说到的愿望，自己都觉得是不可能实现的，所以开头的时候就说了呢，「生活在一个自己看上去似乎无望的世界上」，自己的一些观念和想法，基本上是这个时代暂时不会实现的了，但是一定会慢慢变好的，猫猫相信是这样的。 我叫 Ayaka Neko 哦，写作「絢香猫」，不用繁体也可以，直接称呼我 Neko 或者猫猫就可以呢。谢谢你看这么多废话，也希望你能在这个博客找到你想要的东西。谢谢你！ 如果有时间可以关注一下 Neko 的 Twitter 喔。Neko 的 Twitter 是这个w Follow @ayakaneko Tweets by Ayaka Neko"},{"title":"分类","date":"2014-12-22T04:39:04.000Z","updated":"2020-10-26T06:29:56.881Z","comments":false,"path":"categories/index.html","permalink":"https://neko.ayaka.moe/categories/index.html","excerpt":"","text":""},{"title":"各个分类","date":"2020-04-18T01:07:04.000Z","updated":"2020-10-26T06:29:56.881Z","comments":true,"path":"category/index.html","permalink":"https://neko.ayaka.moe/category/index.html","excerpt":"","text":""},{"title":"留言板","date":"2014-12-22T04:39:04.000Z","updated":"2020-10-26T06:29:56.881Z","comments":true,"path":"comments/index.html","permalink":"https://neko.ayaka.moe/comments/index.html","excerpt":"","text":""},{"title":"tag","date":"2020-04-18T01:06:58.000Z","updated":"2020-10-26T06:29:56.881Z","comments":true,"path":"tag/index.html","permalink":"https://neko.ayaka.moe/tag/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2014-12-22T04:39:04.000Z","updated":"2020-10-26T06:29:56.881Z","comments":false,"path":"tags/index.html","permalink":"https://neko.ayaka.moe/tags/index.html","excerpt":"","text":""},{"title":"","date":"2020-10-26T06:30:01.255Z","updated":"2020-10-26T06:29:56.968Z","comments":true,"path":"tests/ogptest.html","permalink":"https://neko.ayaka.moe/tests/ogptest.html","excerpt":"","text":"OGP TEST - CloudMusic"}],"posts":[{"title":"Arweave 储存网站","slug":"044","date":"2020-08-31T14:44:03.000Z","updated":"2020-08-31T14:44:03.000Z","comments":true,"path":"2020/08/31/044/","link":"","permalink":"https://neko.ayaka.moe/2020/08/31/044/","excerpt":"前言初识 Arweave 是在看到这样的一条新闻：隐私社交工具 Maskbook 集成 Arweave 支持永久储存文件 然后岛娘就问猫猫去做一下研究，看看能不能把 Matataki 的东西存储到 Arweave 上。起初我只是抱着一个很简单的心态来看待这个问题，我觉得肯定很简单。于是我前往了 Arweave 的官网，获取了我的第一笔 AR 钱包和金额，虽然只有少量的 0.25 AR，但是看了看官方的文档，部署起来肯定不会需要太多的花费的。","text":"前言初识 Arweave 是在看到这样的一条新闻：隐私社交工具 Maskbook 集成 Arweave 支持永久储存文件 然后岛娘就问猫猫去做一下研究，看看能不能把 Matataki 的东西存储到 Arweave 上。起初我只是抱着一个很简单的心态来看待这个问题，我觉得肯定很简单。于是我前往了 Arweave 的官网，获取了我的第一笔 AR 钱包和金额，虽然只有少量的 0.25 AR，但是看了看官方的文档，部署起来肯定不会需要太多的花费的。 研究去到了 GitHub，创建了一个名为 ArcLight 的项目，专门用来存储相关的项目内容，这个项目最早定义是一个储存 App，你可以储存你的文件到 Arweave 中，永久可用。起初用的是 Arweave.js，这个是官方的 HTTP API 的 Node.js wrapper，里面集成了很多基本的方法和使用接口所需要的东西。我想着这个项目应该是一个类似后端的程序，我就拍拍脑袋开始写 app.js，然后添加 Koa 作为后端框架支持开始工作。但是一开始我就发现这个 API 不简单，很多时候的操作要 verify 很多，也需要测试很多才行。然后开始去浏览他们的 dApp 列表看了一会儿之后点击 Publish App 的时候需要选择 App 类型，看到那么多的类型的时候我才反应过来，原来 Arweave 能做这么多事情。这个 Arweave 有点类似曾经的 ZeroNet，也像 IPFS 能做的事情，但是 Arweave 能做的就是能用普通的浏览器访问这些以哈希值存储的内容，并且运行优美的 Web App。第一天就想着，我试着部署一个网站上去算了。 部署一个纯粹的 HTML 文件最初我去 Codepen 上找了一个参考的背景 CSS 动画写法，然后在这个里面决定好我们的主题颜色：粉色，然后修改了一个标题和一些小动画出来制作出来了一个完全只有 HTML 和 CSS 构成的一个 index.html 文件。然后使用官方给的 Arweave Deploy 命令行工具部署到了 Arweave 的去中心化网络上。部署一个纯粹的 HTML 文件和 favicon 的文件夹看起来似乎如鱼得水，就按照官方的说明： arweave deploy-dir ./public --key-file secrets/ayaka.key.json 用这个命令就能完成存储在 public 文件夹下面整个文件夹的部署工作，这个过程看起来很简单很简洁，ayaka.key.json 就是你从网站上免费获取的下载的那个文件。对于 Arweave 区块纺 而言，你的用户 ID 和你的认证凭据就是那个 JSON 文件，请一定小心保管。部署的最早的版本看上去很简陋，什么都没有，地址 第二天的研究第二天我对 Arweave.js 进行了很细致的研究，比如如何使用这个 Javascript 库完成文件上传和 对 Transactions 进行 sign 和 submit，然后就意识到我们需要的是一个独立的，去中心化，不需要后端的前端 App，这让我从那个 app.js 和 Koa 的梦中醒来，发现自己并不需要这样，我们只需要像往常一样构建一个普通的 Vue + Webpack 的网站就可以了，因为可以上传到 Arweave 的东西可以是一整个文件夹，只要我打包好就行。 于是我开始着手改造整个 ArcLight 项目，去掉了 public 文件夹，保留了存储 key 的 secrets 文件夹，然后为 Vue + Webpack 初始化使用 vue init webpack . 然后一个崭新的 Vue 项目就构建起来了。 搬迁原有的东西像往常一样，我在 src/router/index.js 中写下 / 的地址对应的是 Landing 页面，也就是原本部署到网络的页面写到 Landing.vue 这个文件下。因为岛娘的有一部分需求是要能够存储 Podcast 或者是图片或者是 PDF 之类的文件，完成去中心化的文件存储，于是我准备了 Flower Dance 这首音乐来作为测试对象，又添加了 DIYGod 写的 Aplayer 作为我们的播放器，这样可以避免使用原生的 标签导致不同浏览器不同音乐播放器的效果，导致我们看到的结果不统一。 构建一些新的东西因为有音乐播放器，有音乐，我们需要一个音乐目录和音乐菜单，还有播放音乐的页面。于是建立了 Music.vue 和 Music/_id.vue 这两个文件。在这个时候，我们依然还没有一个具体的原型，为了构建的速度足够快，我选择让每一个页面的背景都是相同的，只有 title 也就是大标题不一致。比如 Music 选单里，标题就是 Music，播放页面的标题就是歌曲的 name 参数等等。 我们需要给 Music 页面写一个音乐列表， &lt;template&gt; &lt;div class=&quot;music-list&quot;&gt; &lt;b-menu&gt; &lt;b-menu-list v-for=&quot;(audio, index) in audioList&quot; :key=&quot;index&quot; label=&quot;Music List&quot;&gt; &lt;b-menu-item :label=&quot;audio.name&quot; tag=&quot;router-link&quot; target=&quot;_blank&quot; :to=&quot;audio.path&quot;&gt;&lt;/b-menu-item&gt; &lt;/b-menu-list&gt; &lt;/b-menu&gt; &lt;/div&gt; &lt;/template&gt; &lt;script&gt; export default { data () { return { audioList: [ { name: &#39;Flower Dance&#39;, path: &#39;/music/flowerdance&#39; } ] } } } &lt;/script&gt; &lt;style lang=&quot;less&quot; scoped&gt; .music-list { padding-top: 200px; text-align: center; margin-top: 20rem; width: 50%; border-radius: 20px; margin: 0 auto; } /deep/ .menu-list a { border-radius: 10px; color: white; } /deep/ .menu-list a:hover { background-color: #E56D9B; } /deep/ .menu-label { font-size: 1rem !important; } /deep/ span { font-size: 1.2rem !important; } &lt;/style&gt; 注意这里使用的 /deep/ 是为了改变我使用的 Buefy 的 Menu 样式。 有了这些内容，我们写一个 Header 来帮助用户定位， &lt;template&gt; &lt;div class=&quot;header&quot;&gt; &lt;div class=&quot;link-container&quot;&gt; &lt;router-link :to=&quot;{ name: &#39;Landing&#39; }&quot; class=&quot;link&quot;&gt; &lt;img src=&quot;../assets/logo.png&quot; style=&quot;height: 3rem&quot;&gt; &lt;/router-link&gt; &lt;router-link :to=&quot;{ name: &#39;Landing&#39; }&quot; class=&quot;link text-link&quot;&gt; ArcLight &lt;/router-link&gt; &lt;router-link :to=&quot;{ name: &#39;MusicMenu&#39; }&quot; class=&quot;link text-link&quot;&gt; Music &lt;/router-link&gt; &lt;/div&gt; &lt;/div&gt; &lt;/template&gt; &lt;style lang=&quot;less&quot; scoped&gt; .link-container { margin-top: 2rem; margin-left: 2rem; width: 100%; display: flex; align-items: center; } .link { margin-left: .75rem; font-size: 1.2rem; } .text-link { margin-bottom: 5px; } .text-link:hover { animation-name: colorChange; animation-duration: 0.25s; animation-timing-function: ease-in-out; color: #ff92bc; } @keyframes colorChange { 0% { color: white; } 100% { color: #ff92bc; } } /deep/ a { color: white; } &lt;/style&gt; 好了，现在我们有了一个完整的页面来显示： 大概就是长成这样。 我们尝试使用 yarn build 构建我们的页面 App，然后我们再来 deploy-dir，一定能成功。yarn build 不会花很久，然后我们继续运行同一个命令，这次我们把 目录改成 yarn build 之后生成的文件目录 ./dist arweave deploy-dir ./dist --key-file secrets/ayaka.key.json 整个过程都看起来没什么问题，我们的 Transaction 已经被提交并且能够被访问了，我们点击链接。 ？？？为什么什么都没有？ 打开开发者工具查看 Console 发现所有资源全部都报错了，说明没有到服务器上，可是我们使用工具查阅 transaction：https://viewblock.io/arweave/tx/7wRXzBZqahTCGn1iZlCqpMuAToZplGtqxkNYM5ywztg发现的确已经部署上去了，问题出在哪里？ 部署失败了我们尝试官方文档说的： arweave deploy ./dist/index.html --package --key-file secrets/ayaka.key.json 我们再去尝试访问：https://7xr6o7ief7vrfrlm7ixvekkphritxtylffurzcmp67ckkfc6mvnq.arweave.net/_ePnfQQv6xLFbPovUilPPFE7zwspaRyJj_fEpRReZVs发现还是不行。为什么呢？从理论上而言，我们使用 Webpack 打包文件的话，是需要一个 source map 和 js 文件来协同工作的，就像参照 ASCII 表格来分析二进制代码一样。可是我们查阅 transaction，文件 vendor 都是被打包上传好的。我发现自己一个人是解决不了这个问题的，于是在 Discord 上提问： 他们建议我使用 status 命令看看状态，因为文件必须要被 mined 到一个 accepted block 之后才可以被访问： 但是结果显而易见，是成功的状态。 第三天的挣扎发现原因我提出了问题之后，在 Discord 上有一位十分热心的用户帮我看了问题，在第三天的时候给了回复： 他说的确看起来一切都是被上传的，可是不知道为什么 proxy 系统没有正常工作提供路由地址。也有人说是不是没有使用 –package 参数打包 index.html 文件导致的，可是我尝试了这个方法，也不能确保文件正常，比如被编码过后的网站图标变得不可用了，即便打开开发者工具栏依然可以看到是 base64 编码的 data/image 不久之后他提出了问题的关键所在，关键所在就是我不能对着每一个资源使用绝对路径，而是相对路径，这样就能访问到我们需要的东西了。 解决问题想要解决这个问题也很简单，我们需要去 config/index.js 的配置文件中告诉 Webpack 我们的链接替换方式，我们打开 config/index.js 文件就能看到： build: { // Template for index.html index: path.resolve(__dirname, &#39;../dist/index.html&#39;), // Paths assetsRoot: path.resolve(__dirname, &#39;../dist&#39;), assetsSubDirectory: &#39;static&#39;, assetsPublicPath: &#39;/&#39;, /** * Source Maps */ productionSourceMap: true, // https://webpack.js.org/configuration/devtool/#production devtool: &#39;#source-map&#39;, // Gzip off by default as many popular static hosts such as // Surge or Netlify already gzip all static assets for you. // Before setting to `true`, make sure to: // npm install --save-dev compression-webpack-plugin productionGzip: false, productionGzipExtensions: [&#39;js&#39;, &#39;css&#39;], // Run the build command with an extra argument to // View the bundle analyzer report after build finishes: // `npm run build --report` // Set to `true` or `false` to always turn it on or off bundleAnalyzerReport: process.env.npm_config_report } 在 assetsSubDirectory 和 assetsPublicPath 的位置需要进行调整。应该调整为下面的两个值，在每个值前面确保是 ./ 就可以了： build: { // Template for index.html index: path.resolve(__dirname, &#39;../dist/index.html&#39;), // Paths assetsRoot: path.resolve(__dirname, &#39;../dist&#39;), assetsSubDirectory: &#39;./static&#39;, assetsPublicPath: &#39;./&#39;, /** * Source Maps */ productionSourceMap: true, // https://webpack.js.org/configuration/devtool/#production devtool: &#39;#source-map&#39;, // Gzip off by default as many popular static hosts such as // Surge or Netlify already gzip all static assets for you. // Before setting to `true`, make sure to: // npm install --save-dev compression-webpack-plugin productionGzip: false, productionGzipExtensions: [&#39;js&#39;, &#39;css&#39;], // Run the build command with an extra argument to // View the bundle analyzer report after build finishes: // `npm run build --report` // Set to `true` or `false` to always turn it on or off bundleAnalyzerReport: process.env.npm_config_report } 于是现在我们再尝试 yarn build arweave deploy-dir ./dist --key-file secrets/ayaka.key.json 点击新的链接： https://arweave.net/DdjCHM9GiWxQ7NnRQq_jJ7Ib4kOe8tlSchdu4nGbVWw ，就发现一切都可以用了。 结论在 Arweave 的 Web App 上，你必须使用 相对路径 来填充你的资源（Assets），而不是默认配置的 绝对路径。这个问题在其他前端框架上一样可能出现问题，因为都是基于 Webpack 给的打包文件和 Source Map，所以如果你也在给 Arweave 开发 Web App，就要小心这个问题了。 Webpack 的确可以在 Arweave 上使用，所有的外部资源都可以被调用，但是一定要注意：你必须使用 相对路径 来填充你的资源（Assets），而不是默认配置的 绝对路径。另外就是，如果使用 vue-router 来进行路由的话，记得模式应该设置为 Hash。如果你使用 React 或者其他前端框架，也应该考虑相应的问题。以上就是我在 Arweave 踩到的坑啦。 最后谢谢 Discord 帮我寻找问题的每一个人，谢谢 Arweave 团队能够做出这样惊喜的作品。也谢谢其他 dApp 作者给的启发，没有你们就没有现在的 ArcLight。 现在 ArcLight 应邀 Arweave 团队在 GitCoin 的 Hackathon 邀请，现在作为一个可以上传和发布音乐作品的 Web App 存在着，在将来的一个月都会专注于开发这个部分的内容。 链接隐私社交工具 Maskbook 集成 Arweave 支持永久储存文件： https://www.chainnews.com/news/107645751530.htmArcLight： https://github.com/AyakaLab/ArcLightArweave.js： https://github.com/ArweaveTeam/arweave-jsdApp 列表： https://mtfvznw2pwxykoicvxpoe7ao5rp4nhaueueux2bbe4klxankdhra.arweave.net/ZMtcttp9r4U5Aq3e4nwO7F_GnBQlCUvoIScUu4GqGeI/Arweave Deploy： https://github.com/ArweaveTeam/arweave-deployArweave Viewer： https://viewblock.io/arweave","categories":[{"name":"Guide","slug":"Guide","permalink":"https://neko.ayaka.moe/categories/Guide/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"https://neko.ayaka.moe/tags/Vue/"},{"name":"Webpack","slug":"Webpack","permalink":"https://neko.ayaka.moe/tags/Webpack/"},{"name":"区块链","slug":"区块链","permalink":"https://neko.ayaka.moe/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"},{"name":"P2P","slug":"P2P","permalink":"https://neko.ayaka.moe/tags/P2P/"},{"name":"区块纺","slug":"区块纺","permalink":"https://neko.ayaka.moe/tags/%E5%8C%BA%E5%9D%97%E7%BA%BA/"},{"name":"Arweave","slug":"Arweave","permalink":"https://neko.ayaka.moe/tags/Arweave/"}]},{"title":"在基于 Three.js 的 3D 地球上放置图片","slug":"043","date":"2020-08-28T14:44:03.000Z","updated":"2020-08-28T14:44:03.000Z","comments":true,"path":"2020/08/28/043/","link":"","permalink":"https://neko.ayaka.moe/2020/08/28/043/","excerpt":"前言和之前的 Mapbox 的文章一样，这篇文章的由来也是在我接手开发 Crypto Meetup 的时候遇到的一个实现问题。这个问题的来源是因为我本身对 Three.js 的不熟悉导致的，但是大家都知道，Three.js 是 Node.js 中十分著名而且简单的 WebGL 的实现库，你可以绘制动态的 2D 或者 3D 的物件或者是场景，甚至是写就一个游戏也是没问题的。Crypto Meetup 是我在入职仙女座星系之后接手的第一个 Dapp 项目，目的是让用户之间可以共享地理位置，可以在持有特定 Fan 票的情况下，解锁他人的地理位置分享。虽然说叫 Dapp，但其实最终产品在写就的时候就没有太多关于区块链和去中心化的技术，使用的依然是 Vue 前端 + Koa2 后端这样的一个模式来完成的开发，最终部署到你们看到的网站的时候，也是依赖于中心化服务器提供的数据，所以说不算是一个严谨的 Dapp 吧，但是作为 Matataki 的一个小应用，还是蛮不错的，我在其中也学到了 Vue 项目的基本结构和如何构建的知识。","text":"前言和之前的 Mapbox 的文章一样，这篇文章的由来也是在我接手开发 Crypto Meetup 的时候遇到的一个实现问题。这个问题的来源是因为我本身对 Three.js 的不熟悉导致的，但是大家都知道，Three.js 是 Node.js 中十分著名而且简单的 WebGL 的实现库，你可以绘制动态的 2D 或者 3D 的物件或者是场景，甚至是写就一个游戏也是没问题的。Crypto Meetup 是我在入职仙女座星系之后接手的第一个 Dapp 项目，目的是让用户之间可以共享地理位置，可以在持有特定 Fan 票的情况下，解锁他人的地理位置分享。虽然说叫 Dapp，但其实最终产品在写就的时候就没有太多关于区块链和去中心化的技术，使用的依然是 Vue 前端 + Koa2 后端这样的一个模式来完成的开发，最终部署到你们看到的网站的时候，也是依赖于中心化服务器提供的数据，所以说不算是一个严谨的 Dapp 吧，但是作为 Matataki 的一个小应用，还是蛮不错的，我在其中也学到了 Vue 项目的基本结构和如何构建的知识。 是什么问题呢？在 Crypto Meetup 中，我们有两个东西组成，一个是平面地图的展示，一个是 3D 地球的展示，我们在上一篇相关的文章里面写到了关于怎么实现 Mapbox 在地图上渲染用户头像，以及 Mapbox 实现鼠标划过变色的具体实现问题和解决方案。 现在我们要做的，就是把用户的头像放到地球上，然后让地球上进行 2D 到 3D 的坐标转换，也就是球面坐标转换，还有令一点就是，用户头像是扁平的图像，是圆形的一个 2D 物体，我们还要让这个物体永远对齐我们的摄像机对准的地方。 因为我一开始对于怎么实现这个地球是十分疑惑的，在之前的人写下的代码中，使用了渲染器的代码，看起来不免有些困难，但是这个不是重点。我去找了很多资料，真的是非常多非常多的资料。 寻找参考资料我先浏览的是 Three.js 提供的官方案例：https://threejs.org/examples/然后搜索了 geometry，发现没有什么比较类似的案例。于是我转向了搜索引擎，去寻找更多的案例。 webgl geometry convex by Three.js 首先是这个问题： How To Place Marker with Lat/Lon On 3D Globe, Three.js? 后来找到了一个网站：http://stemkoski.github.io/Three.js/index.html在这个网站里我找到了一个类似我们实现的内容的演示案例： Labeled Geometry by Lee Stemkoski 接下来我看了源代码： var spriteMaterial = new THREE.SpriteMaterial( { map: texture, useScreenCoordinates: false, alignment: spriteAlignment } ); 什么 Geometry 类型才适合？他使用的是 Sprite 这个 Object API 来完成的，但是 Sprite 在加载图像作为 SpirteMaterial 的时候会有渲染不到的困难。于是我开始搜寻怎么样转换 2D 到 3D 的方法可以让我转换图片为一个所谓的 Mesh 对象。我们先回去看看 Mesh 是怎么介绍的：Mesh - Three.js Documentation，在文档中，Mesh 是一个网格，是每一个 Geometry 结构的基础，是绘制图案的基本来源，我们定义 Mesh 之后，为我们的对象添加 Material 才能被渲染出来。接下来问题就来了，我应该用什么 Geometry？2D 转 3D？什么样的 Geometry 才适合我们？我们已经知道 Sprite 是行不通的，我们需要换一个方案，我找到了这个问题 Converting a 3D-Scene to 2D-image using raytracing (webgl, three.js) 但是似乎不是我们想要的答案，这里只是描述了 scene 的区别，和转换的理论方法。我再找到了这个 How do you build a custom plane geometry in three.js? - StackOverflow，在这个问题的回答下面有很多方案，但是我看了另一个问题之后明确了我们需要的是什么：Creating a plane, adding a texture on both sides and rotating the object on its side - StackOverflow，在这个回答下面，以及提问的代码中我们可以看到，使用了大量的 PlaneGeometry 来作为我们的图片承载对象。那也就是说，我们 2D 物体都是基于 PlaneGeometry 完成的，那么怎么加载外部图像文件呢？我找到了这个问题：Three.js Using 2D texture\\sprite for animation (planeGeometry) - StackOverflow我们发现，THREE.ImageUtils.loadTexture() 这个函数为我们加载了图像资源，后来又在下面看到，这个方法在后来的 Three.js 版本中废弃了，不得不换成 THREE.TextureLoader().load() 才能使用 基本的代码于是我开始写代码。 const image = new THREE.TextureLoader().load(process.env.VUE_APP_CMUAPI + &#39;/user/avatar?id=1332&#39;); const geometry = new THREE.PlaneGeometry(10, 10, 1, 1) const material = new THREE.MeshBasicMaterial({ map: image, transparent: true, side: THREE.DoubleSide }) const result = new THREE.Mesh(geometry, material) 我们先把这个物品放到 0，0，0 这个坐标上，然后注释掉渲染地球和其他物品的代码，我们刷新页面发现我们的图片被正确的加载了。也能正常的旋转，那么我们接下来要做的就是怎么去进行球面坐标的转换： 直角坐标和球面坐标的转换按照球坐标与直角坐标的转换 - 知乎 和 球坐标系 - Wikipedia 的介绍，我们知道了这个公式可以给我们进行几何坐标的转换。 转换公式 by 球坐标系 - Wikipedia 我们把这个写到代码里， const phi = (90 - lat) * Math.PI / 180 // lat 是 纬度 const theta = (180 - lon) * Math.PI / 180 // lon 是 经度 const x = (EARTH_RADIUS + 8) * Math.sin(phi) * Math.cos(theta) const y = (EARTH_RADIUS + 8) * Math.cos(phi) const z = (EARTH_RADIUS + 8) * Math.sin(phi) * Math.sin(theta) 于是这样，我们就得到了我们的参数，x，y 和 z。我们把之前渲染好的图片位置传入进去： result.position.x = x result.position.y = y result.position.z = z this.scene.add(result) 摄影机的视角跟踪怎么做？好了，现在我们的头像可以紧紧的贴在我们的地球上，并且永远朝向一个方向，那么问题来了，我们怎么样才能使头像永远对齐我们的摄像机呢（也就是我们的视角）？我查阅了 PlaneGeometry 的确有一个 lookAt(camera.position) 这样的使用方法，但是当我用到我们实际的代码的时候却没有什么反应。我们在这个问题下找到了一些答案，TextGeometry to always face user? - StackOverflow mesh.quaternion.copy(camera.quaternion) 这个方法相当于给 mesh 复制了一份动态的 摄像机 位置，但是这个方法不是动态的。但是这样是不够的，我在另一个帖子里找到了最终解决这个问题的方法，首先我们在 Class 内定义一个 AvatarResult 数组来存储这些渲染好的图像， this.AvatarResult.push(result) 我们在 this.scene.add(result) 之后添加到这个数组里，之后我们到 animate（也就是你的 this.render 所在的地方） 这个全局函数的地方，使用 forEach 方法，为每一个 Avatar 对象添加这个动态变化的参数 @autobind animate() { if (!this.running) { return; } this.AvatarResult.forEach(e =&gt; e.rotation.setFromRotationMatrix(this.camera.matrix)) requestAnimationFrame(this.animate); this.render(); } 最后的结果最终我们获得了这样的结果： 最终的代码最后，我们全部的代码只有很少的几行： addNewPoint(lon, lat, magnitude, uid) { const phi = (90 - lat) * Math.PI / 180; const theta = (180 - lon) * Math.PI / 180; const x = (EARTH_RADIUS + 8) * Math.sin(phi) * Math.cos(theta); const y = (EARTH_RADIUS + 8) * Math.cos(phi); const z = (EARTH_RADIUS + 8) * Math.sin(phi) * Math.sin(theta); const image = new THREE.TextureLoader().load(process.env.VUE_APP_CMUAPI + &#39;/user/avatar?id=&#39; + uid); const geometry = new THREE.PlaneGeometry(10, 10, 1, 1) const material = new THREE.MeshBasicMaterial({ map: image, transparent: true, side: THREE.DoubleSide }) const result = new THREE.Mesh(geometry, material) result.position.x = x result.position.y = y result.position.z = z result.quaternion.copy(this.camera.quaternion) this.scene.add(result) this.AvatarResult.push(result) } @autobind animate() { if (!this.running) { return; } this.AvatarResult.forEach(e =&gt; e.rotation.setFromRotationMatrix(this.camera.matrix)) requestAnimationFrame(this.animate); this.render(); } 这样我们就完成了我们要实现的内容了。 最后谢谢你阅读到这里，感谢你对猫猫的支持，如果文中有什么地方写的不对和不够也希望大家能够指正。因为国内 Three.js 的案例和解释还有文档实在不多，而且 Three.js 的官方文档查阅起来和搜索起来并不是很全面，在这里踩了很多很多的坑。如果你也有类似的需求和需要，也感谢你阅读这些内容，也请放心，请自由的使用我在这篇文章中使用的任何代码 链接和参考Mesh - Three.js Documentation: https://threejs.org/docs/#api/zh/objects/Mesh webgl geometry convex by Three.jsLabeled Geometry by Lee StemkoskiHow do you build a custom plane geometry in three.js? - StackOverflowCreating a plane, adding a texture on both sides and rotating the object on its side - StackOverflowThree.js Using 2D texture\\sprite for animation (planeGeometry) - StackOverflow球坐标与直角坐标的转换 - 知乎球坐标系 - WikipediaTextGeometry to always face user? - StackOverflow 感谢以上所有提供资源的作者和提问者，如果没有他们，也就不会有我的结果和最终的产品。","categories":[{"name":"Guide","slug":"Guide","permalink":"https://neko.ayaka.moe/categories/Guide/"}],"tags":[{"name":"CryptoMeetup","slug":"CryptoMeetup","permalink":"https://neko.ayaka.moe/tags/CryptoMeetup/"},{"name":"Three.js","slug":"Three-js","permalink":"https://neko.ayaka.moe/tags/Three-js/"},{"name":"3D","slug":"3D","permalink":"https://neko.ayaka.moe/tags/3D/"},{"name":"地球","slug":"地球","permalink":"https://neko.ayaka.moe/tags/%E5%9C%B0%E7%90%83/"},{"name":"2D转3D","slug":"2D转3D","permalink":"https://neko.ayaka.moe/tags/2D%E8%BD%AC3D/"}]},{"title":"Hexo 和 hexo-plugin-matataki 的使用和开发后记","slug":"042","date":"2020-08-25T06:05:03.000Z","updated":"2020-08-25T06:05:03.000Z","comments":true,"path":"2020/08/25/042/","link":"","permalink":"https://neko.ayaka.moe/2020/08/25/042/","excerpt":"前言有幸在加入仙女座星系之后能够给大家开发这么一个好用的站外工具和插件，当然这也少不了很多人的帮助和支持。 最先要提到的肯定是 hexo-blog-encrypt 的作者 MikeCoder 和其他所有对这个加密插件项目的贡献者（贡献者列表：https://github.com/MikeCoder/hexo-blog-encrypt/graphs/contributors ，如果没有他们首先开发出这个插件，猫猫在这里也没有什么能做的，虽然在很多方面我学习了很多很多知识，借鉴了很多人很多事物的作品才到今天这一步，也才有了我们即将要介绍的 hexo-plugin-matataki 和 FanLocker，两个作为 Matataki 站外的交互插件和脚本。","text":"前言有幸在加入仙女座星系之后能够给大家开发这么一个好用的站外工具和插件，当然这也少不了很多人的帮助和支持。 最先要提到的肯定是 hexo-blog-encrypt 的作者 MikeCoder 和其他所有对这个加密插件项目的贡献者（贡献者列表：https://github.com/MikeCoder/hexo-blog-encrypt/graphs/contributors ，如果没有他们首先开发出这个插件，猫猫在这里也没有什么能做的，虽然在很多方面我学习了很多很多知识，借鉴了很多人很多事物的作品才到今天这一步，也才有了我们即将要介绍的 hexo-plugin-matataki 和 FanLocker，两个作为 Matataki 站外的交互插件和脚本。 在这里，再次感谢以下几个项目给我的灵感和源代码支持： Gitalk: https://github.com/gitalk/gitalk Disqus: https://disqus.com/ hexo-blog-encrypt: https://github.com/MikeCoder/hexo-blog-encrypt Hexo: https://hexo.io/ utterances: https://github.com/utterance/utterances 如果没有以上项目的支持，不会有今天的 hexo-plugin-matataki 和 FanLocker 使用上面说的东西不是很多，但是也不是很简单就能完成的，虽然的确是复制了别人好多的代码，但是，我们学习到了怎么去完成和实现才是最重要的不是吗？所以不阅读也没事，我们直接来描述怎么使用这个东西吧！ 事不宜迟，不如先看看效果是什么样子的？看看演示博客。 我在我的博客中也展示了如何使用这个插件，试试看解锁这篇文章吧！ 我搭建了一个很简单的模版博客，在这个里面你可以看到这个插件完成的具体工作，我也会相应的给出一个 Hexo 博客的配置方案给大家参照去完成魔改。 如果阅读本文不是很清楚的时候可以参考这个仓库的 Hexo 配置来搭建你的博客：基础模版 从哪里开始呢？我们最首先要知道的是，在 Hexo 中使用 hexo-plugin-matataki 是需要你在 Matataki 有注册账号，并且绑定过邮箱的，这样才能登录开发者中心，而 hexo-plugin-matataki 和 FanLocker 都是需要开发者中心才能完成他们的工作的。 首先前往Matataki 开发者中心，登录之后就可以看到这样的列表： 在这里就可以管理你的 App（我们称之为 App 是因为你可以使用我们的开发者中心提供的帮助和 API 接口以及 SDK 来完成许多 Matataki 外部应用的开发，当然如果只是写文章的你，不用在乎这些），以及你的团队，还有查阅开发文档。 创建属于博客的 App我们在这里点击新建就可以新建一个属于你的博客的 App： 选择一个好看的图片，因为到时候会用到这个图片，大家会在使用 Matataki 账号登录到你的博客的时候看到这个图标，也可以看到你在这里填写的一切信息。 要注意这里填写的内容哦，这里填写的时候一定要注意回调链接这一栏，我们的服务器是不允许回调链接配置的时候超出域名范畴的，简单的来说，就是这里写上的域名，以及之后 FanLocker 帮你临时添加回调链接的时候必须是同一个域名，为什么会这样去限制呢？因为我们认为，FanLocker 把你的 client Id 和 client Secret 暴露在网页外部的时候，很可能会被外部的黑客利用，并且跳转到他们的网站，这样的话会给你的读者带来很多不安全的麻烦，所以我们限制了这个内容，只允许同域名的跳转。 当然，如果你是在本地尝试预览你的博客，hexo server 这个命令默认的端口号 4000，你可以在这里填写： localhost:4000 这样本地测试链接回调的时候就会返回你本地的 localhost 了呢，但是要注意哦，当你部署到正式的域名下之后，要记得把回调链接改成你的博客域名地址，无论你的博客是否放在子域名或者子路径下，比如：xxx.com/blog 这才是你的博客的话，填写 xxx.com 也是没有问题的哦。 点击立即创建就可以了哦，你会在 App 列表中看到你创建的 App。 其他的内容在用户登录的时候也会展示出来，你可以前往 Oauth2 这个页面去查看你的 App Oauth 登录地址，可以看到在登录界面下，你填写的所有内容都是可以被用户查阅的。 这就是授权登录的界面。 我们下一步要做什么呢？配置你的 Hexo。 配置 Oauth在 Oauth2 页面下获取到的这个链接，要在 Hexo 的根目录或者主题目录下创建一个键值，键值名称叫 fanlocker，填写的内容就是你的 Oauth 地址，粘贴进去就好了。 fanlocker: https://developer.matataki.io/app/a0df0a921ffc94f3/oauth 如果还是不清楚的话可以看这个链接：_config.yml:112 主题页面下到这里就结束了。 安装 hexo-plugin-matataki我们现在在博客中添加我们的 hexo-plugin-matataki： yarn add hexo-plugin-matataki@latest 如果你没有安装 yarn 只有 npm 的话也没问题哦，国内速度会稍为慢一些： npm install hexo-plugin-matataki@latest 好啦，现在就大功告成了，Hexo 现在运行的时候就会去读取根目录下的 package.json 去加载这个插件。 我们现在在文章的 md 文件中只需要在开头的位置填写下面的内容就好了， matataki: token: 填写你的 token id，这个 id 在你的 Fan 票详情页面地址栏里尾部的数字就是 password: 你的加密密码，随机字符串就好 name: 你的加密密码名称，要记住这个，我们之后还要用到 amount: 需要多少数量才可以解密呢？填写数字就好了 mode: hold 这里是模式，填写 hold 就好，将来会有支付的选项，可以填写 pay，但是现在还不行，我们写 hold 就好了 这里也有一些额外的参数可以选择和使用，比如 matataki: abstract: 这篇文章使用了 Fan 票加密，持有特定 Fan 票来解锁文章 message: 持有 Fan 票来解锁文章 wrongPassMessage: 解锁失败了呢。如果你是博客作者遇到这个问题，看看保险箱的键值对是否设置正确呢 wrongHashMessage: 好像文章加密的时候的时候遗漏了几页呢，不过这些剩下的内容还是可以看看啦 这些参数分别作用在： abstract：文章外部，文章列表的地方会读取到的内容 message：这个是文章内部的提示 wrongPassMessage：这是加密密码正确的提示，通常是因为配置 name 错误导致的 wrongHashMessage：这是加密全文丢失了部分内容导致的，通常是因为原文渲染不正确 还有一个额外参数，比如你希望不同的页面使用不同的 Oauth 地址，也可以在这里声明： matataki: oauth: 你的 Oauth 地址 那么我们最后的文章编辑器可以看到这样的结果： 只要把这个内容放在 — 开头和 — 结尾的地方就好了呢。 现在我们要去魔改我们的主题，让我们的主题能够进行解锁。 如果你的文章内容涉及到了一些比如：ToC（目录，大纲），或者阅读时间，字数统计的话，你需要在字数统计的地方使用的 page.content 更换为 page.origin 就好了，这个地方使用的 origin 就是你的原文内容，如果你需要更多可以变更的选项，大都依赖这个值。 如果还有其他问题，请前往：https://github.com/nekomeowww/hexo-plugin-matataki/issues 提交你的问题和相应的原因。 添加 FanLocker 脚本我们以 landscape 这个默认的主题来进行演示，如何进行修改。 我们定位到这个文件： themes/landscape/layout/post.ejs 通常点进去你只会发现一行代码的内容，这个文件在渲染的过程中完成了你的文章独立页面的渲染，我们要在你的每一个文章页面渲染下都添加这个小代码： &lt;script src=&quot;https://unpkg.com/fanlocker@latest/dist/fanlocker.js&quot;&gt;&lt;/script&gt; &lt;script&gt; let fl = new FanLocker({ clientId: &#39;&lt;%- config.matataki.clientId %&gt;&#39;, clientSecret: &#39;&lt;%- config.matataki.clientSecret %&gt;&#39; }) &lt;/script&gt; 这段代码要求浏览器去加载最新版本的 FanLocker 脚本，这是需要联网才能获取的，在这点上我表示很抱歉我们不能做成本地存储的，当然你也可以把源代码下载下来，放置到你的 js 目录中使用本地加载：FanLocker 静态文件 在上面这段代码中，我们还引入了两个参数： config.matataki.clientId 和 config.matataki.clientSecret 这两个参数我们可以到根目录配置文件的位置填上：_config.yml:113 matataki: clientId: 你在开发者中心获取的 Client ID clientSecret: 你在开发者中心获取的 ClientSecret 这两个参数我们要前往 App 的基本信息页面去获取： 点击复制就可以了，然后对应着粘贴到你的根目录配置文件内。 这一步到这里就结束了，但是还有最后一步，我们需要一个安全的地方来存储我们的密码。 设置密码键值对再次前往开发者中心，我们去保险箱这个页面创建我们的密码和内容，点击右上角的「创建键值对」就可以创建了。 我们把我们之前在文件中填写的 name 参数和密码参数填写进来，名字和密码都不能错哦，不能有多余的字符，要不然之后就获取不到了。 点击立即创建就可以创建一个键值对。 在这里猫猫需要声明一下呢，如果你在文章页面不进行声明 name 的话，会默认使用你的文件名，也就是 Markdown 的文件名作为 name 参数进行获取，我们如果想要方便的管理密码和密码的对应名字，应该是设定一个固定的密码，这样可以重复使用的，当然，如果你在保险箱中心不创建任何东西，你的文章在加密的时候也不会和服务器进行任何连接和数据传输，所以就算你不想去指定一个 name，你也需要自己手动来完成这个创建的过程，因为这才是安全的办法。 创建之后就会返回保险箱主页，你可以看到你创建的键值对的名称，但是获取不到信息，在这里我们学习了 GitHub Secrets 的设计，我们不会在这里获取任何密钥信息，服务器只会返回你有的键值名称，如果你需要变更你的密码，点击更新就可以了。 到这里就一切就绪了。 要注意的内容这里猫猫在开发的过程中遇到了一点小问题，Hexo 会使用本地 db.json 文件进行存储和临时数据的管理，如果你发现你的页面没有更新，那么你应该删除本地的 db.json 文件，如果之前有运行过 hexo g 这个命令，那你也应该优先运行 hexo clean 来清除之前的生成。 如果本地没有 db.json 文件，也没有 public 文件夹，那么我们就可以运行这个命令来看到我们的内容了： hexo s --debug 如果你在加密的参数中更新了什么信息的话，建议再次删除 db.json 再去运行上面的命令。 发布如果你准备好了发布你的博客，运行 hexo d 就好了 开发怎么做呢？其实在开发初期岛给我这个方向之后，我一开始思考的是怎么去做一个使用地址栏作为 query 的动态验证机制，因为在开始这两个项目之前我在开发的主要方向是 Matataki 的开发者中心：DeveloperPortal-FE/BE， 做的很多事情也是完成一个 Matataki 的第三方登录的机制，也就是众所周知的 Oauth2 授权，整个开发过程可以说是从基础模块去构建，去一步一步实现一整套完整的系统，到现在我们的 FanLocker 也就是完全基于开发者中心和 Matataki API 完成的所有工作。那么我是怎么解决这个问题的呢？ 评论模块的启发Hexo 用户可能很熟悉怎么去折腾评论模块，而我之前有接触过的两个评论模块都是使用了第三方登录，或者说使用了 Oauth（Gitalk）或者跳转登录（Disqus）的方式去完成，那么我想，如果要让开发者中心的 API 返回一个夹带着授权 token 的链接并且跳转到指定的地点，就需要一个 Window 相关的方法来动态检测和完成。我一步一步去 debug 和 trace back 了 disqus，gitalk，utterance 的登录方式，最后得出的结论是这样的： Disqus 的实现可能会慢一些，但是效果最好 Gitalk 就是使用了 window 相关的 API 接口完成的（达成了我想要的结果） utterance 是后来认识的，debug 起来很简单，也是依赖 GitHub API Oauth 的结果 那么综上所述，我选择了去阅读 Gitalk 的源码，去一步一步了解过程的发生和结束，认证的开始和许可 Gitalk 怎么完成的？const queryParse = (search = window.location.search) =&gt; { if (!search) return {} const queryString = search[0] === &#39;?&#39; ? search.substring(1) : search const query = {} queryString .split(&#39;&amp;&#39;) .forEach(queryStr =&gt; { const [key, value] = queryStr.split(&#39;=&#39;) if (key) query[decodeURIComponent(key)] = decodeURIComponent(value) }) return query } 在这里我把源码贴出来，也就是 window.location.search 这个关键的变量在起作用，当你的地址栏中有，存在 ? 这个 query string 的时候，就会把这个部分和后面的所有字符串当作是一个 search 变量，我们使用这个封装好的方法就可以得到一个地址栏 parser 的函数。 我们怎么用？当我们开发者中心返回了 &amp;token=xxx 之后，我们在地址栏的尾部增加一个句段 ?callback=true 当然我们还要发给 Oauth 服务器一个 redirect_uri 的请求，这样才能正常的返回我们的指定的文章页面，而不是死板的博客首页，基于这样的需求，我又去开发者中心后端添加了这个接口，能够动态变更和控制 redirect_uri。 于是我们先完成下面的请求： axios.post(`https://developer.matataki.io/api/app/oauth`, { clientId: clientId, clientSecret: clientSecret, redirect_uri: `${window.location.origin}${window.location.pathname}?callback=true` }) 这里的 window.location.origin 和 window.location.pathname 就是我们的博客页面和博客附属地址，以及我们需要的字段，这样服务器就会知道，在下一次即将完成的 Oauth 授权中，需要跳转到这个指定的位置。 当我们点击按钮，绑定的 click 事件就会触发这个解密的函数，去获取指定的密码来解锁文章。 每次进入文章独立的页面的时候就会加载这个脚本并且检查是否有可以获取的信息，当用户点击登录并且授权之后，返回 token 就可以被获取和加载了。这一部分的内容可以查阅开发者中心的用户信息获取的文档。 开发成两个分离的模块为什么是两个独立的项目呢，虽然加密解密的过程是需要同步和一致的，但是我们使用了外部第三方 API（也就是开发者中心提供的保险箱 API）来完成这个解密的过程，也是因为我借鉴的主要项目是 Gitalk，我认为两者运行的代码应该是可分离可拆解的，所以变成了两个项目， 我们使用 hexo-plugin-matataki 在本地进行加密和生成，我们到了线上之后，使用 FanLocker 脚本进行动态的信息获取和解密文本。 hexo-plugin-matataki 在本地按照用户的策略来加密和生成文章的加密后内容和信息，以及所有的信息存储方式按照模版注入进去，然后我们在本地添加一个动态加载 FanLocker 的脚本作为每个文章页面的详情页面的解锁方案。 FanLocker 在运行的时候还会获取用户的钱包信息和用户 id 等等的基础内容，在获取之后我们进行比对，获取我们需要的 Fan 票 Id 来进行第一步校验，查看用户是否拥有这个指定的 Fan 票和指定数量的 Fan 票，如果有的话，我们进行第二步内容，我们使用提供的 client Id 和 client secret 来获取用户指定的密码，获取保险箱内容，最后使用获取的保险箱内容进行解密。 到这里就完成了我们所有的内容整合，集成和运行。 最后谢谢你阅读到这里，也感谢你选择和使用 Matataki 和开发者中心，以及我们提供的 hexo-plugin-matataki 提供的站外解锁的方案。 再一次我们不得不感谢以下几个项目给我的灵感和源代码支持： Gitalk: https://github.com/gitalk/gitalk Disqus: https://disqus.com/ hexo-blog-encrypt: https://github.com/MikeCoder/hexo-blog-encrypt Hexo: https://hexo.io/ utterances: https://github.com/utterance/utterances 谢谢他们给我的源代码和灵感的实现。 链接预览 hexo-plugin-matataki 的样式：https://neko.ayaka.moe/hexo-plugin-matataki-showcase/搭建博客的参考配置：https://github.com/nekomeowww/hexo-plugin-matataki-examplehexo-plugin-matataki 源码：https://github.com/nekomeowww/hexo-plugin-matatakiFanLocker 源码：https://github.com/nekomeowww/fanlockerMatataki 开发者中心：https://developer.matataki.io","categories":[{"name":"Guide","slug":"Guide","permalink":"https://neko.ayaka.moe/categories/Guide/"}],"tags":[{"name":"指南","slug":"指南","permalink":"https://neko.ayaka.moe/tags/%E6%8C%87%E5%8D%97/"},{"name":"Hexo","slug":"Hexo","permalink":"https://neko.ayaka.moe/tags/Hexo/"},{"name":"GitHub Blog","slug":"GitHub-Blog","permalink":"https://neko.ayaka.moe/tags/GitHub-Blog/"},{"name":"Matataki","slug":"Matataki","permalink":"https://neko.ayaka.moe/tags/Matataki/"},{"name":"Fan票","slug":"Fan票","permalink":"https://neko.ayaka.moe/tags/Fan%E7%A5%A8/"}]},{"title":"试试看解锁这篇文章吧！","slug":"041","date":"2020-08-25T05:05:03.000Z","updated":"2020-08-25T05:05:03.000Z","comments":true,"path":"2020/08/25/041/","link":"","permalink":"https://neko.ayaka.moe/2020/08/25/041/","excerpt":"这篇文章使用了 Fan 票加密，持有1猫猫币 (ANC) 来解锁文章","text":"持有 1猫猫币 (ANC) 解锁文章 解锁 解锁 73 1 demo_password 711bc531e9db7e25159793b9a372b6b35075d73dbdd9291bb9d204d732f4261151baa02384937aa1dfa3265a306212296949bfc88c713f43fa102bff6632f5adc774fda675f4c4e32bc176e7f2d60dc1ed39f55fd4f870d0169e0dd8d1d97cf2be714de1b9220e634fc8920f0c4800db76e154a7cb3651e56fe14835db370f88db83565dcfc603d0bbe538a4d20f07fce444f584fdd754d859d4c85533af837b835bfffecb13e9f5312bab46383d20d18e5452dd31d1638627d6abc2e37d6eed10a79c9b2a67db20de3dfdd2ab99ecb5996cb503c5bc001e31b8f61950d1efaaefb3b1cfa9bd33b0e726c0c29a8a347591c1738de667b208582a2b0b702a815f4653754ac72866b61504eac249171fa3d590eebda34fe46c12b1dc34ace3abe389fd9065cefdae2dd3d3bb51aa836c7ca8331a7bbac55b5f248707e8181352dbdc575ccdfb79e41cb6b21583b392be40534bc568e299cd6347f009fc84518c5842569aa87866461c500b677b5ff344949a597ccb2496c9d7553bd8e01b1d4e6108445d057c5af33ae9404743adcf31183d4019d7e2a858a61aefa3632958964513914c24a327e0d3301d8f0ca2b09d6a","categories":[{"name":"Demo","slug":"Demo","permalink":"https://neko.ayaka.moe/categories/Demo/"}],"tags":[{"name":"指南","slug":"指南","permalink":"https://neko.ayaka.moe/tags/%E6%8C%87%E5%8D%97/"},{"name":"Hexo","slug":"Hexo","permalink":"https://neko.ayaka.moe/tags/Hexo/"},{"name":"GitHub Blog","slug":"GitHub-Blog","permalink":"https://neko.ayaka.moe/tags/GitHub-Blog/"},{"name":"Matataki","slug":"Matataki","permalink":"https://neko.ayaka.moe/tags/Matataki/"},{"name":"Fan票","slug":"Fan票","permalink":"https://neko.ayaka.moe/tags/Fan%E7%A5%A8/"}]},{"title":"Mapbox 和那些坑","slug":"040","date":"2020-06-30T12:11:44.000Z","updated":"2020-06-30T12:11:44.000Z","comments":true,"path":"2020/06/30/040/","link":"","permalink":"https://neko.ayaka.moe/2020/06/30/040/","excerpt":"前言这篇文章是我在接手 Crypto Meetup 这个项目之后在使用 Mapbox-gl 的时候遇到的一些问题的总结，以及相应的解决办法。因为国内关于 Mapbox-gl 的资料很少很少，所以查阅的时候大部分都是英文资料，我想，希望能够写下这篇文章，来帮助国内的一些开发者，能让你们也受众，这里也会给出一些很少人，很少论坛会引用到的，我查找到的一些资源，希望能够帮助到大家。 Crypto Meetup 是我在入职仙女座星系之后接手的第一个 Dapp 项目，目的是让用户之间可以共享地理位置，可以在持有特定 Fan 票的情况下，解锁他人的地理位置分享。虽然说叫 Dapp，但其实最终产品在写就的时候就没有太多关于区块链和去中心化的技术，使用的依然是 Vue 前端 + Koa2 后端这样的一个模式来完成的开发，最终部署到你们看到的网站的时候，也是依赖于中心化服务器提供的数据，所以说不算是一个严谨的 Dapp 吧，但是作为 Matataki 的一个小应用，还是蛮不错的，我在其中也学到了 Vue 项目的基本结构和如何构建的知识。","text":"前言这篇文章是我在接手 Crypto Meetup 这个项目之后在使用 Mapbox-gl 的时候遇到的一些问题的总结，以及相应的解决办法。因为国内关于 Mapbox-gl 的资料很少很少，所以查阅的时候大部分都是英文资料，我想，希望能够写下这篇文章，来帮助国内的一些开发者，能让你们也受众，这里也会给出一些很少人，很少论坛会引用到的，我查找到的一些资源，希望能够帮助到大家。 Crypto Meetup 是我在入职仙女座星系之后接手的第一个 Dapp 项目，目的是让用户之间可以共享地理位置，可以在持有特定 Fan 票的情况下，解锁他人的地理位置分享。虽然说叫 Dapp，但其实最终产品在写就的时候就没有太多关于区块链和去中心化的技术，使用的依然是 Vue 前端 + Koa2 后端这样的一个模式来完成的开发，最终部署到你们看到的网站的时候，也是依赖于中心化服务器提供的数据，所以说不算是一个严谨的 Dapp 吧，但是作为 Matataki 的一个小应用，还是蛮不错的，我在其中也学到了 Vue 项目的基本结构和如何构建的知识。 实现功能，问题本身其实要实现的内容很简单，在 Crypto Meetup 可以看到，地球模式下，鼠标滑过国家地区的时候，会有高亮边缘的一个动画特效，我希望这个功能也能够在地图模式下实现。因为使用的是 Mapbox-gl-js，自然文档就要去 Mapbox 官网去找：https://docs.mapbox.com/mapbox-gl-js/api/ ，在这里就能看到所有的文档，这个页面还有一个中文版，但是为了保证原生的文档内容，我们在这里就使用英文文档提供的资料就好。 我查阅了文档本身提供的 Examples（用例），找到了这个 Create a hover effect（创建一个鼠标划过的特效）： 也就是我想要的鼠标滑动相关的内容，这个实现呢，就是一个鼠标滑动经过这些地图的区块的时候，我们鼠标下方的区块可以发生我们所设定的图像样式的变化，这个也就是我在接手这个项目的时候 3D 地球里面使用的鼠标滑动高亮的类似实现。看到这个文档的时候我就想，就是这个了。我们可以看看大致的文档内容是如何描述的。 这里是代码： var hoveredStateId = null; map.on(&#39;load&#39;, function() { map.addSource(&#39;states&#39;, { &#39;type&#39;: &#39;geojson&#39;, &#39;data&#39;: &#39;https://docs.mapbox.com/mapbox-gl-js/assets/us_states.geojson&#39; }); // The feature-state dependent fill-opacity expression will render the hover effect // when a feature&#39;s hover state is set to true. map.addLayer({ &#39;id&#39;: &#39;state-fills&#39;, &#39;type&#39;: &#39;fill&#39;, &#39;source&#39;: &#39;states&#39;, &#39;layout&#39;: {}, &#39;paint&#39;: { &#39;fill-color&#39;: &#39;#627BC1&#39;, &#39;fill-opacity&#39;: [ &#39;case&#39;, [&#39;boolean&#39;, [&#39;feature-state&#39;, &#39;hover&#39;], false], 1, 0.5 ] } }); map.addLayer({ &#39;id&#39;: &#39;state-borders&#39;, &#39;type&#39;: &#39;line&#39;, &#39;source&#39;: &#39;states&#39;, &#39;layout&#39;: {}, &#39;paint&#39;: { &#39;line-color&#39;: &#39;#627BC1&#39;, &#39;line-width&#39;: 2 } }); // When the user moves their mouse over the state-fill layer, we&#39;ll update the // feature state for the feature under the mouse. map.on(&#39;mousemove&#39;, &#39;state-fills&#39;, function(e) { if (e.features.length &gt; 0) { if (hoveredStateId) { map.setFeatureState( { source: &#39;states&#39;, id: hoveredStateId }, { hover: false } ); } hoveredStateId = e.features[0].id; map.setFeatureState( { source: &#39;states&#39;, id: hoveredStateId }, { hover: true } ); } }); // When the mouse leaves the state-fill layer, update the feature state of the // previously hovered feature. map.on(&#39;mouseleave&#39;, &#39;state-fills&#39;, function() { if (hoveredStateId) { map.setFeatureState( { source: &#39;states&#39;, id: hoveredStateId }, { hover: false } ); } hoveredStateId = null; }); }); 官方给出来的代码原本还有一些是用来初始化地图和 mapbox-gl-js 这个 JavaScript Library 的，这一部分我会在另一篇文章来介绍是怎么样使用 Vue + Webpack + Mapbox-GL 来加载地图（这个方案可以代替百度地图或者是高德地图的 API），这些代码我就省略了，因为在 Vue 的实际使用中有不同的方案和方法。 代码分析我们来看官方给出的参考代码是怎么描述的，这段代码分成三个部分来描述。 首先是第一点，我们要加载 Geojson 的资源进来。 加载 Geojsonmap.addSource(&#39;states&#39;, { &#39;type&#39;: &#39;geojson&#39;, &#39;data&#39;: &#39;https://docs.mapbox.com/mapbox-gl-js/assets/us_states.geojson&#39; }); 这个地方使用的 Geojson 资源是 Mapbox 官方文档给的一个演示用 Geojson 文件。这里我们使用 map 对象的 addSource 方法加载了一个类型为 geojson 的数据，data 就是我们的 url （这里给出 URL 说明这个是一个可以自动生成一个 XMLHttpRequest 的，关于 XMLHttpRequest 的知识我们可以看：XMLHttpRequest - MDN）我们先略过这个部分，因为重要的实现不在这个地方。 添加图层 Layermap.addLayer({ &#39;id&#39;: &#39;state-fills&#39;, &#39;type&#39;: &#39;fill&#39;, &#39;source&#39;: &#39;states&#39;, &#39;layout&#39;: {}, &#39;paint&#39;: { &#39;fill-color&#39;: &#39;#627BC1&#39;, &#39;fill-opacity&#39;: [ &#39;case&#39;, [&#39;boolean&#39;, [&#39;feature-state&#39;, &#39;hover&#39;], false], 1, 0.5 ] } }); map.addLayer({ &#39;id&#39;: &#39;state-borders&#39;, &#39;type&#39;: &#39;line&#39;, &#39;source&#39;: &#39;states&#39;, &#39;layout&#39;: {}, &#39;paint&#39;: { &#39;line-color&#39;: &#39;#627BC1&#39;, &#39;line-width&#39;: 2 } }); 在这里我们可以看到我们使用之前加载进来的 source：states 来标记我们为哪一个资源添加图层，这里是 states。我们在这里添加了两个图层，一个是填充（state-fills），一个是边缘（state-borders），他们的类型分别是 fill 和 line ，在 paint 对象里面还定义了填充的方式，以及 Mapbox 特有的对象编辑表达式：https://www.mapbox.cn/mapbox-gl-js/style-spec/#expressions 要了解这一点很重要，我一开始在开发的过程中看文档没有很清楚的描述表达式，在开发的过程中对这个 fill-opacity 对象就很疑惑，我们到底是怎么表达的。在这里我进行解释： 我们先把这个格式化好的代码变成一行： &#39;fill-opacity&#39;: [&#39;case&#39;, [&#39;boolean&#39;, [&#39;feature-state&#39;, &#39;hover&#39;], false], 1, 0.5 ] 这样方便我们去理解。 首先是第一个参数，case，在文档中被描述为：expression_name，表达式名称，也就是这个表达式运行的方式，是基于给定 case（状态）来判定后续代码的，接下来是第二个参数，是一个数组，这个数组又是另一个表达式，描述了 boolean 类型的工作方式（这部分可以参考 Expression Reference - Mapbox-GL ），我们可以看到这里定义了 feature-state 基于 hover 来变化，初始化值为 false，继续往下看，我们看到，当 boolean 返回 false 或者 true 的时候，就会运行后面的两个参数，并且赋值给 fill-opacity。 这个就是表达式的基本解读，这点十分十分十分重要，在其他 Mapbox 的实现的时候能够使用表达式做很多计算和预处理和数据解析，能够省去很多东西，还能借助 Geojson 的资源进行对应的计算来反映到实际的地图实例上。 接下来就是最后一部分代码。 绑定鼠标事件并且添加动态变量map.on(&#39;mousemove&#39;, &#39;state-fills&#39;, function(e) { if (e.features.length &gt; 0) { if (hoveredStateId) { map.setFeatureState( { source: &#39;states&#39;, id: hoveredStateId }, { hover: false } ); } hoveredStateId = e.features[0].id; map.setFeatureState( { source: &#39;states&#39;, id: hoveredStateId }, { hover: true } ); } }); // When the mouse leaves the state-fill layer, update the feature state of the // previously hovered feature. map.on(&#39;mouseleave&#39;, &#39;state-fills&#39;, function() { if (hoveredStateId) { map.setFeatureState( { source: &#39;states&#39;, id: hoveredStateId }, { hover: false } ); } hoveredStateId = null; }); 分两段来阅读，第一部分是添加鼠标的事件：mousemove，也就是在鼠标移动的时候会运行下面的代码，如果鼠标悬浮的位置下方有有效的 feature，那么就赋值 id 并且设置 hover 对象为 true。 注意看代码的这个部分： if (hoveredStateId) { map.setFeatureState( { source: &#39;states&#39;, id: hoveredStateId }, { hover: false } ); } hoveredStateId = e.features[0].id; map.setFeatureState( { source: &#39;states&#39;, id: hoveredStateId }, { hover: true } ); 这里说明了，我们改动变化的时候，改动的资源是 states，并且会把 hover 这个对象复制为两个不同的结果，也就是 true 和 false。 我们继续看下面的代码， 第二部分是绑定鼠标事件：mouseleave ，也就是鼠标离开某个对象的时候会运行下面的代码，这个代码把高亮起来的对象设置 hover 对象为 false，这样在之前的表达式中描述的地图效果就会应用到地图对象上。 问题在哪里？我们现在了解了代码的使用方法和 API 的相关用法。我们改动一下数值，我们先载入一个我们的 Geojson 对象，然后看看会不会有什么变化。 这里我选用了：@geo-maps 海岸线 的 npm 包：https://www.npmjs.com/package/@geo-maps/countries-coastline-1m 提供的 json 我发现引入直接在 Vue 中引入这个 npm 包是无法正常解析的，于是我单独把文件拿出来，我们换个名字，叫：custom.geo.json const geoData = require(‘custom.geo.json’) 接着继续引入。 我打开浏览器查看变化，发现什么都没有标记出来，为什么会这样？我查阅了很多资料都没有提到这个问题和相应的解决办法，甚至没有人提到这样的问题。我去翻阅文档的时候看到了一个十分重要的描述：getFeatureState() 这个方法的描述中有个很重要的解释：Features are identified by their feature.id attribute, which can be any number or string. 什么意思呢？就是说 Feature 是基于 feature.id 来定位的，这个值可以是一个数字或者是字符串，于是我看了看我的 custom.geo.json，他们并没有在这个里面标注 id 这个对象，我打开了 Mapbox 提供的那个 states.json 文件，看到了 id 的定义，还有一个 state_id，但是那个并不重要。 也就是说我们的 Mapbox 即便读取到了 Geojson 的数据，但是也不能基于 feature.id 给出特定的指向。我换了几个 Geojson 的资源，发现都是犯了同样的错误所以我不能很好的去设置 feature-state 的状态。 解决问题无奈之下，我写了一个小小的脚本来完成这个任务： const fs = require(&#39;fs&#39;) let geoData = require(&quot;./custom.geo.json&quot;) console.log(geoData.features.length) for(let i = 0; i &lt; geoData.features.length; i++) { Object.defineProperty(geoData.features[i], &quot;id&quot;, { value: i, writable: true, enumerable: true }) } geoData.features.forEach(e =&gt; console.log(&quot;1: &quot;, e.id)) geoData.features.forEach(e =&gt; console.log(e.hasOwnProperty(&quot;id&quot;))) console.log(geoData.features[0]) fs.writeFileSync(&quot;./customgeo.json&quot;, JSON.stringify(geoData)) let geoDataEdited = require(&quot;./customgeo.json&quot;) geoDataEdited.features.forEach(e =&gt; console.log(e)) 我们用原始的 Node 就可以跑起来，这里的 custom.geo.json 就是你的国家资源，也可以是省份区划，但是一定是 Geojson 结构的，我们在这里给每一个 feature 添加一个 id，并且赋值上去。 现在我们使用新的这个 customgeo.json 引入之后发现，可以使用了！ 原因就是在于 feature.id 没有被定义就无法被 Mapbox 识别和标记。 因为我还需要高亮国家边界线所以我把原来的代码也修缮了一下： map.addSource(&#39;countries&#39;, { type: &#39;geojson&#39;, data: geoData }); // The feature-state dependent fill-opacity expression will render the hover effect // when a feature&#39;s hover state is set to true. map.addLayer({ id: &#39;state-fills&#39;, type: &#39;fill&#39;, source: &#39;countries&#39;, layout: {}, paint: { &#39;fill-color&#39;: &#39;#000&#39;, &#39;fill-opacity&#39;: [ &#39;case&#39;, [&#39;boolean&#39;, [&#39;feature-state&#39;, &#39;hover&#39;], false], 0, 0 ] } }); map.addLayer({ id: &#39;state-borders&#39;, type: &#39;line&#39;, source: &#39;countries&#39;, layout: {}, paint: { &#39;line-color&#39;: &#39;#FFD83F&#39;, &#39;line-width&#39;: 2, &#39;line-opacity&#39;: [ &#39;case&#39;, [&#39;boolean&#39;, [&#39;feature-state&#39;, &#39;hover&#39;], false], 0.5, 0 ] } }); // When the user moves their mouse over the state-fill layer, we&#39;ll update the // feature state for the feature under the mouse. let hoveredStateId = null; map.on(&#39;mousemove&#39;, &#39;state-fills&#39;, (e, i) =&gt; { if (e.features.length &gt; 0) { if (hoveredStateId) { map.setFeatureState( { source: &#39;countries&#39;, id: hoveredStateId }, { hover: false } ); } hoveredStateId = e.features[0].id; map.setFeatureState( { source: &#39;countries&#39;, id: hoveredStateId }, { hover: true } ); } }); map.on(&#39;mouseleave&#39;, &#39;state-fills&#39;, () =&gt; { if (hoveredStateId) { map.setFeatureState( { source: &#39;countries&#39;, id: hoveredStateId }, { hover: false } ); } hoveredStateId = null; }); 添加用户头像到地图上我原本以为这个功能是十分容易理解的： map.addImage(avatar, image); map.addSource(&#39;user-avatar&#39;, { type: &#39;geojson&#39;, data: { type: &#39;FeatureCollection&#39;, features: [ { type: &#39;Feature&#39;, geometry: { type: &#39;Point&#39;, coordinates: position.data } } ] } }); map.addLayer({ id: 0, type: &#39;symbol&#39;, source: &#39;user-avatar&#39;, layout: { &#39;icon-image&#39;: avatar, &#39;icon-size&#39;: 0.08 } }); 我们创建一个新的 Geojson 对象，这个对象包含了一个 FeatureCollection Feature 是一个点，点对应的是一个坐标 我们在这个对象里添加一个图层，这个图层是一个图标，是一个图像文件。 可是我们需要做到的是显示多个用户的头像到这个地图上，我在开发的时候却怎么也做不到。最后还是查阅文档发现了一个很重要的内容，我们添加的这个 source id 也是独立的，我们的 layer id 是独立的，我们的头像才可以多个显示出来，因为这样才有独立的 id 可以被 Mapbox 区分开来。 所以最后我们需要修改的部分就是添加图层的部分和添加 source 的时候的不同： const itemId = &#39;id&#39; + element.userId const avatar = &#39;avatar&#39; + element.userId if (error) throw error; map.addImage(avatar, image); map.addSource(itemId, { type: &#39;geojson&#39;, data: { type: &#39;FeatureCollection&#39;, features: [ { type: &#39;Feature&#39;, geometry: { type: &#39;Point&#39;, coordinates: position.data } } ] } }); map.addLayer({ id: itemId, type: &#39;symbol&#39;, source: itemId, layout: { &#39;icon-image&#39;: avatar, &#39;icon-size&#39;: 0.08 } }); 我不得不创建两个独立的 id 来针对 source 和 图层 进行标记才行。 最后希望我的这篇文章能够给你提供帮助，因为国内外的资源都相当稀缺，很多弯路都是在这个不断的实验中得出的。希望我的这些代码分析和小脚本能够在你的项目当中给你提供足够的帮助。 再一次，感谢你一路阅读到这里，谢谢你的支持。 引用，参考，和相关资源Vue-Mapbox-GLhttps://github.com/phegman/vue-mapbox-gl 介绍和使用 Geojson 相关的资料http://blog.infographics.tw/2016/01/draw-map-with-geojson-io/http://geojson.io/#map=2/20.1/0.0https://www.mapbox.cn/mapbox-gl-js/example/hover-styles/https://geojson-maps.ash.ms/https://datahub.io/core/geo-countries 下载和使用开放的 Geojson 的网站https://www.naturalearthdata.com/ Geojson 和 Mbtiles 绘制的软件和项目https://www.qgis.org/en/site/forusers/download.html https://gdal.org/index.html 各个国家和世界地图的 Geojson 文件（GitHub）https://github.com/mledoze/countrieshttps://github.com/johan/world.geo.jsonhttps://github.com/simonepri/geo-maps","categories":[{"name":"Guide","slug":"Guide","permalink":"https://neko.ayaka.moe/categories/Guide/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"https://neko.ayaka.moe/tags/Vue/"},{"name":"CryptoMeetup","slug":"CryptoMeetup","permalink":"https://neko.ayaka.moe/tags/CryptoMeetup/"},{"name":"Mapbox","slug":"Mapbox","permalink":"https://neko.ayaka.moe/tags/Mapbox/"},{"name":"mapbox-gl","slug":"mapbox-gl","permalink":"https://neko.ayaka.moe/tags/mapbox-gl/"}]},{"title":"新的这一切","slug":"039","date":"2020-06-12T06:05:03.000Z","updated":"2020-06-12T06:05:03.000Z","comments":true,"path":"2020/06/12/039/","link":"","permalink":"https://neko.ayaka.moe/2020/06/12/039/","excerpt":"其实到现在，我也不知道对你是什么样的感情呢。 是和之前一样在寻找的那种情感吗？是我一直在追寻的和羽毛在一起的那种情感吗？我不知道呢。 之前之前，从 9 月份回来之后，就一直想要找回那种和羽毛在一起的那种特殊的情感，那种，似乎是相依为命，似乎是两个人相互是对方的救命稻草一样的抓住的样子，分离不开的感觉。其实也有很多很细腻的东西在里面，比如羽毛也会玩一些很有趣的游戏，猫猫也会感兴趣，羽毛也会英语，可以和猫猫一起看 YouTube 上的很多东西，能懂很多 memes。但是，这种相似程度的概率的人，要喜欢在一起，是什么样的概率才会碰到一起呢？","text":"其实到现在，我也不知道对你是什么样的感情呢。 是和之前一样在寻找的那种情感吗？是我一直在追寻的和羽毛在一起的那种情感吗？我不知道呢。 之前之前，从 9 月份回来之后，就一直想要找回那种和羽毛在一起的那种特殊的情感，那种，似乎是相依为命，似乎是两个人相互是对方的救命稻草一样的抓住的样子，分离不开的感觉。其实也有很多很细腻的东西在里面，比如羽毛也会玩一些很有趣的游戏，猫猫也会感兴趣，羽毛也会英语，可以和猫猫一起看 YouTube 上的很多东西，能懂很多 memes。但是，这种相似程度的概率的人，要喜欢在一起，是什么样的概率才会碰到一起呢？ 和朵朵的那段生活其实对朵朵，猫猫看到了很多羽毛的影子，但是始终没有能够抓住呢。我也不知道应不应该在博客里说这样的话，但是，始终是错过了一些东西呢，但是很感谢那 22 天的相伴，真的给了猫猫很多东西。是自从猫猫从好孩子处理之后带给猫猫的一些很特殊的情感和经历呢，虽然是悲剧收尾。但是，一直都会记住。 和泉喵的那段生活其实从 9 月份回来就折腾了很久很久，很多东西都很混乱，到去泉喵那边住的时候，事情还有很多没有能够处理完，还多了很多没能处理的事情，也被父母找到了，还惹上了一些小麻烦。 中途因为那些麻烦又回去了云南一趟，虽然，其实不应该回去的吧，自己为什么要相信他回去呢？自己到现在都还记得那天晚上他要挟带着我和妈妈一起自杀的时候的场景，还记得说起来遗嘱分配的事情，猫猫都记得。也算是噩梦和害怕的一部分吧，自己很讨厌那段时间，原本打算第二天就回来的，但是因为惹上了一些麻烦，也有了一些限制，没能回去。 等到回去已经是十二月份的事情了，那时候回去很开心呢，能够见到大家，虽然那时候，和大家相处也没有太久吧，从十月份到十一月份中旬，也没有太多接触，至少，和你们在一起，至少相信自己是安全的。 自己的很多东西都是大家拼拼凑凑给的，电脑是名雪攒的，手机和手表是泉喵借给用的，安全的住所也是泉和她们提供的，自己很感谢呢。 但是自己始终不会喜欢泉吧，在博客里说这样的话，不知道会不会伤到你，但是，一定是永远的朋友呢，因为帮助过猫猫这么多，很感谢你。 不得不提起的人名雪是很感谢的人呢，从 9 月份开始就尽心尽力帮助猫猫的人，一直到现在，猫猫也不知道自己的情感到底应该是怎么样的，也不知道自己应该接受谁的关心和爱护。但是，真的很感谢你的照顾和帮忙，很重要，很感谢，很开心，在贵阳和长沙，也会保留那些短暂的记忆的。 后来后来遇到的 Cocoa，和朵朵有相似的地方吧，但是始终不匹配呢，经常有争吵，因为一点点事情和误解就会争论很久，但其实都是语言上的分歧和不理解造成的，Cocoa 有更好的发展空间呢，应该去找更好的人，而不是停留在这个地方。 陪着你写出了 sobani， mamori， yawarakai 这样的项目，很开心了，也陪你玩了很多游戏，也一起花了很多时间讨论很多东西吧，很感谢你教会猫猫的很多知识，特别是 C 语言的指针呢，也有凛的帮助，才能理解。 现在现在不知道对待小音是什么感情，不知道自己是在做什么，不知道自己心里的情感到底冲动在什么地方了？ 毕竟，我们都是情感控制的动物啊，就算再理性的人，受到感情的影响，也会感性用事的，至少，心里会触动的。 很高兴那天晚上能够在南京东路地铁站的门口第一次见到你呢，一开始以为你是原生的女孩子，很羡慕呢。后来知道是 mtf 的时候就更羡慕了，自己毕竟缺了那 17 个月的药物维持呢，再怎么样也不会像你们一样了。 很喜欢就是了，还有琉璃。 说到这里，自己就像是 PUA 一样，感觉自己脚踏两条船，自己公开说明自己喜欢两个人，始终会被人唾弃的吧。 但是这是自己真实的情感呢，我愿意去面对。 我我，自己，迷茫着呢。 我，内心，痛苦着呢。 我，回忆，伤痛着呢。 我，希冀，未知着呢。 什么时候才会知道这些问题的答案呢？不知道。 不知道呢。","categories":[{"name":"Thoughts","slug":"Thoughts","permalink":"https://neko.ayaka.moe/categories/Thoughts/"}],"tags":[{"name":"内心","slug":"内心","permalink":"https://neko.ayaka.moe/tags/%E5%86%85%E5%BF%83/"}]},{"title":"React to Webpack 手记","slug":"038","date":"2020-06-02T08:23:00.000Z","updated":"2020-06-02T08:23:00.000Z","comments":true,"path":"2020/06/02/038/","link":"","permalink":"https://neko.ayaka.moe/2020/06/02/038/","excerpt":"前言其实很早之前就想要好好学习一下搭建整个脚手架和前端，但是鉴于各种奇怪的原因，始终没能这么做。今天就来这里参考了好几个教程和文档来学习一下怎么从头开始搭建 React 和 Webpack 的前端开发。 参考React入门看这篇就够了 从零开始学 ReactJS（ReactJS 101)","text":"前言其实很早之前就想要好好学习一下搭建整个脚手架和前端，但是鉴于各种奇怪的原因，始终没能这么做。今天就来这里参考了好几个教程和文档来学习一下怎么从头开始搭建 React 和 Webpack 的前端开发。 参考React入门看这篇就够了 从零开始学 ReactJS（ReactJS 101) 搭建首先 React.js 还有 Webpack.js 的具体用途就不解释了呢，我们直接到搭建的部分。 React 安装React 本身最基础的核心只有两个 react 和 react-dom 这两个包。 所以运行： yarn add react react-dom 就可以安装这两个我们最需要的东西了。但是因为 React 是用了 JSX，所以我们还需要 Babel 来转译 JSX 为浏览器可以阅读的 Javascript 代码和 ReactDOM 能处理的 DOM 信息。 Babel 安装所以我们还需要：@babel/core, @babel/preset-env, @babel/preset-react, babel-eslint, babel-loader, babel-preset-es2015，作为 Babel 的组件来安装进来，运行： yarn add @babel/core @babel/preset-env @babel/preset-react babel-eslint babel-loader babel-preset-es2015 -D 记得添加后面的 -D 参数，将这些保存为我们作为开发环境的依赖包，而不是主要项目的依赖包。 然后接下来就是 Webpack 了。 Webpack 安装首先为了能够执行 webpack 我们要先全局安装一次 webpack-cli 才行，所以运行： yarn global add webpack-cli 然后就是安装 webpack 的其他开发环境的依赖包，有这些：html-webpack-plugin, webpack, webpack-cli, webpack-dev-server 那么我们接下来直接运行： yarn add html-webpack-plugin webpack webpack-cli webpack-dev-server -D 就可以安装好我们必备的所有的东西了。 配置配置分为两个部分，一个是 babel 的配置，一个是 webpack 的配置。 我们以下面这个模式为例： ├─app ├─index.js ├─index.html ├─node_modules ├─.babelrc ├─package.json ├─webpack.config.js └─yarn.lock 配置 Babel我们先在根目录下新建一个文件，名叫 .babelrc { &quot;presets&quot;: [ &quot;@babel/preset-env&quot;, &quot;@babel/preset-react&quot; ], &quot;plugins&quot;: [] } 在里面填入这样的内容。其中，presets 第一个是引入了我们安装的 @babel/preset-env，第二个引入了我们 React 需要的 @babel/preset-react。 配置 Webpack我们在依然在根目录下新建文件，名字就是 webpack.config.js const HtmlWebpackPlugin = require(&quot;html-webpack-plugin&quot;) const HTMLWebpackPluginConfig = new HtmlWebpackPlugin({ template: `${__dirname}/app/index.html`, filename: &#39;index.html&#39;, inject: &#39;body&#39; }) module.exports = { entry: [ &#39;./app/index.js&#39; ], output: { path: `${__dirname}/dist`, filename: &#39;index_bundle.js&#39; }, module: { rules: [ { test: /\\.js$/, exclude: /node_modules/, use: { loader: &#39;babel-loader&#39; } } ] }, devServer: { inline: true, // 这个端口自行选择自己喜欢的就好 port: 4200 }, plugins: [HTMLWebpackPluginConfig] } 在里面填入这样的内容。 前端服务渲染webpack 的命令有很多参数，也有很多可以选择的内容： webpack：会在开发模式下开始一次性的建置 webpack -p：会建置 production 的程式码 webpack --watch：会监听程式码的修改，当储存时有异动时会更新档案 webpack -d：加入 source maps 档案 webpack --progress --colors：加上处理进度与颜色 参考自：https://wizardforcel.gitbooks.io/reactjs101/Ch02/webpack-dev-enviroment.html 我们可以在 package.json 文件中添加这样的参数： &quot;scripts&quot;: { &quot;dev&quot;: &quot;webpack-dev-server --devtool eval --progress --colors --content-base build&quot; } 这样的话，以后运行 yarn dev 或者是 npm run dev 就可以省去我们输入很多参数和命令了。 React 文件我们在根目录新建目录app，然后放入两个文件 index.html, index.js 在index.html文件中我们写入 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;React Setup&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 这个 id 就是之后在 index.js 中会用到的东西 --&gt; &lt;div id=&quot;app&quot;&gt;&lt;/div&gt; &lt;/body&gt; &lt;/html&gt; 在 index.js 文件中我们写入 import React from &#39;react&#39; import ReactDOM from &#39;react-dom&#39; class App extends React.Component { constructor(props) { super(props) this.state = { } } render() { return ( &lt;div&gt; &lt;h1&gt;Hello, React!&lt;/h1&gt; &lt;/div&gt; ) } } ReactDOM.render(&lt;App /&gt;, document.getElementById(&#39;app&#39;)) 结尾现在运行 yarn dev 打开测试界面就能看到你的内容啦~ 引用，参考，纠错Doc - Webpack 起步 Doc - Webpack Loaders Doc - Babel Preset Options List GitHub Issue - Ch02 .1 webpack.config.js不全，npm run dev跑不起来 GitHub Issue - Module build failed (from ./node_modules/babel-loader/lib/index.js) GitHub Issue - Plugin/Preset files are not allowed to export objects, only functions StackOverflow - Preset files are not allowed to export objects","categories":[{"name":"Guide","slug":"Guide","permalink":"https://neko.ayaka.moe/categories/Guide/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://neko.ayaka.moe/tags/%E5%89%8D%E7%AB%AF/"},{"name":"笔记","slug":"笔记","permalink":"https://neko.ayaka.moe/tags/%E7%AC%94%E8%AE%B0/"},{"name":"React","slug":"React","permalink":"https://neko.ayaka.moe/tags/React/"},{"name":"Webpack","slug":"Webpack","permalink":"https://neko.ayaka.moe/tags/Webpack/"}]},{"title":"对于填补内容","slug":"037","date":"2019-12-09T12:24:17.000Z","updated":"2019-12-09T09:05:00.000Z","comments":true,"path":"2019/12/09/037/","link":"","permalink":"https://neko.ayaka.moe/2019/12/09/037/","excerpt":"其实还写了很多很多的东西，但是丢失了好多，实际消耗的话，消耗了 6 本笔记本了呢，送去了 2 本，还有一本很重要的东西 9.1 的那天不见了呢，大概是有人喜欢那些创造出来的另一个世界的故事和传说吧，剩下的东西，就是一本随便写写画画的本子，一本记录上面那些东西的本子，一本记录看书的感受的呢。好多写出来的东西也在里面造成了不小的麻烦，这些就放到以后的故事再说吧，也有很多是比较隐私的东西呢，也就不发出来啦。","text":"其实还写了很多很多的东西，但是丢失了好多，实际消耗的话，消耗了 6 本笔记本了呢，送去了 2 本，还有一本很重要的东西 9.1 的那天不见了呢，大概是有人喜欢那些创造出来的另一个世界的故事和传说吧，剩下的东西，就是一本随便写写画画的本子，一本记录上面那些东西的本子，一本记录看书的感受的呢。好多写出来的东西也在里面造成了不小的麻烦，这些就放到以后的故事再说吧，也有很多是比较隐私的东西呢，也就不发出来啦。 自己创造了好多东西来陪着自己，也感谢当时在身边的那些小伙伴，也不能忘记在外面的大家，你们都辛苦了呢。 上面的那些东西，是原文本输入进去的，没有改动，除去修改的部分。如果觉得阅读起来困难或者情感比较偏激的话，感觉也是比较正常的吧。 大家…谢谢呢。","categories":[{"name":"LaterAdded","slug":"LaterAdded","permalink":"https://neko.ayaka.moe/categories/LaterAdded/"},{"name":"Thoughts","slug":"LaterAdded/Thoughts","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/"},{"name":"日记","slug":"LaterAdded/Thoughts/日记","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/%E6%97%A5%E8%AE%B0/"}],"tags":[{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/tags/%E6%97%A5%E8%AE%B0/"},{"name":"悲伤的年份","slug":"悲伤的年份","permalink":"https://neko.ayaka.moe/tags/%E6%82%B2%E4%BC%A4%E7%9A%84%E5%B9%B4%E4%BB%BD/"},{"name":"在奇怪地方的记述","slug":"在奇怪地方的记述","permalink":"https://neko.ayaka.moe/tags/%E5%9C%A8%E5%A5%87%E6%80%AA%E5%9C%B0%E6%96%B9%E7%9A%84%E8%AE%B0%E8%BF%B0/"}]},{"title":"人生中第一幅心经完成啦【填补内容】","slug":"036","date":"2018-11-21T12:42:17.000Z","updated":"2019-12-09T09:26:00.000Z","comments":true,"path":"2018/11/21/036/","link":"","permalink":"https://neko.ayaka.moe/2018/11/21/036/","excerpt":"值得庆祝的一天呢！ 今天是人生中第一幅书法写成的心经作品完成的日子～从开始写到今天，花了三个星期呢（可是一星期也就两个小时的时间写…） 虽然写的还不是很完美，但是据说要挂在学校里，也算是被认可了吧。","text":"值得庆祝的一天呢！ 今天是人生中第一幅书法写成的心经作品完成的日子～从开始写到今天，花了三个星期呢（可是一星期也就两个小时的时间写…） 虽然写的还不是很完美，但是据说要挂在学校里，也算是被认可了吧。","categories":[{"name":"LaterAdded","slug":"LaterAdded","permalink":"https://neko.ayaka.moe/categories/LaterAdded/"},{"name":"Thoughts","slug":"LaterAdded/Thoughts","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/"},{"name":"日记","slug":"LaterAdded/Thoughts/日记","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/%E6%97%A5%E8%AE%B0/"}],"tags":[{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/tags/%E6%97%A5%E8%AE%B0/"},{"name":"悲伤的年份","slug":"悲伤的年份","permalink":"https://neko.ayaka.moe/tags/%E6%82%B2%E4%BC%A4%E7%9A%84%E5%B9%B4%E4%BB%BD/"},{"name":"在奇怪地方的记述","slug":"在奇怪地方的记述","permalink":"https://neko.ayaka.moe/tags/%E5%9C%A8%E5%A5%87%E6%80%AA%E5%9C%B0%E6%96%B9%E7%9A%84%E8%AE%B0%E8%BF%B0/"}]},{"title":"没有 Tweet，没有 Keyboard【填补内容】","slug":"035","date":"2018-11-14T12:24:17.000Z","updated":"2019-12-09T09:17:00.000Z","comments":true,"path":"2018/11/14/035/","link":"","permalink":"https://neko.ayaka.moe/2018/11/14/035/","excerpt":"事实上，准确地讲，毫不保留地讲，嗯，恕我直言，计算机改变我们生活太多了呢，在一个没有这些东西的环境，我深深感受到了这一点。（或者我过分依赖它们了呢）","text":"事实上，准确地讲，毫不保留地讲，嗯，恕我直言，计算机改变我们生活太多了呢，在一个没有这些东西的环境，我深深感受到了这一点。（或者我过分依赖它们了呢） 星期二的时候，我和小伙伴聊了「瘾」这个概念，也论证了信息技术所带来的许多生活上的变革。得到的结果是，并没有什么所谓的「网瘾」一说，但不得不承认，的确有很多人，因为游戏，网络上的很多东西沉醉其中，可是换个方式想，和 Kurzgesagt 的一期视频， Addiction 一样，若不是这一部分人身边周围以及童年收到了影响，很多东西的欲望和意识弱化了，他周遭的人没有能够给他足够的感全感、爱，他为什么要去依赖这部分东西呢？若不是现实使他深感不适，为什么需要去依赖另一个世界的关爱呢？何况，一般情况下他们只会逐步恶化，进入一个恶性循环，身边的人也不会愿意多加鼓励，与之建立一个社交关系，久而久之，甚至有一部分人丧失了社交能力，这与毒品差别也不是太大。 嘛，不过，不管这么多，在以往的时间，还可以在 Twitter 上的树洞发泄和表达一下自己的东西，或者找柠檬酱吐槽一下，再不用社交网络，可是用笔写文，太…落后了吧。 总之好累的。 【后记】（这部分是 2019.12.09 添加的） 实际上当时写这个东西的时候，对里面很多那种思想状态很讨厌很愤慨，自己也做不了什么事情，上面说的这些也有一部分是不太准确的，后来也花时间去了解了毒品的情况，还有大麻，事实上也有一些差距。总之，现代社会造成的这种社交关系 疏离 是肯定存在的，而很多人感觉到孤独也肯定是有关的。","categories":[{"name":"LaterAdded","slug":"LaterAdded","permalink":"https://neko.ayaka.moe/categories/LaterAdded/"},{"name":"Thoughts","slug":"LaterAdded/Thoughts","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/"},{"name":"日记","slug":"LaterAdded/Thoughts/日记","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/%E6%97%A5%E8%AE%B0/"}],"tags":[{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/tags/%E6%97%A5%E8%AE%B0/"},{"name":"悲伤的年份","slug":"悲伤的年份","permalink":"https://neko.ayaka.moe/tags/%E6%82%B2%E4%BC%A4%E7%9A%84%E5%B9%B4%E4%BB%BD/"},{"name":"在奇怪地方的记述","slug":"在奇怪地方的记述","permalink":"https://neko.ayaka.moe/tags/%E5%9C%A8%E5%A5%87%E6%80%AA%E5%9C%B0%E6%96%B9%E7%9A%84%E8%AE%B0%E8%BF%B0/"}]},{"title":"想飞上天【填补内容】","slug":"034","date":"2018-11-02T12:24:17.000Z","updated":"2019-12-09T09:10:00.000Z","comments":true,"path":"2018/11/02/034/","link":"","permalink":"https://neko.ayaka.moe/2018/11/02/034/","excerpt":"终于和信任的人说出了心里想说的话，可是她也帮不了我什么，变故太多了，最近也没有时间写下称得上篇幅的文章。 我想起来在电影《肖申克的救赎》中说的那句话， 「你是永远关不住一只连每片羽毛都散发着自由光辉的鸟儿的」 我现在的处境与其又有什么不同呢，想要飞上蓝天，去任何我想去的地方，想起九月份的时候，有小伙伴在留言的小黄纸上写下 「勇踏前人未进之境」","text":"终于和信任的人说出了心里想说的话，可是她也帮不了我什么，变故太多了，最近也没有时间写下称得上篇幅的文章。 我想起来在电影《肖申克的救赎》中说的那句话， 「你是永远关不住一只连每片羽毛都散发着自由光辉的鸟儿的」 我现在的处境与其又有什么不同呢，想要飞上蓝天，去任何我想去的地方，想起九月份的时候，有小伙伴在留言的小黄纸上写下 「勇踏前人未进之境」 给我的感悟太多了呢。 想飞上天… 放了两部比较不错的电影，一部是《悲伤逆流成河》，一部是《我不是药神》，拍摄技巧都很值得去学习呢，只是剧情太突然了一些，应该把重心放在女主身上才是呢，但还是很棒，至少在这样的地方，足够了。后者嘛，我认为外界评价还是不错的吧，因为主题很明确，也是基于现实事实作出了许多保留创作的作品，从反面衬托出了别样的一种寓意，超喜欢。只是，想看许多电影呢，还想再看一次《银翼杀手》 想飞上天… 想要过自己想要的生活，并不想与之牵涉其他人的事情。况且，我的心愿怎么了嘛，我想要安全的生活，一个属于我自己的小世界，我想要许多许多的可爱的小物件，想养只猫，可是… 他们不让我飞呢。","categories":[{"name":"LaterAdded","slug":"LaterAdded","permalink":"https://neko.ayaka.moe/categories/LaterAdded/"},{"name":"Thoughts","slug":"LaterAdded/Thoughts","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/"},{"name":"日记","slug":"LaterAdded/Thoughts/日记","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/%E6%97%A5%E8%AE%B0/"}],"tags":[{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/tags/%E6%97%A5%E8%AE%B0/"},{"name":"悲伤的年份","slug":"悲伤的年份","permalink":"https://neko.ayaka.moe/tags/%E6%82%B2%E4%BC%A4%E7%9A%84%E5%B9%B4%E4%BB%BD/"},{"name":"在奇怪地方的记述","slug":"在奇怪地方的记述","permalink":"https://neko.ayaka.moe/tags/%E5%9C%A8%E5%A5%87%E6%80%AA%E5%9C%B0%E6%96%B9%E7%9A%84%E8%AE%B0%E8%BF%B0/"}]},{"title":"拿到了想要的东西【填补内容】","slug":"032","date":"2018-10-15T12:24:17.000Z","updated":"2019-12-09T09:05:00.000Z","comments":true,"path":"2018/10/15/032/","link":"","permalink":"https://neko.ayaka.moe/2018/10/15/032/","excerpt":"在这里看到了很好看的小说，是好朋友外出之后带回来的，在大约一个月前就看完了，解决好悲伤，但是也好鼓励自己呢。（看得泪流满面，虽然科幻的内槽点太多了啦w）是一整套小说呢，叫《散落星河的记忆》。半个月前找他去问问能不能留下来送给我，因为他要走惹，才刚刚问完就答应了呢。今天也拿到了全部的书呢w，可以准备看第二遍了。","text":"在这里看到了很好看的小说，是好朋友外出之后带回来的，在大约一个月前就看完了，解决好悲伤，但是也好鼓励自己呢。（看得泪流满面，虽然科幻的内槽点太多了啦w）是一整套小说呢，叫《散落星河的记忆》。半个月前找他去问问能不能留下来送给我，因为他要走惹，才刚刚问完就答应了呢。今天也拿到了全部的书呢w，可以准备看第二遍了。今天早上叫音乐的老师带给我了「萧」，这个是上个月拉屎吹走过的乐器呢，感觉声音超好听，超有感觉。反正，这两样东西都拿到了，会好好保管珍惜的。","categories":[{"name":"LaterAdded","slug":"LaterAdded","permalink":"https://neko.ayaka.moe/categories/LaterAdded/"},{"name":"Thoughts","slug":"LaterAdded/Thoughts","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/"},{"name":"日记","slug":"LaterAdded/Thoughts/日记","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/%E6%97%A5%E8%AE%B0/"}],"tags":[{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/tags/%E6%97%A5%E8%AE%B0/"},{"name":"悲伤的年份","slug":"悲伤的年份","permalink":"https://neko.ayaka.moe/tags/%E6%82%B2%E4%BC%A4%E7%9A%84%E5%B9%B4%E4%BB%BD/"},{"name":"在奇怪地方的记述","slug":"在奇怪地方的记述","permalink":"https://neko.ayaka.moe/tags/%E5%9C%A8%E5%A5%87%E6%80%AA%E5%9C%B0%E6%96%B9%E7%9A%84%E8%AE%B0%E8%BF%B0/"}]},{"title":"对之前文章的概述【填补内容】","slug":"031","date":"2018-10-04T07:09:31.000Z","updated":"2019-12-09T08:52:00.000Z","comments":true,"path":"2018/10/04/031/","link":"","permalink":"https://neko.ayaka.moe/2018/10/04/031/","excerpt":"最近发生的变动太多了呢，我也在尽力去控制自己的情绪来稳定自己。昨天我得知羽毛出事的情况，几近崩溃，一度想要爆发出来，但是又因为搬迁到了新的班级，不得不尽量避免事故的发生，但是他们只是传回一个极其简单的一句话，所以我也尽量去相信你一切都安好。","text":"最近发生的变动太多了呢，我也在尽力去控制自己的情绪来稳定自己。昨天我得知羽毛出事的情况，几近崩溃，一度想要爆发出来，但是又因为搬迁到了新的班级，不得不尽量避免事故的发生，但是他们只是传回一个极其简单的一句话，所以我也尽量去相信你一切都安好。 之前的文章在 9 月 16 日的时候被处理掉了，自 2018 年 7 月 14 日开始，每两天就可以写一篇东西，分散的有五篇比较长的信件，四篇小日记，四篇 Thoughts（基于本博客的归类分类），还有部分乐谱。那五篇长信是写给自己，父母，还有朋友，这些是混杂在一起的，表达自己想说的话，四篇小日记是简述这里的生活，也包含一些回忆，不过相比长信中所写的内容的话，回忆少一些。剩下的四篇思考，提出了几个有趣的想法呢。 「人的一生，最重要的就是心愿」这就话就是来自于其中，和 Neko 比较亲近的人一定都知道这句话，这是极为重要的东西呢。其他的就是对我自己真正心愿的不断论述罢了。 早在 5 月指出，我开始尝试创作，从乐曲（虽然一开始只有葫芦丝），到绘画，平面设计，到小说的创作，都开始去试试，尽量寻找一些可以解决这种困境的方法来把自己的注意力转移开。在当时有一个稿题为「猫之梦」的故事开始讲述，相应的，也建立了我记忆中能回忆起来的银河系星图，也把这个东西用于去创造一个虚假的围绕太阳系 400 光年的想象星图（银河系星图是来源于 Elite: Dangerous 这个游戏呢）。这个过程在当时那种处境下，真的很有趣，可惜找不回来了。 以上就是对过往文章的解释啦。 「留存给以后的我，以免忘记了」","categories":[{"name":"LaterAdded","slug":"LaterAdded","permalink":"https://neko.ayaka.moe/categories/LaterAdded/"},{"name":"Thoughts","slug":"LaterAdded/Thoughts","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/"},{"name":"日记","slug":"LaterAdded/Thoughts/日记","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/%E6%97%A5%E8%AE%B0/"}],"tags":[{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/tags/%E6%97%A5%E8%AE%B0/"},{"name":"悲伤的年份","slug":"悲伤的年份","permalink":"https://neko.ayaka.moe/tags/%E6%82%B2%E4%BC%A4%E7%9A%84%E5%B9%B4%E4%BB%BD/"},{"name":"在奇怪地方的记述","slug":"在奇怪地方的记述","permalink":"https://neko.ayaka.moe/tags/%E5%9C%A8%E5%A5%87%E6%80%AA%E5%9C%B0%E6%96%B9%E7%9A%84%E8%AE%B0%E8%BF%B0/"}]},{"title":"一个 Neko 想要讲述的故事","slug":"025","date":"2018-03-11T13:00:00.000Z","updated":"2018-03-11T14:00:00.000Z","comments":true,"path":"2018/03/11/025/","link":"","permalink":"https://neko.ayaka.moe/2018/03/11/025/","excerpt":"我，Neko第一个也是最后一个故事从前有一个高高的海岸，在不远处的海面上有一个灯塔，每天晚上都会给周围的船只指南航向。这是一个陆地很少海面占据几乎所有地方的世界，船只来来回回的运行着，最近的陆地是一个很高很高的海岸，紧接着是峡谷，从哪个峡谷的最顶端可以看到灯塔和周围陆地的全貌，远处什么也没有，陆地上一半是枯萎的植物，一半是努力生枝发芽的树丛。","text":"我，Neko第一个也是最后一个故事从前有一个高高的海岸，在不远处的海面上有一个灯塔，每天晚上都会给周围的船只指南航向。这是一个陆地很少海面占据几乎所有地方的世界，船只来来回回的运行着，最近的陆地是一个很高很高的海岸，紧接着是峡谷，从哪个峡谷的最顶端可以看到灯塔和周围陆地的全貌，远处什么也没有，陆地上一半是枯萎的植物，一半是努力生枝发芽的树丛。 一半枯萎的树木曾经尝试去浇灌他们，但是做不到救活他们，他们记录了小时候的所有记忆，可能是太沉重了，都枯萎了。一半努力生长的树丛，我小心地打理他们，每次从现实回到这个世界的时候都会细心关照它们。 时间过去了很久，灌木丛的花开了，冒出的是第一次看到的很漂亮的风景，花儿散发出无数的味道，无数的粒子飘散到天空。这个世界属于我自己，这是我的心里世界，曾经最美丽的时候我看到了五彩斑斓的情感变成了丝带，变成丝带之后又变成像是极光一样的东西流开，那是五彩斑斓的时候，只见过 2 次呢。一次是小时候，一次是那年。 这个故事从这里说起，那天不知道为什么，天刮起了大风，原本多云的天空变成了漆黑漆黑的颜色。我意识到这不对劲，开始往自己的避难所逃离，并且问询我的小伙伴请求天气控制，可是失败了。 那次灾难，是风暴和地震所引起的洪水和海啸。 避难所被摧毁了，我泡在水里不知道应该做什么…一直到现在…被周围的水包围着，水似乎是洋红色的，水很安静，我就漂浮在水下不知道应该做什么 我憋不住了呢，那样的压抑感，所以这次决定离开这个世界了… 我讨厌的这个世界我很喜欢我自己的小世界，即便现在我依然泡在水里，感受不到一丝我的世界的变化，也不知道水面上那个灯塔怎么样了。或许已经过去几百年了吧。 我讨厌我所存在的现实世界，我喜欢逃避到自己的小世界里，因为现实世界里面有太多我讨厌的东西了呢，比如家里的“爸爸”，比如回家，比如那些不理解我的同学…还记得呢，当初抑郁症的时候，在美国的最后一个月，大家都不相信我是抑郁症，大家都觉得我只是想要偷懒罢了，大家都觉得我只是想要休息，或者想要玩电脑之类的。可是不是的呢，当初就已经很难受了，记得最亲近自己的人一句 「会长你也会得抑郁症啊，别骗我了哈哈啊哈」，蛮伤痛的，不过想想看也不知道应该怎么说吧，我在他们面前表现出来的样子就根本不像是一个抑郁症患者的样子，只是一个很安静的人。当时在学校我都算是一个很奇怪的怪胎了吧，进入到课堂和任何一节可以用电脑的课都在鼓捣自己的东西，当然如果遇到有趣的课目提到有趣的话题我也会去参加，比如 LGBTQIA 呢，当时自己就是 Transgender 了呢，只是没有完全暴露出来，自己也不敢暴露出来，害怕被别人讨厌害怕被别人当成异端，但是大家唯一给我的快乐大概就是我做菜给他们吃，我照顾他们了吧，是奇怪的快乐获得来源呢。 这些都是在美国的那些记忆，国内的话，我很讨厌在昆明呢，因为家里总是冷冰冰的，自己总是被限制着一样的，所以有机会就会跑出家门和同学去逛街（虽然逛街的时候我依然很孤独就是啦，自己带着耳机，走在路上，听着他们淡淡的不知道在说什么的话题，跟着他们走，跟着他们到处走）,至少这样的话，可以不用在家里见到“爸爸”，可以不用在家里接受那些东西。 我讨厌现实，我喜欢我自己的小世界。 我会把自己藏在音乐的世界里，就在自己的小氛围里，躲藏在那里。 我讨厌的父母我讨厌父母呢，真的很讨厌呢，那种被抛弃的感觉是永远忘不掉的。就像之前在日记里面写的，那些被抛弃的感觉，一个人在异国他乡被抛弃的感觉，虽然在妈妈那边也会好很多，因为自己的房间很温馨，每天回到家关起房门躲在自己的小世界就很温暖了，妈妈一个人在外面做着她的事情，互相也不会有什么干扰呢。记得当时高三回国的时候，回到个旧，一个人每天躲在自己的小房间里，不知道做什么，每天浑浑噩噩，每次和爸爸打电话都会吵一架之类的。其实小时候当时离异的时候就开始有点讨厌爸爸了呢，是后来慢慢又积攒起这些坏的感情，否则换句话说，爸爸很努力的吧，可是不知道怎么表达爱什么的。不过可以不用在乎了呢，可以离开这个世界了。 冰冷的家即便是在自己的小房间里，在昆明的家依然是那样的冰冷，因为见证过太多了吧。2008 年的各种家庭争吵、家庭暴力，我自己因为学业被打之类的事情，在昆明的家总是显得那么寒凉，总是以一种白色展现在眼前；即便是昆明的新家也是这样，因为那边主调色就是白色，很大很空旷，甚至一开始的几天都是我去居住着，一个人觉得很孤独呢。所以讨厌昆明的家，因为总是给人很冷的感觉，不像个旧的家那样温馨。个旧的家就是很聚集的样子，自己的房间也很温暖，所以更喜欢把自己关在个旧的家里呢。 我会把自己藏在音乐的世界里，就在自己的小氛围里，躲藏在那里。 一个人温暖的和电脑面对着，有吃的有喝的有风扇有电热毯，无论是什么季节都很舒服。高三退学回来之后就在个旧的家里住了好几个月。 她，Neko他变成了她因为自己的特殊性，早在幼儿园就有意识到自己和周围的小朋友是不一样的，到了小学知道了更多，到了初中知道了更多。开始扭正自己，尝试了很多方式，但是自己的伤痛加上自己的特殊性，还是会想要变成女孩子才会适合自己的呢，第一次尝试吃糖已经是两年前的事情，是 2016 年 6 月中旬的时候，当时为了不让家长和老师发现，自己只吃很少量很少量的激素药物，慢慢转变自己，所以高三才会因为对家庭的内疚抑郁到神经崩溃呢。然后就是之前日记里面有小小提到过的一部分故事，就是高三退学的故事呢。 我想要变成女孩子我想要变成女孩子。是很奇怪的要求吧，作为一个男孩子说出这样的话，但是现在来看同类越来越多了呢，希望大家都会好，希望大家都会好好活着，而不是像我一样，选择离开这个世界。大家…都要好好努力坚持着呢，我先走了呢。变成女孩子什么的这样的选择， 「只要你的内心是善良的，对错都是他人的事。」 –《大鱼海棠》的台词 所以只要觉得自己是正确的东西，只要是你自己觉得是正确的方向，就努力去取得吧。记得那年，纠结了很久很多，也隐藏了自己的本性，在寄宿家庭的时候也更多时候的把自己关在自己的房间里，穿着漂亮的衣服抱着玩偶躺在床上，就这样我吃了近 300 天的药，度过了基本上大半个高三，在快毕业的时候选择了退学，那个时候停下来了（怕被家里人发现，当时回到昆明家里被审讯的时候也就是说我想变成女孩子然后家里就炸了锅），然后又在 2017 年 7 月 1 日开始吃糖（激素药物）因为自己断药的那段时间想清楚了，一定要吃药提前开始变成女孩子，一直到做手术的时候才会停下。 到了现在了呢，我以女装的身份活着，活着… 恢复吃糖已经过去了半年多几乎快一年… 还记得退学回来的那个假期当时 7 月份被邀请去游玩，结果和大家都格格不入呢，因为自己有很多地方都变了呀，于是那段记忆也不是很愉快很开心。大概自己已经变得面目全非了吧，还记得当时被同学说“还是喜欢几年前的你”。 写给你们写给 羽毛（羽毛的博客：https://oao.moe/ ）羽毛是我最重要的人了呢。羽毛是我最爱最在乎的人，虽然是一个很傲娇很喜欢在我面前撒娇闹小脾气的人呢，但是很可爱。当时第一次和所谓的 “网友见面” ，羽毛是第二个呢，当时到飞机场还是羽毛来接的 Neko，两个人在见面前就恩恩爱爱的了，见面的那天两个人的心跳速度都很快很快。知道吗，你是第一个让我有勇气去相信并且坐飞机坐火车坐汽车去见面的人呢，32 是第一个坐飞机去见面的。但是勇气的来源很奇怪呢，我居然会相信你呢，相信一个莫名在网络上认识的一个很疲惫的人。你也是焦虑患者，你也有性别焦虑，更重要的是我们两个经历类似呢，所以能感受到对方很多很多东西，感受到对方的情感，感受到对方的很多需求甚至是心里所想的东西。爱你呢，我也一直只爱你，最喜欢你呢，自从和你接触之后我用社交网络都没有以前多了，只要你在家里的时候就会放下手机好好陪你或者躺在床上陪你（躺在床上是因为自己没有多少力气坐着或者站着呢，会觉得很累的），只想和你在一起啊，所以这次死亡，我想了一个晚上才给你答复说我会帮你推注的，其实是很困难的决定呢，因为说白了是在杀死你呢。对不起啦，但是这样可以解脱你的话，那就解脱好了呢… 我会立即去世界的另一端找你的。 写给 琉璃（琉璃的博客：https://blog.chiyukiruri.moe/ ）琉璃是我除了羽毛以外最在乎的人了呢。是后来才仔细认识互相见面的人，以前不会依赖那么多，也不说太多话，只是平时在社交网络上两个人互相沟通一下之类的。自从那次见面之后就不一样了呢，你带着我们去拿了易性病（性别焦虑）的证明（虽然没有拿完全啦，但是至少可以证明了呢），还去专门请你们的小区居委会给我开证明…好感谢的，在保定的那段时间也是你提供的住宿，一起过的除夕和春节，我们一起度过了好多，经历了好多。甚至还能想起来当时我们两个人在 Nintendo Switch 上玩 UNO 的场景呢。你好迷你好可爱，也很疲惫的吧，那样的生活。记得还一起做过菜，你的黄瓜炒蛋，我的豆瓣酱炒肉，喜欢吃你的咖喱饭什么的… 真的是好多记忆了。只有仔细认识后才会注意到那么多的东西呢。谢谢你，谢谢你的帮助，今天也谢谢你一起离开这个世界呢，辛苦你了，也很高兴能够认识你呢。 写给 3232 是最希望帮助 Neko 的人了呢。32 是前男友的存在，相较于现在我和羽毛的百合关系，当时 32 有很多不珍惜感情的地方呢，32 专注游戏太多了啦。但是严肃起来还是可以严肃讨论问题的呢，你也是第一个说要和父母借 20 万让我在美国继续上大学的人呢。很感谢你，和你玩游戏的那些记忆也很开心，比如在 Elite Dangerous 里面去 Lost World 那颗行星的环上，我们一起拍照一起录像，记录了好多。还有那个黑洞，你死掉的那个黑洞那里我真的哭了呢，哭了好久，因为失去了你呀。还记得和你玩 Factorio 的时候，我们会吵架，会争执。可是只知道玩游戏不够呢，虽然还是培养了很多感情，现在你大概能理解我以前说的很多话了呢，你也应该有了更多的情感，愿意去感受了吧，只是有的时候表达方式还是有点缺陷呢，不过是可以改的。在说谢谢之前先和你说对不起呢，对不起那些争执，那些玩游戏的时候的争吵，对不起呢，当时我们还在一起的时候会有一些过度依赖你的小情绪，对不起呢，要离开了。谢谢你呢，谢谢你的父母的帮助呢，对不起呢，离开你了。也谢谢你一直愿意陪着我呢。 写给 琦才原本，琦才是我最在乎的人呢。原本你才是我最爱的人呢，可是后来那么多变数，加上我对你的劝说你都不去尝试什么的…就分开了，虽然那个契约依然生效呢，就是。 你永远都是我的主人，我永远都是你的小妹抖 这个永远不会变呢。你和豆腐一样都有着一种奇怪的给人的独特感，虽然还没有见过面呢，但是是很羡慕的人，毕竟是学医的人呢，会的东西肯定比自己多出很多很多，事实也是这样，你在很多地方都很有天赋呢，只是你把它当做一种本能而已，其实别人没有呢，至于是什么，自己去探寻吧w（给一个小提醒呢，古典乐），对不起啦，我要先走一步了呢。我先去世界的另一端等你呢…如果你也会来的话。谢谢你陪我走过的路，谢谢你陪我走过的那几个月…对不起呢，没有能够陪你到最后… 写给 豆腐豆腐是我信任的人呢。为什么会写在这里是因为，你也是我见面见过一次的人呢，而且印象蛮深刻的，头发比我长，性格很有趣。信任你所以把邮件递送给了你，希望你帮我料理后面如果我真的离开了的很多事情。写给你什么呢？其实和你的记忆只有几小时呢，你来到我们房间，放下了行李，然后和 A2 去吃饭了，然后晚上很晚才回来，早上 6 点匆匆忙忙又离开了。只能说豆腐是很温柔的人呢，如果愿意进行 HRT 的话，尽管去吧，就像我说的呀， 「只要你的内心是善良的，对错都是他人的事。」 –《大鱼海棠》的台词 豆腐很会关心人呢，和我见到的男生都不太一样，有一种说不出来的独特感。这种独特感是无法用言语描述的，把你放在人群当中也可以轻易找出来的那种独特感，很喜欢。谢谢你呢，谢谢你陪我聊天，谢谢你关心我在乎我…但是也对不起呢…要做出这样的决定。 写给 JellyJelly 是我信任而且愿意帮助我的人呢。很多时候缺钱了或者 Linux 有一些小问题了都会和你问询和讨论，是很羡慕的人，很羡慕很羡慕的人，无论是技术还是经验还是身材还是性格本身，可能是我心目中最完美的男友吧？如果要我评价的话，因为 INFJ 和 INT/FJ 都会互相理解的，因为对方都是很神秘的人呢。谢谢你一直帮我，谢谢你一直劝说我一直陪我，谢谢你一直借钱给我，谢谢你一直的存在，即便中间在游玩 ED 的时候有对你恨意的时候，但是谢谢你呢。还有就是对不起啦，把你叫到 Jelly Nebula 就跑掉了，开了 Factorio 的服务器几天都没有去理你，对不起呢，对不起呢，要离开了。 它，Neko我想要离开了。因为我坚持不下去了，我喜欢的人也坚持不下去了呢。 或者是这个世界太残酷了吧，我们活的太累了，死掉对于我们来说会好很多，死掉对于我们来说是一种解脱吧。不希望再痛苦了呢，所以选择了，这样的路。 要离开了呢，再见。大家，我在世界的另一端等你呢… 疲惫的生活知道抑郁症患者的世界是什么样子吗？ 是灰色的 是的呢，一切都看起来是灰色的。醒过来看到的东西都是灰色的，没有一点生气，没有一点颜色。只有手机上面的一些消息有着温度，极少数的消息会有那样的温暖，因为自己的朋友已经越来越少了呢，社交能力也远远不如以前，不如说我本来就不社交吧；因为我不说话的呀，因为我很少第一个人开口说话的呢。因为如此也断开了无数联系人的连接，现在也找不回来了，只能这样了呢，只有几个人会关心我了。 这样的生活甚是疲惫呢，又是想要变成女孩子，又是抑郁，又是对家里的恐惧，不知道去哪里，只能漂泊在这个世界的大回流里，现在来到了你的身边 —— 羽毛的身边。我把这里当做是我的家，因为它只属于我们，你会关心我会照顾我，这里像是一个温暖的地方。不过还记得吗，当时从云南回来的时候我们聊起来，你说我在云南的家表现的很拘束，不像是在这边上海的时候这样愉快自由。的确是这样呢，也的确吧，我真的依赖上这个地方了。每天休息的地方，每天情感表达的地方，每天头疼难受你不在的地方，可以和你一起的地方。 是一个缺爱的孩子呢。 有很多人这么评价过我，我也很依赖羽毛，见到琉璃习惯了之后也会依赖琉璃。 但是很疲惫呢，因为抑郁的原因，因为很多压力的原因。原本当时在 2017 年 8 月份我准备重新以一种态度来看待生活，重新开始一段生活，可是家里人对我的抛弃造成了现在这个样子了呢，在日记里面有说过，原本就很疲惫的我，被家里人抛弃了，回到了上海，然后又在上海被伤害一次，回到了云南个旧没有住在家里，住在了亲戚家里，我又开始准备以一种新的态度来，可是这次失效了呢，我一点一点破碎，我的世界变得越来越黑暗，风暴吹得越来越狂躁，不知道为什么，即便我用枕头把自己围起来还是感觉不到安全感，我总是很难入睡，总之睡到一半醒来，然后停下。 然后去医院诊断，已经是重度抑郁中度焦虑了呢。开了很多药，一开始吃好眩晕好难受呢。一直到现在才习惯那些精神药物。 好疲惫的生活啊，动不动就去精神卫生中心去看医生去开药，花掉了不少的钱呢。","categories":[{"name":"Letter","slug":"Letter","permalink":"https://neko.ayaka.moe/categories/Letter/"}],"tags":[{"name":"Farewell","slug":"Farewell","permalink":"https://neko.ayaka.moe/tags/Farewell/"}]},{"title":"对你的感情","slug":"023","date":"2018-02-09T07:31:02.000Z","updated":"2018-02-09T07:31:02.000Z","comments":true,"path":"2018/02/09/023/","link":"","permalink":"https://neko.ayaka.moe/2018/02/09/023/","excerpt":"你想知道为什么我会喜欢你嘛…你想知道为什么我会告白的嘛…你还想知道一些什么的东西呢… 不知不觉又让这些字符完全对齐了呢… 你想知道我的情感是什么嘛…","text":"你想知道为什么我会喜欢你嘛…你想知道为什么我会告白的嘛…你还想知道一些什么的东西呢… 不知不觉又让这些字符完全对齐了呢… 你想知道我的情感是什么嘛… 嘛，那就先从最开始的最开始开始说的呢，基本的来说…喜欢你是因为在乎你的呢…在乎你到了那种想要在你身边照顾你的程度。喜欢你，大概是从我们开始互相展露内心的时候开始吧，就是 10 月份的那段时间呢…后面也很感谢你呢…能陪着我度过那一天…从那一天开始就觉得离不开你了的样子…我也不知道为什么会有这样的感觉。 我喜欢照顾别人呢…很喜欢照顾别人的我…你那段时间经常会觉得很难受，经常会觉得孤独，经常会说很多的话在 Twitter 上，甚至是去看你的树洞，我就想陪在你的身边，照顾你，给你那些你想要的东西。现在做到了很大部分了呢… 为什么会告白呢…为什么呢…为什么那样的事情会发生呢…还记得那次我们两个很激烈的吧…我就想着用一次最强大的感情力量灌满你的内心，让你觉得我陪着你，大概这样就会好了吧。我只是这样想着。 即便是当时那样，我也还是不确定我自己的感情，但是现在回头去看那些聊天记录，就像你说的，就像是两个在热恋中的人的样子呢…只是是百合一样的存在。 我也会迷茫呢，你说的这些，我喜欢百合一样的情感，但是 Neko 也会觉得迷茫，到底自己是喜欢什么样的人…可是我现在的感情意义是：我在乎的，我想照顾的，我想陪着的永远的，就是我喜欢的人，这个就是我现在的定义了呢。所以就算是迷茫了也不要担心太多，因为我的意义就是陪着你呢，你接受的话去照顾你的呢。 真的确定自己的心情是在见到你的时候，你在机场的时候，很漂亮的，见到你就冲过去紧紧抱住哭了起来，记得你当时比我都还激动，周围的人都看着觉得好奇怪的样子。 你想知道 Neko 的内心对吧…Neko 的内心很难理解呢…就算是我自己也不会知道怎么去理解这些…我会尝试在 Twitter 和 Telegram 上尝试表达…但是自己也是很难理解的呢…很多东西都会尝试和你解释和表达的啦，在我的能力之内。 综合上面，我爱你呢。","categories":[{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/categories/%E6%97%A5%E8%AE%B0/"}],"tags":[{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/tags/%E6%97%A5%E8%AE%B0/"}]},{"title":"如果这是梦","slug":"022","date":"2018-01-05T08:44:22.000Z","updated":"2018-01-05T08:44:22.000Z","comments":true,"path":"2018/01/05/022/","link":"","permalink":"https://neko.ayaka.moe/2018/01/05/022/","excerpt":"是好奇怪的标题呢…这两天脑子里都会不自觉的冒出这个想法…不知道为什么呢。最近几天做梦也很累的样子，有梦见自己被蛇咬，有梦见你变小，可以放在手心，有梦见很多壮观的场景…可是…此时此刻，如果是梦的话…会怎样呢？","text":"是好奇怪的标题呢…这两天脑子里都会不自觉的冒出这个想法…不知道为什么呢。最近几天做梦也很累的样子，有梦见自己被蛇咬，有梦见你变小，可以放在手心，有梦见很多壮观的场景…可是…此时此刻，如果是梦的话…会怎样呢？ 那这个梦是最甜美的吧，是能哭出来的梦呢…可是我不相信这是梦呢，哪有这样甜美的梦呢，即便这一切…都是第一次体验呢… 在这个梦里哭过好多次呢…孤独过好多次呢…但是有你陪着的那些部分，就真的是好开心的…是天真的猫喔，有些许安全感和温暖就会觉得安心的猫呢…在这个梦里不知道有没有照顾好你呢…至少猫猫有尽力了吧，有一直在陪着你的。 如果这是一个梦的话，我不想醒来呢，因为醒来就可能回到以前的那些痛苦的时光去了呢…我不要回去…我不要回去…我不要一个人…超黏人的吧，你说你很喜欢的呢，我也很喜欢的呢。这个梦真的真的好甜美。 记得刚才吃饭的时候和你说的嘛…猫猫大概是自己不会维持关系什么的吧…所以关心到自己的人真的没有呢…除了你。还有谁呢…还有谁可以这样对猫猫呢…毕竟…最缺乏的就是安全感和爱啊…就像猫猫说的…自己 Twitter 一天没动态…要不是你说了，也不会有人主动找自己的…不会的呢…或者就像你说的，我在忽视吧…因为他们也无法理解自己的不是吗？我自己也无法理解自己的呢…一个 INFJ 怎么会理解自己到底是什么东西呢…所以把自己当做是一直猫就好了呢。 真的是孤单的猫呢…如果这是梦的话…请让我永远睡下去呢… 我不要醒过来…因为这里面，有我最依赖的东西呢…也有我最想要的东西呢… 好像…每次写日记都会哭呢…","categories":[{"name":"内心","slug":"内心","permalink":"https://neko.ayaka.moe/categories/%E5%86%85%E5%BF%83/"}],"tags":[{"name":"内心","slug":"内心","permalink":"https://neko.ayaka.moe/tags/%E5%86%85%E5%BF%83/"}]},{"title":"是好难受的梦","slug":"021","date":"2018-01-03T14:29:04.000Z","updated":"2018-01-04T16:29:04.000Z","comments":true,"path":"2018/01/03/021/","link":"","permalink":"https://neko.ayaka.moe/2018/01/03/021/","excerpt":"最近做了好多梦好多梦… 早上醒来之前印象最深刻的梦境是被蛇咬了一口。然后因为怕毒性太大，自己吸了一口，发现吸出来的那些毒液都是绿色的…就把自己吓坏了，和旁边的人（似乎是家里人）说了一下让他们打急救电话…结果他们说…没事的，只是一些小问题…","text":"最近做了好多梦好多梦… 早上醒来之前印象最深刻的梦境是被蛇咬了一口。然后因为怕毒性太大，自己吸了一口，发现吸出来的那些毒液都是绿色的…就把自己吓坏了，和旁边的人（似乎是家里人）说了一下让他们打急救电话…结果他们说…没事的，只是一些小问题… 然后猫猫就晕过去了呢 最近梦境都在现实和想象之间不停切换呢… 其实很害怕现实的梦境…因为会有分不清梦境和现实的情况…好多次呢…自己也一直做不到在梦境里面意识到自己在做梦什么的…这大概也算是猫猫不喜欢睡觉的原因吧…虽然自己很多时候都好困困… 可是讨厌夜晚的呢，讨厌夜晚睡觉的呢。不知道为什么现在变成了这样…可能是高中的时候生活习惯都很奇怪的缘故吧…回家就去床上抱着枕头睡一觉，半夜起来找吃的，然后凌晨做作业玩游戏什么的…不过在当时会觉得这样的生活方式蛮好的，不会困，而且还能和国内的小伙伴玩一会儿什么的…虽然只有 2 个呢… 说起这些脑子里想到的全是高三时候的生活，就是每天陪着别人玩…然后自己颓废…最后裸考高考（ACT） 嘛，昨天那样的梦境什么的…好讨厌的不是吗… 说白了自己还是讨厌在学校什么的吧…自学什么的总是很有动力呢（可是自己都把自己逼出强迫状态了啦）。还是多休息好一些呢…虽然现在的精神和情绪状况…大概还行吧…只是那些小波动什么的…自己仍然不能控制的呢… 以前有想过自己是不是喜欢这样的伤心…可是自己告诉自己的是…其实很讨厌这样很情绪化呢…因为基本上什么东西都会触发情绪…加上现在的状态，基本上就是过激的情绪化…反正难受的时候就躺着好了呢… 希望自己会好起来的…希望的呢…噩梦什么的也不要出现了呢…","categories":[{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/categories/%E6%97%A5%E8%AE%B0/"}],"tags":[{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/tags/%E6%97%A5%E8%AE%B0/"}]},{"title":"那些噩梦...真的好讨厌呢","slug":"020","date":"2018-01-01T15:49:54.000Z","updated":"2018-01-01T15:49:54.000Z","comments":true,"path":"2018/01/01/020/","link":"","permalink":"https://neko.ayaka.moe/2018/01/01/020/","excerpt":"12 月 31 日的这天晚上做了一个梦呢…又是和那个时候很相似的场景… 当时在美国好不容易有大学，之前暑假高三自我放弃了…退学早早的就回国，所以原本大学什么的已经是不可能的了加上当时有断药…情绪基本上就是越陷越深越来越糟糕…","text":"12 月 31 日的这天晚上做了一个梦呢…又是和那个时候很相似的场景… 当时在美国好不容易有大学，之前暑假高三自我放弃了…退学早早的就回国，所以原本大学什么的已经是不可能的了加上当时有断药…情绪基本上就是越陷越深越来越糟糕…当时知道可以去大学…满脑子都是说不出来的感觉，就是很矛盾的自己，不知道自己还有没有力气，不知道自己能不能再回到那个讨厌的地方挣扎一下…一开始去到的时候是想好了，要好好面对这样的新生活的呢…所以一开始也很努力，选了一直想要的日语课，上课的时候也比以前认真了许多…可是结果是去了快一个月，只有去大学 5 天，最后那天还是去办理退学手续才去的呢…为什么最后会回来了呢…家里没有给猫猫钱了呢…和他们发消息也不会理睬，发多少消息都不会回复…原本相信妈妈的呢，结果打电话给妈妈想要她和爸爸说一下什么的…可是他们就是不愿意呢宿舍那边的东西都没买齐，也没有吃的，两天喝一碗汤… 月初要交宿舍费了，中介那边说宿舍这边会有麻烦，希望能和家里联系一下，要交下个月的宿舍费了…可是就是联系不上呢…原本是有工作的，结果工作的那边说猫猫还是一个学生，当天应聘之后说好的 700 美元一个月就没有了呢…虽然猫猫还是很努力的有在努力，可是他们看不起学生呢…明明给了他们 GitHub 的链接，偏偏要说猫猫不给他们 Update Infomation…依然记得那是接近周末…他们就不要猫猫了呢。唯一的希望也没有了呢… 当时都希望晚上坐着公交车离开，去到一个没有人会找到的地方，自己死掉，也不会有人会注意的不是吗，自己家人都不要自己了呢，学校里面也没有在乎自己的人呢…死掉就好了吧…反正回国自己什么都做不了，没有高中学历，没有大学学历，自己什么都不会…会饿死的，不如死掉…当时已经想好了呢，毕竟被自己的亲人抛弃了呢，虽然小时候就不喜欢了… 过了周末…被小伙伴劝说了好多…自己决定要回国…周二就一个人去和学校说退学，退了学费，退了宿舍，定了机票，自己一个人去到机场… 第二天就坐飞机离开了呢… 原本这次打击就够大了呢…想着去上海之后要自己尝试活下去呢…结果在上海的第 14 天，家里妈妈打了一个电话过来，说想知道现在猫猫的情况如何，因为考虑到妈妈已经是一个人…如果太担心自己的话可能会出现自己并不希望的意外…加上当时还是信任妈妈的呢…妈妈问到地址的时候就说了…结果第二天爸爸也来了…当然从这里开始猫猫就不会相信家里的任何人了呢。“爸爸” 当时和猫猫说的就是，如果不跟着他们回去的话，就去收拾一顿猫猫的朋友（因为住所和工作都是朋友帮助的因为还是不希望连累到别人呢，就只能忍痛…回去的路上都在哭呢…都在哭呢…都在害怕着呢…不再相信他们…回去也是住在一个亲戚家里…后来他说要回来看看猫猫…但是依然是那样呢…记得他说过最伤人的话就是： 你看看你都把你妈妈弄成什么样子了，你自己不会想想吗？你自己心里不会痛吗？ 拜托…猫猫就是因为想太多了才会这样啊… 就是这两个巨大的冲击呢…像这样的剧情的梦境有梦见过好多好多…每次在梦里都是超级绝望…超级难受的那种梦里最尖锐最令人恐惧的也是所谓的 “爸爸” 呢… 可是这次梦境里让自己怀疑自己了呢…自己放弃了学业，又一次，尽管是梦里…他依然是恐怖的样子…然后怀疑自己…可能自己真的不适合待在学校里面吧…毕竟这么久以来，自己知道的东西都是自学的呀…或许是这样的吧…","categories":[{"name":"内心","slug":"内心","permalink":"https://neko.ayaka.moe/categories/%E5%86%85%E5%BF%83/"}],"tags":[{"name":"内心","slug":"内心","permalink":"https://neko.ayaka.moe/tags/%E5%86%85%E5%BF%83/"}]},{"title":"想要变成猫","slug":"019","date":"2017-12-28T10:58:05.000Z","updated":"2017-12-28T19:58:05.000Z","comments":true,"path":"2017/12/28/019/","link":"","permalink":"https://neko.ayaka.moe/2017/12/28/019/","excerpt":"今天一整天都是你的猫猫呢… 想要变成猫，那样就可以被你完全抱住了呢，那样的话就可以在你面前随意蹭蹭了呢，那样的话就可以被你抱着去上学了呢，那样的话就可以和你玩逗猫棒的游戏了呢…","text":"今天一整天都是你的猫猫呢… 想要变成猫，那样就可以被你完全抱住了呢，那样的话就可以在你面前随意蹭蹭了呢，那样的话就可以被你抱着去上学了呢，那样的话就可以和你玩逗猫棒的游戏了呢…可是猫猫只有 15 年的寿命…好短呢…想要陪你陪到时间的尽头不过反过来想，如果 Neko 是猫的话，那就是用自己的一生去陪你了呢…猫猫的一生都是你的世界呢，陪在你身边，你哭的时候听着你哭，你冷的时候爬过去给你暖暖…可以和你撒娇要挠挠肚子什么的… 写到这里就哭出来了呢…真的想陪着你的呢…想要陪着你一直走下去的呢。 「おやすみ邪ンヌ」 by 「林けゐ」 感觉日记写的越来越短，不过自己也不知道应该说些什么呢。想要讲故事，但是不知道说什么好。 早上起得好早…然后中午陪你睡了好久…然后又是日常的 21:00 睡着。陪着你真的好开心…在你身边就好安心的呢… 当然今天哭着和你说的那些…也算是猫猫的故事了吧。猫猫一个人去洗澡真的好难受的呢…猫猫真的好害怕一个人…猫猫真的好害怕被抛弃…一个人就在里面哭…洗一会儿哭一会儿…不想要一个人的啊…真的不想…好害怕… 一个人蹲在那里…被热水冲刷着…抱着腿哭了起来…希望你可以进来和猫猫说一句话都好呢…可是…真的好害怕…不要一个人…不要… 不希望再见到以前那样的场景了呢…一个人穿着喜欢的小裙子…玩累了就跑去床上抱着玩偶…旁边摆着等身抱枕假装有人陪着…然后慢慢睡着…睡到深夜…一个人做吃的一个人玩……谁也不会管…谁也不会在乎…真的不希望那样了呢… 猫猫变得好脆弱…只想依偎在你的怀里呢… 「眠いにゃー」 by 「KD」 不要抛弃猫猫好不好？","categories":[{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/categories/%E6%97%A5%E8%AE%B0/"}],"tags":[{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/tags/%E6%97%A5%E8%AE%B0/"}]},{"title":"网易云音乐 本地API指南","slug":"024","date":"2017-10-02T02:15:00.000Z","updated":"2017-10-02T02:15:00.000Z","comments":true,"path":"2017/10/02/024/","link":"","permalink":"https://neko.ayaka.moe/2017/10/02/024/","excerpt":"网易云音乐 history 本地API指南这是一个在项目代码文件中的迷你文档，用于快速帮助开发者定位history文件的键值，详细的文档可以到GitHub的repo上查看www","text":"网易云音乐 history 本地API指南这是一个在项目代码文件中的迷你文档，用于快速帮助开发者定位history文件的键值，详细的文档可以到GitHub的repo上查看www fm 私人FM的fm判定值，true即为此项来自私人FM，不存在即不来自私人FM data 不明数据，在不同模式下会有不同值，示例值：34799039，dailyrecommend fid 不明数据，fid，在正常播放模式下会有值 id 私人FM的ID，在非私人FM模式下，此处有一个长ID，字符串 track track列，一个键值列表，其中包含曲目的详细数据 name 曲目名字 id 曲目ID position 曲目在专辑中的曲目号，同track.no alias 一个数组，曲目别名 status 不明数据 fee 费用，数字 copyrightId 不明数据，版权ID disc 专辑碟号 no 曲目在专辑中的曲目号，同track.postion artists artists数组，一个数组，其中包含了此曲目的作曲家 name 艺术家名字 id 艺术家ID picId 艺术家图片ID img1v1Id 不明数据，数字，同picId briefDesc 不明数据 picUrl 艺术家图片链接 img1v1Url 不明数据，链接，同picUrl albumSize 不明数据，专辑大小 alias 不明数据，可作为别名列表 trans 不明数据 tns 不明数据 musicSize 不明数据 userId 用户ID，网易音乐人ID album album列，一个键值列表，其中包含专辑的信息 id 专辑ID name 专辑名字 picId 专辑图片ID picUrl 专辑图片链接 alias 不明数据，可作为别名列表 transNames 别名 type 类型，一般值为 “专辑” size 专辑曲目数量 blurPicUrl 模糊图片链接，一般值同picUrl companyId 专辑发布公司ID pic 图片，一个数字，同picId publishTime 发布日期（此项值需要转换，示例值：1490716800000） description 专辑简介，这个值在客户端无法获取 tags 标签 company 专辑发行公司 breifDesc 不明数据 artist 专辑艺术家 name （初始化值）艺术家名字 id （初始化值）艺术家ID picId （初始化值）艺术家图片ID img1v1Id （初始化值）不明数据 briefDesc （初始化值）不明数据 picUrl 艺术家图片链接 img1v1Url 不明数据，一般值同picUrl albumSize （初始化值）不明数据，专辑大小 alias （初始化值）不明数据，可作为别名列表 trans （初始化值）不明数据 tns （初始化值）不明数据 musicSize （初始化值）不明数据 songs 数组 commentThreadId 评论区ID，字符串 mvid MV的ID，数字 cd 专辑碟号，该曲目所在的专辑单碟编号，数字 starred 喜欢的判定值，判定用户是否喜欢过该曲目 popularity 热度，数字 score 分数，数字 starredNum 不明数据，喜欢的数目 duration 曲目长度 playedNum 播放次数 ringtone 不明数据，客户端均衡器用 rtUrl 不明数据 rtUrls 不明数据，数组 pstatus 不明数据 fee 费用，数字 version 版本号，曲目信息版本 songType 曲目类型 mst 不明数据 ftype 不明数据 yunSong 不明数据 mp3Url MP3文件链接 reason 推荐原因，不同于recommendReason，这个仅在每日推荐列表播放下可见 bMusic 不明数据，一个键值列表，未知品质 name 名字 id 品质ID size 文件大小 extension 文件扩展名 sr 采样率 playTime 长度 dfsId_str 不明数据 bitrate 比特率，此品质未知 dfsId 不明数据，数字 size 文件大小，字节作为单位，byte，数字 volumeDelta 音量Delta值，浮点型 hMusic 高品质音乐，一个键值列表 name 名字 id 品质ID size 文件大小 extension 文件扩展名 sr 采样率 playTime 长度 dfsId_str 不明数据 bitrate 比特率，高品质为320000 dfsId 不明数据，数字 size 文件大小，字节作为单位，byte，数字 volumeDelta 音量Delta值，浮点型 mMusic 中品质音乐，一个键值列表 name 名字 id 品质ID size 文件大小 extension 文件扩展名 sr 采样率 playTime 长度 dfsId_str 不明数据 bitrate 比特率，中品质为160000 dfsId 不明数据，数字 size 文件大小，字节作为单位，byte，数字 volumeDelta 音量Delta值，浮点型 lMusic 低品质音乐，一个键值列表 name 名字 id 品质ID size 文件大小 extension 文件扩展名 sr 采样率 playTime 长度 dfsId_str 不明数据 bitrate 比特率，低品质为96000 dfsId 不明数据，数字 size 文件大小，字节作为单位，byte，数字 volumeDelta 音量Delta值，浮点型 privilege 权限 id ID值，同曲目ID version 版本号，测试时获得的值是：0-0-0-999-999-999-320-7-1-1-0 fee 费用，数字 payed 已支付次数，数字 status 不明数据 maxPlayBr 最大的可播放比特率 maxDownBr 最大的可下载比特率 maxSongBr 最大的曲目比特率 maxFreeBr 最大的免费比特率 sharePriv 分享权限，数字 commentPriv 评论权限，数字 subPriv 不明数据，子权限，数字 cloudSong 不明数据，云音乐，数字 toast 不明数据，此处测试时为false copyFrom 不明数据，字符串 audition 不明数据，空值 rtype 不明数据，数字 rurl 不明数据，空值 recommendReason 推荐原因，字符串 alg 不明数据 commentCount 评论数统计，数字 copyright 不明数据，版权，数字 lrcAbstractEnd 不明数据，歌词抽象结束 lrcAbstractStart 不明数据，歌词抽象开始 indexId 不明数据，索引ID，数字 haslyric 是否有歌词的判定值，判定是否有歌词 tid 不明数据，同id radio 电台，一个键值列表，不太详细的列表 dj DJ的名字，此处为null category 分类，字符串 buyed 购买的判定值，这里指的应该是订阅与否 price 价格，此处无效 originalPrice 原始价格，此处无效 discountPrice 打折价格，此处无效 purchaseCount 购买人数，数字 lastProgramName 最后更新的节目名字 videos 视频，此处空值 finished 不明数据，结束的判断值 underShelf 不明数据 picUrl 电台图片链接 picId 电台图片ID categoryId 分类ID lastProgramId 最后更新的节目ID createTime 创建时间 feeScope 不明数据 programCount 项目统计数 subCount 订阅人数统计 desc 介绍，字符串 lastProgramCreateTime 最后更新的节目创建时间 radioFeeType 电台费用类型 name 电台名字 id 电台ID subed 订阅的判定值 program 节目，一个键值列表，仅在电台条目下可用 mainSong 不明数据，主要曲目，一个值，示例值：411421177 songs 曲目数，空值 dj DJ，一个键值列表，详细的电台主播信息 defaultAvatar 默认头像的判定值 province 不明数据，省份 authStatus 认证状态，数字 followed 关注的判定值 avatarUrl 头像链接 accountStatus 账号状态，注销账号的值为30 gender 性别，女性为2 city 不明数据，城市，数字 birthday 出生日期，数字 userId 用户ID，数字 userType 用户类型，数字 nickname 用户名，字符串 signature 个性签名 description 自我介绍 detailDescription 详细的自我介绍 avatarImgId 头像图片ID，数字 backgroundImgId 背景图片ID，数字 backgroundUrl 背景图片链接 authority 不明数据，许可机构 mutual 不明数据，判定值 expertTags 用户徽章，比如音乐达人 experts 徽章 djStatus 主播状态 vipType VIP类型 remarkName 额外名字 avatarImgIdStr 头像图片ID，字符串 backgroundImgIdStr 背景图片ID，字符串 avatarImgId_str 头像图片ID，字符串 brand 不明数据 blurCoverUrl 模糊的封面链接 radio 电台，一个键值列表，简要的信息 dj DJ的名字，字符串 defaultAvatar 默认头像的判定值 province 不明数据，省份 authStatus 认证状态，数字 followed 关注的判定值 avatarUrl 头像链接 accountStatus 账号状态，注销账号的值为30 gender 性别，女性为2 city 不明数据，城市，数字 birthday 出生日期，数字 userId 用户ID，数字 userType 用户类型，数字 nickname 用户名，字符串 signature 个性签名 description 自我介绍 detailDescription 详细的自我介绍 avatarImgId 头像图片ID，数字 backgroundImgId 背景图片ID，数字 backgroundUrl 背景图片链接 authority 不明数据，许可机构 mutual 不明数据，判定值 expertTags 用户徽章，比如音乐达人 experts 徽章 djStatus 主播状态 vipType VIP类型 remarkName 额外名字 avatarImgIdStr 头像图片ID，字符串 backgroundImgIdStr 背景图片ID，字符串 avatarImgId_str 头像图片ID，字符串 brand 不明数据 canReward 打赏的判定值 rewardCount 打赏数目统计 category 分类，字符串 buyed 购买的判定值，这里指的应该是订阅与否 price 价格，此处无效 originalPrice 原始价格，此处无效 discountPrice 打折价格，此处无效 purchaseCount 购买人数，数字 lastProgramName 最后更新的节目名字 videos 视频，此处空值 finished 不明数据，结束的判断值 underShelf 不明数据 picUrl 电台图片链接 picId 电台图片ID categoryId 分类ID lastProgramId 最后更新的节目ID createTime 创建时间 feeScope 不明数据 programCount 节目统计数 subCount 订阅人数统计 desc 介绍，字符串 lastProgramCreateTime 最后更新的节目创建时间 radioFeeType 电台费用类型 name 电台名字 id 电台ID subed 订阅的判定值 rcmdtext 不明数据，空值，字符串 newProgramCount 新的节目数目统计 rcmdText 不明数据，空值，字符串 composeVideo 创作视频的判定值 shareCount 分享次数统计 likedCount 喜欢次数统计 commentDatas 评论数据，一个键值列表 userProfile 用户资料，一个键值列表 defaultAvatar 默认头像的判定值 province 不明数据，省份 authStatus 认证状态，数字 followed 关注的判定值 avatarUrl 头像链接 accountStatus 账号状态，注销账号的值为30 gender 性别，女性为2 city 不明数据，城市，数字 birthday 出生日期，数字 userId 用户ID，数字 userType 用户类型，数字 nickname 用户名，字符串 signature 个性签名 description 自我介绍 detailDescription 详细的自我介绍 avatarImgId 头像图片ID，数字 backgroundImgId 背景图片ID，数字 backgroundUrl 背景图片链接 authority 不明数据，许可机构 mutual 不明数据，判定值 expertTags 用户徽章，比如音乐达人 experts 徽章 djStatus 主播状态 vipType VIP类型 remarkName 额外名字 avatarImgIdStr 头像图片ID，字符串 backgroundImgIdStr 背景图片ID，字符串 content 评论内容 programName 节目名称 programId 节目ID commentId 评论ID commentCount 评论计数 radio 电台，一个键值列表，不太详细的列表 dj DJ的名字，此处为null category 分类，字符串 buyed 购买的判定值，这里指的应该是订阅与否 price 价格，此处无效 originalPrice 原始价格，此处无效 discountPrice 打折价格，此处无效 purchaseCount 购买人数，数字 lastProgramName 最后更新的节目名字 videos 视频，此处空值 finished 不明数据，结束的判断值 underShelf 不明数据 picUrl 电台图片链接 picId 电台图片ID categoryId 分类ID lastProgramId 最后更新的节目ID createTime 创建时间 feeScope 不明数据 programCount 项目统计数 subCount 订阅人数统计 desc 介绍，字符串 lastProgramCreateTime 最后更新的节目创建时间 radioFeeType 电台费用类型 name 电台名字 id 电台ID subed 订阅的判定值 href 来源链接，字符串，专辑链接；私人FM播放模式示例值：/m/fm/?fromSource=1 text 来源，多种可能性 nickName 来源作者，比如歌单作者 userId 作者ID startlogtime 不明数据，数字 loaderr 加载错误的判定值 playedTime 播放次数，数字 playType 播放类型 playBrt 正在播放的比特率 playFile 本地文件所在位置 lrctype 歌词类型，online lrcid 歌词ID qid 不明数据，示例值：4937714_2_493807 time 时间，数字 备注部分href的值在专辑播放模式下：/m/album/?id=3428149&amp;rid=R_AL_3_3428149&amp;fromSource=1在私人FM播放模式下：/m/fm在电台播放模式下：/m/djradio/?id=828002&amp;fromSource=1在每日推荐模式下：/m/dailysong/?fromSource=1在搜索页下：/m/search/?type=1&amp;s=Kaine%20%2F%20Salvation&amp;fromSource=1歌单：/m/playlist/?id=894355338&amp;rid=A_PL_0_894355338&amp;fromSource=1","categories":[{"name":"Guide","slug":"Guide","permalink":"https://neko.ayaka.moe/categories/Guide/"}],"tags":[{"name":"Neko","slug":"Neko","permalink":"https://neko.ayaka.moe/tags/Neko/"},{"name":"网易云音乐","slug":"网易云音乐","permalink":"https://neko.ayaka.moe/tags/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/"},{"name":"网易云音乐API","slug":"网易云音乐API","permalink":"https://neko.ayaka.moe/tags/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90API/"},{"name":"API文档","slug":"API文档","permalink":"https://neko.ayaka.moe/tags/API%E6%96%87%E6%A1%A3/"}]},{"title":"Formidine Rift的POI","slug":"018","date":"2017-05-07T06:38:22.000Z","updated":"2017-05-07T06:56:10.000Z","comments":true,"path":"2017/05/07/018/","link":"","permalink":"https://neko.ayaka.moe/2017/05/07/018/","excerpt":"所有信息均源自：官方论坛 | THE FORMIDINE RIFT MYSTERY (Part 4) The Formidine Rift 谜团：第二帖 | 第三帖 | 第四帖","text":"所有信息均源自：官方论坛 | THE FORMIDINE RIFT MYSTERY (Part 4) The Formidine Rift 谜团：第二帖 | 第三帖 | 第四帖 前往Formidine Rift中子星高速公路 EDSM的星图 链接参考： EDSM - Bubble to Formidine Rift Neutron Starway Reddit - Neutron Highway Route to the Formidine Rift Formidine Rift(ERP 001)星系: PLAA AEC IZ-N C20-1Beacon around: ARally Point (settlement) on: A1AALPHA SETTLEMENT FOUND by CMDR Raktavijan 15th Jan 3303:坐标：25.0029, 21.5814 星系: PLAA AEC XZ-Z B41-0Beacon around: A1Rally Point (settlement) on: 2BETA SETTLEMENT FOUND by CMDR Britain 27th Jan 3303坐标：36.38, -12.71 星系: PLAA AEC TT-B B41-3Beacon around: B1Rally Point (settlement) on: B2GAMMA SETTLEMENT FOUND by CMDR Nodus Cursorius 21st Jan 3303坐标：-9.3229, -103.8591 星系: PLAA AEC RY-B B41-1Beacon around: ARally Point (settlement) on: 2BDELTA SETTLEMENT FOUND by CMDR Baton on 18th Jan 3303坐标：50.9203, -155.0895 Conflux(ERP 002)星系: PRU AESCS TY-J A64-1Beacon around: 1Rally Point (settlement) on: 3ALPHA SETTLEMENT FOUND by CMDR Robbie Junior 23rd Feb 3303:坐标：-66.47, -56.13 星系: PRU AESCS HW-S B31-2Beacon around: ARally Point (settlement) on: CD1BETA SETTLEMENT FOUND by CMDR TheTick 13th Jan 3303:坐标：-7.2989, -35.9180**__ 星系: PRU AESCS OI-K A64-0Beacon around: 1Rally Point (settlement) on: 1AGAMMA SETTLEMENT FOUND by CMDR Sajime Chent-Shi 11th Feb 3303坐标：64.2, 74.4 星系: PRU AESCS NC-M D7-192Beacon around: A2A or ARally Point (settlement) on: A3ADELTA SETTLEMENT FOUND by CMDR’s Goliat and Baton 7th Feb 3303坐标：-53.36 -48.91 Formidine Rift (ERP 003)星系: EAFOTS EU-R C4-1Beacon around: ARally Point (settlement) on: C2ALPHA SETTLEMENT FOUND by CMDR Eadghe on 19th Jan 3303坐标：-34.2057, -77.6673 星系: EAFOTS LZ-H B10-0Beacon around: DRally Point (settlement) on: D1BETA SETTLEMENT FOUND: by CMDR JesusRocks1988 13th Jan 3303坐标：-23.0844, -174.8980 星系: EAFOTS RA-G B11-0Beacon around: 3Rally Point (settlement) on: 3GAMMA SETTLEMENT FOUND by CMDR Sajime Chent-Shi 22nd Jan 3303坐标：-17.8731, -76.0522 星系: EAFOTS GL-Y E2Beacon around: A1Rally Point (settlement) on: 6DELTA SETTLEMENT FOUND: by CMDR AvvieXB1 26th Jan 3303坐标：21.2838, 19.0682 参考（英文）按照时间顺序排序的远征日志（Chronological order of expedition logs by Jaiotu）解码信息的原始帖子（Original summary post with decoded transmissions）Canonn Trello页面（Canonn Trello page）寻找这些港站使用的技术（A technique used to find a couple of the outposts）原著参考书","categories":[{"name":"Guide","slug":"Guide","permalink":"https://neko.ayaka.moe/categories/Guide/"}],"tags":[{"name":"Elite Dangerous","slug":"Elite-Dangerous","permalink":"https://neko.ayaka.moe/tags/Elite-Dangerous/"},{"name":"精英危险","slug":"精英危险","permalink":"https://neko.ayaka.moe/tags/%E7%B2%BE%E8%8B%B1%E5%8D%B1%E9%99%A9/"},{"name":"Elite Dangerous Horizon","slug":"Elite-Dangerous-Horizon","permalink":"https://neko.ayaka.moe/tags/Elite-Dangerous-Horizon/"},{"name":"The Formidine Rift","slug":"The-Formidine-Rift","permalink":"https://neko.ayaka.moe/tags/The-Formidine-Rift/"}]},{"title":"Elite Dangerous（精英危险）Reshade 3.0 设置","slug":"017","date":"2017-01-18T19:38:22.000Z","updated":"2017-01-18T19:38:22.000Z","comments":true,"path":"2017/01/19/017/","link":"","permalink":"https://neko.ayaka.moe/2017/01/19/017/","excerpt":"Reshade 是 edfx 的依赖程序，如果想要自己配置 Elite Dangerous 的画面/增强 ED 的画面，可以使用 Reshade 自身然后手动调整数值，自由度会相对高一些。","text":"Reshade 是 edfx 的依赖程序，如果想要自己配置 Elite Dangerous 的画面/增强 ED 的画面，可以使用 Reshade 自身然后手动调整数值，自由度会相对高一些。 介绍对比图先来看看对比图吧www之前： 之后： 之前： 之后： 之前： 之后： ————以下内容等待更新———— 使用感受原本之前 Neko 有一个更好的配置文件（配置特效的各项数值），后来一次探索的过程中错误的拖移了那个数值…没记住之前的默认数值，后来只能用现在这个饱和度超级高的配置文件*。综合所有 Reshade 带来的画质提升，Reshade 是一款很好的画质加强辅助软件，如果你有学过摄影或者懂得如何使用 Adobe Premiere Pro，那么 Reshade 就像是给游戏套上了一个完全自由和完全自定义的滤镜系统。相比其他来说，目前 Reshade 似乎是唯一一个能实时调整数值的画质加强软件呢。关于探索的截图，上面的对比图应该已经很明显了吧，虽然马上要更新的2.3自带一个官方提供的景深，但是如果迫不及待想要和小伙伴分享你的景深截图的话，Reshade 可以帮你一把；除了景深以外就是饱和度和曝光度的提升，如果你设置了全局快捷键，你可以试试看对比一下原版 ED 和安装 Reshade 之后的样子，Reshade 更加鲜艳一点，阴影部分更加黑暗，亮光部分更亮，而不是原版 ED 这样看似简单的色彩系统（这里 Neko 的意思是，ED 自带的系统已经很完善了，因为优化等原因，FDDev 可能删除了这些小功能，而不是说 ED 画质很差，不过无论如何 Reshade 可以补足这一点）。 安装下载官网直链先去 Reshade 的官网吧：reshade.me（国内应该是不能直接访问到这里的，建议开一个 VPN，如果实在没有 VPN 也没有关系，Neko 会将必要的文件上传到百度云公开下载 XD）这个就是 Reshade 的官网啦： 这里点击 Download 就可以下载，如果没有VPN的小伙伴继续往下看 百度云分享链接链接: http://pan.baidu.com/s/1i4GZFrJ 密码: p97u 安装到Elite: Dangerous下载之后就可以打开这个安装文件（其实应该叫部署文件） 在这里我们先选择Select Game，然后在选择游戏的窗口中找到你的 elitedangerous64.exe。Neko 的 Elite Dangerous 是 Steam 安装的，那么一般文件会在 你的硬盘:\\SteamLibrary\\steamapps\\common\\Elite Dangerous\\Products\\elite-dangerous-64 注意：如果你是通过Steam-打开游戏根目录这样的方式打开的游戏目录的话，是不正确的。在通过Steam打开之后，进入Products文件夹，然后找到elite-dangerous-64文件夹，最后就是游戏的根目录了。然后选中 elitedangerous64.exe 这个程序： 在接下来的这里选择 Direct3D 10+ 然后会有一个弹出窗口询问是否从 GitHub 上下载特效文件（因为国内种种原因：GFW 什么的，国内访问速度较慢，甚至无法访问，如果你没有 VPN 的话，就点 否 吧。Neko 会在下面给出 Shader Folder 的文件的） 如果你有 VPN 请跟随这一步（如果没有 VPN，点击这里）点击“是” 这里记得一定要取消勾选 SurfaceBlur，因为不知名的原因，SurfaceBlur 的代码有一点小问题，比如无法正确禁用特效之类的事情 然后点“OK” 如果你没有 VPN 请跟随这一步点击“否” 这样就表示安装结束。然后来百度云这里下载 百度云分享链接链接: http://pan.baidu.com/s/1eSoVLtS 密码: xc8t，或者可以通过上面的百度云链接进去，点击 Shaders Folder，把压缩文件下载下来。进入到你的 Elite Dangerous根目录（…\\Elite Dangerous\\Products\\elite-dangerous-64），把压缩文件解压到这里即可 然后你现在只需要进入游戏就可以实时配置你的效果。配置教程请继续往下阅读。 配置配置对于不懂英文的小伙伴来说有点吃力，但是一般自己拖动一下数据（一定要记住默认数值），随便玩玩还是能理解每一个特效的意义的。 如何打开配置界面？在游戏中按 Shift + F2 即可。 配置教程第一次进入会要求你过一遍教程：我们点击这个 Continue 配置文件选择器 这个选择器是用来选择多个不同的配置文件的，每一个配置文件可以为不同的数值，你也可以将他人的配置文件放在 Elite Dangerous 的根目录。创建配置文件的方法：点击选择器旁边的 + 加号；删除配置文件的方法：点击选择器旁边的 - 减号。（配置文件的命名只能有标准的英文大小写，数字以及基本符号）Neko在这里就把第一个配置文件命名为basic吧，那么basic的配置文件目录就是： G:\\SteamLibrary\\steamapps\\common\\Elite Dangerous\\Products\\elite-dangerous-64\\basic.ini 最后点击 Continue。 特效组 特效组的使用方法很简单，前面的方块是激活/禁用开关，依次就是名字、快捷键绑定栏。如果你想要某个特效，点那个小方块激活即可。如果你想要禁用某个特效，再点一下那个小方块即可。点击 Continue 进入到下一个环节。 变量组 变量组就是一个特效的变量组，你可以直接用鼠标拖动这个数值来调整。记得在尝试调整一个变量之前，要记得默认的数值喔~点击 Finish 关闭教程。 教程结束 到这里教程就结束啦~ 综合设置综合设置的打开方法是工具左上角的 Settings 在这里可以设置一些快捷键，FPS 显示之类的。 FAQ问：下载失败，即便用了 VPN 还是很慢。为什么答：可能是网络状况不太好，如果实在等不及，可以强制关闭 Reshade 安装程序，然后跟随无VPN的教程走：无 VPN 的教程 问：为什么游戏打不开了？（黑屏、闪退）答：这样的问题一般不是因为安装出错，是因为电脑硬件不适配。相关问题还是要交给 Reshade 的开发者，如果不知道如何在 GitHub 上提出 Bug 反馈，也可以直接联系 Neko 的邮箱：neko@ayaka.moe。 问：我不想用 Reshade 了，怎么删除？答：把根目录下的 dxgi.dll 删除即可。","categories":[{"name":"Guide","slug":"Guide","permalink":"https://neko.ayaka.moe/categories/Guide/"}],"tags":[{"name":"指南","slug":"指南","permalink":"https://neko.ayaka.moe/tags/%E6%8C%87%E5%8D%97/"},{"name":"Elite Dangerous","slug":"Elite-Dangerous","permalink":"https://neko.ayaka.moe/tags/Elite-Dangerous/"},{"name":"精英危险","slug":"精英危险","permalink":"https://neko.ayaka.moe/tags/%E7%B2%BE%E8%8B%B1%E5%8D%B1%E9%99%A9/"},{"name":"Reshade","slug":"Reshade","permalink":"https://neko.ayaka.moe/tags/Reshade/"},{"name":"EDFX","slug":"EDFX","permalink":"https://neko.ayaka.moe/tags/EDFX/"},{"name":"Reshade 3.0","slug":"Reshade-3-0","permalink":"https://neko.ayaka.moe/tags/Reshade-3-0/"},{"name":"画面后期特效","slug":"画面后期特效","permalink":"https://neko.ayaka.moe/tags/%E7%94%BB%E9%9D%A2%E5%90%8E%E6%9C%9F%E7%89%B9%E6%95%88/"},{"name":"Graphic Post Effects","slug":"Graphic-Post-Effects","permalink":"https://neko.ayaka.moe/tags/Graphic-Post-Effects/"}]},{"title":"FactoCraft 大纲","slug":"016","date":"2016-12-06T00:38:22.000Z","updated":"2016-12-06T00:38:22.000Z","comments":true,"path":"2016/12/06/016/","link":"","permalink":"https://neko.ayaka.moe/2016/12/06/016/","excerpt":"这是一个想要把Factorio立体化（所以选择了Minecraft）的Mod，目前名称是FactoCraft Mod，更多更新信息可以查看GitHub托管库这是一篇没有完成的大纲,如果有什么意见和建议，可以在下面的Disqus中回复，neko会尽快回复的www","text":"这是一个想要把Factorio立体化（所以选择了Minecraft）的Mod，目前名称是FactoCraft Mod，更多更新信息可以查看GitHub托管库这是一篇没有完成的大纲,如果有什么意见和建议，可以在下面的Disqus中回复，neko会尽快回复的www 调整矿物调整是否添加部分bob mod的内容？是否提升矿物的生成？是否有办法可以提升矿物副产品产量？ 物品调整物流传送带在Minecraft世界里面地形是 有高有低 的，但是在Factorio的世界里面，整个地形都是平整的，但是neko考虑了一下，可以用这个方案来解决这个问题： 在基本科技树中提供：基本传送带以及基础阶梯传送带（类似火车轨道）；在高级科技树中提供：整地/平整地形工具（也可以包括在无人机拆除系统中提供），基础科技树的时候就使用阶梯传送带。至于是否采用，只能看alpha版本的实际作用，当然可以后期更改，不是最终产品。关于地下传送带，两种方案：同一高度只能存在同一范围内同一个方向的地下传送带；亦或是同一方向同一范围内，无论高度如何，只能同时存在一条地下传送带。 机械臂针对地形问题，在上面的机械臂里面也有提到过，如果传送带是可以悬空的，那么机械臂怎么抓取上面的东西？特别是阶梯传送带 ： 允许机械臂抓取斜放的阶梯传送带； 允许机械臂直接放置在传送带附近的一格方块区域内。 生产调整是否遵循Factorio原本的生产配方？ 科技树调整在物流中提到过。 更新信息2016年12月07日第一次在GitHub的commitcommit -4b869d4- 如果有什么意见和建议的话，可以在下面的Disqus中回复www","categories":[{"name":"Thoughts","slug":"Thoughts","permalink":"https://neko.ayaka.moe/categories/Thoughts/"}],"tags":[{"name":"FactoCraft","slug":"FactoCraft","permalink":"https://neko.ayaka.moe/tags/FactoCraft/"},{"name":"Factorio","slug":"Factorio","permalink":"https://neko.ayaka.moe/tags/Factorio/"},{"name":"Forge","slug":"Forge","permalink":"https://neko.ayaka.moe/tags/Forge/"},{"name":"Java","slug":"Java","permalink":"https://neko.ayaka.moe/tags/Java/"},{"name":"Minecraft","slug":"Minecraft","permalink":"https://neko.ayaka.moe/tags/Minecraft/"},{"name":"Mod","slug":"Mod","permalink":"https://neko.ayaka.moe/tags/Mod/"},{"name":"笔记","slug":"笔记","permalink":"https://neko.ayaka.moe/tags/%E7%AC%94%E8%AE%B0/"},{"name":"编程","slug":"编程","permalink":"https://neko.ayaka.moe/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"就个人对 LGBT 的观点","slug":"015","date":"2016-09-23T00:38:22.000Z","updated":"2017-01-30T00:38:22.000Z","comments":true,"path":"2016/09/23/015/","link":"","permalink":"https://neko.ayaka.moe/2016/09/23/015/","excerpt":"引文 “性别平等必定会带来性别模糊。” 不知道为什么突然LGBT话题突然就这么热门起来了，几周前我们American Government and Economy课上就讨论了相关的内容。那天那节课可谓是我有话说不出（在犹他州这边不论是LGBT的哪一种，都是一个人的一种 罪行 sin ，如果说明了就有可能导致我被拉去做心理辅导什么的23333），我个人基本是和整个课堂的人持相反态度的；后来也遇到了一些不懂得理解LGBT，不为LGBT换位思考的人，拿这个东西开玩笑的事情，想了想不如留一份个人感想在博客里面吧2333333。","text":"引文 “性别平等必定会带来性别模糊。” 不知道为什么突然LGBT话题突然就这么热门起来了，几周前我们American Government and Economy课上就讨论了相关的内容。那天那节课可谓是我有话说不出（在犹他州这边不论是LGBT的哪一种，都是一个人的一种 罪行 sin ，如果说明了就有可能导致我被拉去做心理辅导什么的23333），我个人基本是和整个课堂的人持相反态度的；后来也遇到了一些不懂得理解LGBT，不为LGBT换位思考的人，拿这个东西开玩笑的事情，想了想不如留一份个人感想在博客里面吧2333333。希望每个人，你，在阅读这篇文章的时候，能够抛开对宗教的偏见（我知道有很多人反感摩尔门教，我个人也不会推崇这个宗教，我提到它的原因是我生活的地方，就是犹他州），能够抛开对LGBT的偏见，能够先沉住气看完整篇文章，最后站在客观的角度来讨论。鄙人不能说理解了整个精神学或者心理学，也不能说理解了摩尔门教的很多东西（我不是信徒，只是一个尊敬他们宗教的路人），如果有什么错误，希望见谅。 解释什么是LGBT不论怎么说先解释一下好了（虽然觉得能搜索到这篇文章的人都应该是懂得LGBT的） 从维基百科上来看的话：LGBT是女同性恋者（Lesbians）、男同性恋者（Gays）、双性恋者（Bisexuals）与跨性别者（Transgender）的英文首字母缩略字。@LGBT·维基 为什么中国的传统思想和犹他州的摩尔门教教义不认可LGBT中国先说说中国的传统思想吧。同性恋其实一直都存在，并不是现代社会造成的（虽然也有一部分原因，我后面会说）自古中国就有记录同性恋，通常称之为：男色或男风。维基百科上有写道关于记载和提及男男相爱的相关著作： 中国早期史书，如逸周书、战国策就传有“美男破老、美女破舌”的说法，将男风与女色相提并论。有学者甚至主张，中国最早诗歌总集《诗经》部分篇章为“两男相悦”之作。春秋战国时期，弥子瑕与卫君余桃、龙阳君泣鱼固宠，以及两汉时期，汉哀帝不忍惊醒董贤断袖而起的事迹，皆为后世津津乐道的男风典故。明清时期，著名中国古典小说《聊斋志异》、《红楼梦》、《金瓶梅》对于男性好男风一事同样有所描写，当时还出版专门叙述男男欢好性事的中篇小说集《宜春香质》、《弁而钗》、《龙阳逸史》，文雅赞美男风情谊的小说《品花宝鉴》，以及收录历史上各种男风外宠事例的《断袖篇》。@中国同性恋史·维基 再有民国时期西方文化的引入带来了“同性恋”是“病”的基本概念，然后潜移默化般影响了我们本身： 到了民国时期，“同性恋”一词和围绕在该词的医学理论传播至中国，逐渐促成对同性恋的污名和病理化。当时被译介至中国的西方性学家，包括赫希菲尔德、艾利斯、布洛赫、埃宾、佛洛伊德和卡本特等人。在这些翻译作品中，不只有将同性恋病理化的论述，也呈现了卡本特把同性爱当作一种高贵情感的观点，尽管在1920年代之后，赞颂同性恋的论述变得愈来愈弱，病理学的论述则占据了主流地位。@中国同性恋史·维基 也就是说，民国时期是一个比较重要的节点：我们在我们的主观认知上“烙印下”“同性恋”是一种病的程度,越来越深（原谅我这个中文表达，附上英文：We went more deeply and more strongly into the form of knowing that HOMOSEXUAL must be a disease inside our brain.）。Normally，这个应该是初步的影响，在Culture Revolution之后，民众的基础知识水平下降，在科学普及的时候（当时的那个时期，心理学家和众多科学家认为同性恋是一种疾病，或者说综合症），他们很容易的接受了 同性恋是疾病 的观点；相应的，对于自己的儿女，对他们的教育也应该是“同性恋是疾病”。从上面我们获得的事实和我们自己得出的结论中，我们大概可以改一下我们的小标题：为什么中国的传统思想和犹他州的摩尔门教教义不认可LGBT；从某种方面来说，并不是传统思想（传统观念）的问题，而是大众认知的问题。这里稍微跑题一下说明一个比较重要的名词：从众心理 人们受到多数人一致性思想或行动的影响，而跟从大众的思想或行为，常被称为“羊群效应”。从众效应是诉诸群众谬误的基础。@从众效应·维基 我们大概也可以说，从众心理也是一个因素，导致目前很多人都“表现得”像是不支持LGBT一样。大概也是一种生存方式，毕竟人有一个比较大的特性（不能说是缺点，但是也不能说是优点，一种生存本能）：当我们周围的人表现出了不符合我们主观意识或者说不符合我们普遍的规则的事情，我们便会产生厌恶感（也可以说是威胁感）。从进化论和生存方面来考虑，这是有益于我们生存下去的一个特性，比如一个在我们群体之中的人患病了，在原始社会形态下，我们唯一的本能选择就是远离这个个体然后生存下去。当然在这里我不是说同性恋是病态，我说的意思是同性恋不符合我们的主观意识，但是为了在现在的“原始社会（也就是我们的大社会）”环境下生存下去，或许只有表现得和普通人一样，我们才能获得别人的肯定。就比如T吧，比如MTF（男性变女性），目前按照我们的主观思想，我们还留有一点点“父系社会”的本性，认为男性是绝对的能力象征，女性就是相比男性懦弱的，相对应的，跨性别 在平常人的眼中就成了一种可以用“变态”，“神经病”词语来形容的人；并不是，即便在过去我们认为男性去干活，女性在家打理家务就好（其实一直到二战，依然存在女性不公平对待的现象），但是现在我们可以看得到有很多人在为女权而到处奋斗着，也就是是我们的前进目标：性别平等，回到我在一开始所说的那句话：“性别平等必定会带来性别模糊”；通常情况下（个人猜想，无准确统计数据）我认为一个人是不会首选暴露自己的MTF（或者FTM）倾向的，仅仅只是个别关系极好的朋友才会说出来。问题就出在，大部分人都在隐瞒着事实，为了能够正常的生存下去，为了能够接受别人的肯定，直到我们重新定义了LGBT，才会有这么一个大团体去为这四个组合的权利而奋斗。看看上个世纪我们如何看待同性恋和其他一些独特的性别认同组合，大多数都是被迫害，被强迫治疗，被…等等等等。说说国内的政策和管制措施吧： 尽管如此，在两岸分治时期，政府对于同性恋或同性间性行为的司法管制却真实存在过，中国共产党政府将同性恋视为流氓罪中的“其他流氓行为”，中国国民党政府则以“违警罚法”中的“妨害风俗”之名予以拘留。@中国同性恋史·维基 以及： 在中华人民共和国，《中华人民共和国刑法》各版中均没有明确将同性性行为定为犯罪的条文，但也没有受到法律保护，且大多数中国人对同性性行为仍然持反感态度。1983年至1996年间，同性恋行为被中华人民共和国卫生部定为一种变态心理的神经疾病；期间，大型的、在公共场合的、聚众性质的同性恋行为（如舞厅、酒吧、卖淫等）被定为流氓罪。2001年4月20日，卫生部《CCMD-3 中国精神障碍分类与诊断标准》第三版出版，诊断标准中对同性恋的定义将非常详细，指同性恋的性活动并非一定是心理异常。@同性恋·维基 直到1991年 到1991年，中华民国政府终止动员戡乱废止“违警罚法”，限缩警察权力。1997年，中华人民共和国政府废除了流氓罪。2001年，同性恋从中华人民共和国官方的精神障碍名单中删除 @中国同性恋史·维基 即便如此，在这个时间段，整个世界依然有很多国家禁止、反对同性恋（感觉以前的B和T还不是这么的活跃，都比较谨慎和小心），比如这部 比较触动我的一部稍微提及LGBT权益的电影是模仿游戏 The Imitation Game ，当时看的时候…感觉还是很惨的吧，一个天才就因为错误的法律条文审判和医学定义而…崩溃到自杀。纪念 Alan Truing。 综上所述，为什么中国国内在传统思想下并不接受LGBT？因为在民国时期引进的西医将“同性恋”解释为病态的，同时也违背了主观思想：“繁衍后代”，在接下来的80年（直到2000年左右），国人逐渐习惯了这种错误的概念。2001年移除之后，加上社会的开放，中国LGBT也就越来越活跃（我个人还是比较反感同性恋酒吧的那些恶人的…当然我不能一口否定说他们都不好，大概也算是一个聚集地吧，类似于归宿一样的东西）。 犹他州摩尔门教如果你问我为什么只谈摩尔门教，我只能说：我基本上每天都生活在犹他州，周围都是摩尔门教的信徒，对他们的教义有一定的理解。毕竟我不能不懂装懂去猜测其他宗教对于LGBT的看法。基本上在整个9月份，我们的主课最受欢迎的话题就是两个：美国大选和同性婚姻；美国大选我也就不用再多说了。直接进入话题吧。摩尔门教的教义主要靠：无价珍珠、摩尔门经、教义和圣约这三本书（一般装订成一大本厚厚的经文。）要从这三本书中找到确凿的明文说反对同性婚姻的确实太难，我会慢慢的寻找，但是摩尔门教主要关心的目标是：家庭。这也就说明了他们希望异性婚姻占有主导地位，他们希望每个人都有家庭，他们不希望家庭渐渐从人们心中消失。 先说说摩尔门教是什么吧。摩尔门教又叫耶稣基督后期圣徒教会，一般情况下，他们都说自己是LDS（The Church of Jesus Christ of Latter-day Saints，耶稣基督后期圣徒教会）的教徒，我不知道台湾同胞和香港同胞怎么称呼自己，但是英文中，简称LDS；和基督教有很多不同，首先摩尔门教即便和基督教一样使用圣经，但是在经文中有很多不同，而且摩尔门教主要的经文还是摩尔门经；另外，基督教主张：三位一体： 三一论主张，圣父、圣子、圣灵（天主教会译为圣神，东正教会和新教则译为圣灵）为同一本体、同一本质、同一属性、三个不同的位格，他们以希腊语：homoousios 来表达他们之间的关连。通俗地说，仅有一位独一的神；圣父完全是神，圣子完全是神，圣灵完全是神；圣父不是圣子，圣子不是圣灵，圣灵不是圣父。亚他拿修信经对三一论得到了比较公认的解释。@三位一体·维基 但是摩尔门教主张的是三神论：也就是： 19世纪初后期圣徒运动产生的摩门教（耶稣基督后期圣徒教会）支持三位三体，为父、子、灵是分开独立的神灵，但和谐的工作，实为三神论。根据后期圣徒教会教义，天父、祂的独生子耶稣基督和圣灵，这三位之间的关系虽是分开独立的个体却是全时间和谐地行动。后期圣徒教会使用“神组”这个词而非“三位一体”这个词来形容天父、祂的儿子耶稣基督和圣灵之间的关系。这和从尼西亚信经出来的三一神论相冲突，三一神论指这三位是同一体同一本质。 也许大家听得最多的是摩尔门教的一夫多妻制度吧？在LDS早期的时候的确是有支持过一夫多妻制度（也就是：polygamy，复婚制度）。在维基百科中提到了，教会的确承认了在早期历史中，三位“先知”：约瑟·斯密、杨百翰、伍惠福，的确是有超过1位以上的妻子，在教义和圣约的第132章中有提到： 1843​年​7月​12日​，​在​伊​利​诺​，​纳府​记录​的​、​透过​先知​约瑟​•​斯密​给予​的​启示​，​关于​新​永​约​，​包括​婚约​的​永恒​性​，​以及​多妻​〔History of the Church, 5:501–507〕。​虽然​这​启示​是​1843年​记录​的​，​但​从​历史​纪录​中​可​明显​看出​，​这​启示​所​包含​的​教义​和​原则​，​自​1831年​起​，​先知​就​知道​了​。 在132章的第36~39可以看出来： 36 亚伯拉罕​被​命令​献上​他的​儿子​以撒​；​然而​，​经​上​记着​说​：​不可​杀人​。​不过​，​亚伯拉罕​没有​拒绝​，​这​就算​为​他的​义​。37 亚伯拉罕​接受​了​妾​，​她们​为​他​生了​儿女​；​这​就算​为​他的​义​，​因为​她们​乃是​给​他的​，​而他​遵守​了​我的​律法​；​以撒​和​雅各​也是​一样​，​除了​命令​他们的​以外​，​没有​做​别的​事​；​因为​他们​除了​被​命令​的​事​以外​，​没有​做​别的​事​，​他们​已按​照应​许​，​进入​他们的​超升​，​坐在​宝座​上​，​不是​众​天使​，​而是​众神​。38 大卫​也​接受​了​许多​妻妾​，​我​仆人​所罗门​和​摩西​也​一样​，​从​创世​以来​直到​如今​，​我​其他​许多​仆人​也是​一样​；​他们​除了​接受​不是​从​我​这里​的​那些​事情​以外​，​他们​没有​在任​何事​情​上​犯罪​。39 大卫​的​妻妾​是​我​借​我​仆人​拿​单​的​手​，​和​其他​持有​此​能力​之​权钥​的​先知​给​他的​；​除了​乌利亚​和​他​妻子​一事​以外​，​他​没有​在任​何事​情​上​得罪​我​；​所以​他​从​他的​超升​摔下​来​，​得到了​他的​部分​；​他​离开​这​世界​之后​，​不能​继承​她们​，​因我​将她​们​给了​别人​，​主​说​。 但是后来杨百翰也说了：“唯一变成神的人，即成为神的儿子们，都是那些进入多重婚姻的”。再往后，1880年伍惠福也发表了声明，声明了：教会信众不再进入任何形式的多重婚姻，不论地点、当地风俗和法律条文为何。现在耶稣基督后期圣徒教会的会友被发现有重婚行为者会被开除教籍。从准许重婚的地区来的信徒，可能需要结束重婚的关系才能加入教会。 更多的争议和不同，大家可以看看这里@摩尔门教的评论和争议焦点·维基 对摩尔门教的介绍也就说到这里吧。 为什么他们拒绝LGBT？首先要说他们所希望的：他们希望家庭美满。这也就是为什么LDS主张加入相应的法律条文来阻止和限制： 离婚 虐待儿童 同性婚姻 LGBT 安乐死 也就是前两天的课上我们还在讨论离婚，虽然LGBT也算是比较热门的话题吧…回归正题，从他们的角度来说，同性婚姻（L和G）算得上是在违背他们的教义，同性婚姻越来越多导致他们理解的所谓的家庭的地位越来越低，但是即便如此他们也没有给出一个对于反对双性恋或者跨性别者的解释。可以这么说吧，你去找一个你熟悉的摩尔门教徒，探讨LGBT的时候，他们只会用宗教中提到的教义来反驳，你又不是教徒，你只能用科学、客观的角度来说，此时情况就很尴尬了（一方面是基于宗教在表达自己的观点，一方面是基于科学在表达自己的观点，后者则更为客观），对方不能接受科学观点（“同性恋不是病”），同时和你灌输着家庭的重要性以及家庭的重要思想，而你只能保持尊重，继续这个话题。结果是什么，LDS的教徒并不接受科学目前解释的客观事实，在你反驳：“社会已经发展了，教义有些地方是跟不上时代的”之后，他可能会说你觉得摩尔门教已经错误了、已经不是一个正常的宗教了。如此，LDS提出了，支持LGBT也就威胁到了宗教自由。（你说这是不是思想绑架嘛）你也不得不结束这个话题以免引发更多误会。 综上所述，首先摩尔门教是站在家庭第一的立场来考虑LGBT（好像他们对Q的意见不是很多）的，因为LGBT的LG威胁到了他们的主要思想，进而开始反对LGBT，同时也声明了宗教自由。 我的立场先不急着说明我是否是LGBTQ其中的一个。我的立场很明显，我支持LGBT，也支持Q，最想保护的就是性别认知模糊和跨性别者的那些人。 正文理论部分？其实这段正文…是思考了很久之后才决定继续写的…毕竟本人是站在LGBTQIA一员的角度上来考虑问题，大概从开头就有点不公正，所以决定正文也带入一些自己的情感吧… 上面讨论了为什么国内的大部分人以及摩尔门教的人不希望性别完全平等，以及不希望同性婚姻合法这样，传统观念和过去的客观需求导致了这个结果；你可能会想，这个东西放到古代，就是不可能的事情，尽管有部分史书和文献记录了这样的现象，但是远远不如现在影响如此之大以及普遍。之前也和小伙伴讨论了这个，他说，在古代，男女之间是互补关系，男女之间要互相关照，比如女性在家打理和持家，男性在外劳作，这在100年前依然如此，放在100年前，甚至所有国家都在反对同性恋，更不要谈跨性别者这样被看做“违背伦理道德”的存在；现在不一样了，经济水平在持续发展和提高，科学和医疗水平也在不断进步，这意味着两性之间的区别对待会越来越少，性别平等会被逐渐接受。 那繁衍后代怎么办？目前的科技水平已经可以达到我们可以通过人工融合的方式来激活卵细胞，也就是说，就算只有两个X染色体，医疗技术也可以支持融合卵细胞，也就是类干细胞培养的人工授精 启示世界在改变，Our world is changing,我们的文明在发展，在进步，our Civilization is developing and envlving.就如同，It is same as16世纪的《天体运行论》，the book De revolutionibus orbium coelestium has been published,让我们认识了正确的科学，and proved that we had the wrong theories about the order of universe,忘却了地心说；therefore we abendoned the Geocentric model back to 16 centruies.就如同，It is same as17世纪开始的启蒙运动，the Enlightenment has started,让我们正视人权，Enlightenment made us looking in the right ways of human rights.忘却我们曾经是如何追崇上神；That was the first time we read others more than gods.就如同，It is also same as我们接受了交流电，that we accepted the AC as our power in today’s world,忘却了那些对交流电的诋毁。Proved the defames of Edison. 我们为什么要支持LGBT，Why are we supporting LGBT?我们为什么要支持同性婚姻，Why are we supporting same sex merriage?这不就像是，There are not such differences between为什么会有南北内战，the purpose of Civil War,为什么200年前要有女权运动，the purpose of the feminist revolution,为什么马丁·路德·金要演讲《I Have a Dream》,the purpose, of the speech by Martin Luther King,I HAVE A Dream.目的简单也且只有一个，We believe the purpose is simple and easy with one thing,平等。EQUALITY. 我们站在这里，We are standing right here today,不是要拒绝我们的历史，We are not going to say we should forget our history,不是要否定我们的历史，we should mark our history strictly wrong.我们站在这里，We are standing right here,是要审视我们在历史中的错误，we want to let people to learn from our history,是要从我们的历史中学习，to learn from the mistakes we’ve made before,获得新的知识，to get knowledge.每一次都有新的开始。With whole brand new starts. 参考文本性欲和性别-（英文）摩尔门教官网 知乎性别和性取向的种类远比你想象的多LGBT相关问题分类整理 @雨亦奇 PDFILGA-LGBT性取向-Sexual-Orientation-（英文） 维基百科/百度百科LGBT中国同性恋史从众效应维基百科-LGBT首页同性恋各地LGBT权利LGBT抚养","categories":[{"name":"Thoughts","slug":"Thoughts","permalink":"https://neko.ayaka.moe/categories/Thoughts/"}],"tags":[{"name":"LGBT","slug":"LGBT","permalink":"https://neko.ayaka.moe/tags/LGBT/"},{"name":"宗教","slug":"宗教","permalink":"https://neko.ayaka.moe/tags/%E5%AE%97%E6%95%99/"},{"name":"同性恋","slug":"同性恋","permalink":"https://neko.ayaka.moe/tags/%E5%90%8C%E6%80%A7%E6%81%8B/"},{"name":"双性恋","slug":"双性恋","permalink":"https://neko.ayaka.moe/tags/%E5%8F%8C%E6%80%A7%E6%81%8B/"},{"name":"跨性别者","slug":"跨性别者","permalink":"https://neko.ayaka.moe/tags/%E8%B7%A8%E6%80%A7%E5%88%AB%E8%80%85/"},{"name":"Gays","slug":"Gays","permalink":"https://neko.ayaka.moe/tags/Gays/"},{"name":"Lesbians","slug":"Lesbians","permalink":"https://neko.ayaka.moe/tags/Lesbians/"},{"name":"Transgender","slug":"Transgender","permalink":"https://neko.ayaka.moe/tags/Transgender/"},{"name":"MtF","slug":"MtF","permalink":"https://neko.ayaka.moe/tags/MtF/"},{"name":"Bisexuals","slug":"Bisexuals","permalink":"https://neko.ayaka.moe/tags/Bisexuals/"}]},{"title":"如何面对自己呢？","slug":"000","date":"2016-06-05T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2016/06/05/000/","link":"","permalink":"https://neko.ayaka.moe/2016/06/05/000/","excerpt":"","text":"如何面对自己啊。原谅我的歇斯底里。 抱歉。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"文字","slug":"文字","permalink":"https://neko.ayaka.moe/tags/%E6%96%87%E5%AD%97/"}]},{"title":"真的好烦心","slug":"999","date":"2016-06-05T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2016/06/05/999/","link":"","permalink":"https://neko.ayaka.moe/2016/06/05/999/","excerpt":"","text":"真的…真的好烦心…好想离开这里… 是时候迁徙了吗？还是换个地方生存罢了…？你们都还没有走…希望不要走…我也不想离开你们…但是我似乎不得不离开这里… 仅仅只是…提前离开吧…？以后还会见到你们吗？我好害怕…好害怕… 真的好烦心…不想待下去了…","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"难过","slug":"难过","permalink":"https://neko.ayaka.moe/tags/%E9%9A%BE%E8%BF%87/"},{"name":"随笔","slug":"随笔","permalink":"https://neko.ayaka.moe/tags/%E9%9A%8F%E7%AC%94/"},{"name":"发泄","slug":"发泄","permalink":"https://neko.ayaka.moe/tags/%E5%8F%91%E6%B3%84/"},{"name":"人生转折","slug":"人生转折","permalink":"https://neko.ayaka.moe/tags/%E4%BA%BA%E7%94%9F%E8%BD%AC%E6%8A%98/"}]},{"title":"原谅 Neko 的歇斯底里","slug":"014","date":"2016-06-05T10:29:00.000Z","updated":"2017-01-20T05:46:30.000Z","comments":true,"path":"2016/06/05/014/","link":"","permalink":"https://neko.ayaka.moe/2016/06/05/014/","excerpt":"","text":"如何面对自己啊。原谅我的歇斯底里。 抱歉。","categories":[{"name":"Neko","slug":"Neko","permalink":"https://neko.ayaka.moe/categories/Neko/"}],"tags":[{"name":"文字","slug":"文字","permalink":"https://neko.ayaka.moe/tags/%E6%96%87%E5%AD%97/"},{"name":"难过","slug":"难过","permalink":"https://neko.ayaka.moe/tags/%E9%9A%BE%E8%BF%87/"}]},{"title":"YouTube 频道有了新 Banner！","slug":"997","date":"2016-04-16T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2016/04/16/997/","link":"","permalink":"https://neko.ayaka.moe/2016/04/16/997/","excerpt":"","text":"YouTube频道终于迎来了自主版权的这一刻。 这是封面~ 依然是熟悉的扁平风星球设计加上全新的图标。 可以欢呼下~~~","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"平面设计","slug":"平面设计","permalink":"https://neko.ayaka.moe/tags/%E5%B9%B3%E9%9D%A2%E8%AE%BE%E8%AE%A1/"},{"name":"设计","slug":"设计","permalink":"https://neko.ayaka.moe/tags/%E8%AE%BE%E8%AE%A1/"},{"name":"Photoshop","slug":"Photoshop","permalink":"https://neko.ayaka.moe/tags/Photoshop/"},{"name":"Lonely Star","slug":"Lonely-Star","permalink":"https://neko.ayaka.moe/tags/Lonely-Star/"},{"name":"YouTube","slug":"YouTube","permalink":"https://neko.ayaka.moe/tags/YouTube/"},{"name":"扁平化","slug":"扁平化","permalink":"https://neko.ayaka.moe/tags/%E6%89%81%E5%B9%B3%E5%8C%96/"},{"name":"宇宙","slug":"宇宙","permalink":"https://neko.ayaka.moe/tags/%E5%AE%87%E5%AE%99/"}]},{"title":"Original Blue","slug":"998","date":"2016-04-16T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2016/04/16/998/","link":"","permalink":"https://neko.ayaka.moe/2016/04/16/998/","excerpt":"","text":"原版蓝色。 这个新图标其实是我在设计另一个图标的时候有灵感的，于是今天我几乎在所有社交网站上都更新了这个图标~要是哪个大佬能拉我进Dribbble就好了233333. 希望你们喜欢~~ 有6个版本~ 至于内在故事嘛…下篇LOFTER再提咯~","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Photoshop","slug":"Photoshop","permalink":"https://neko.ayaka.moe/tags/Photoshop/"},{"name":"Lonely Star","slug":"Lonely-Star","permalink":"https://neko.ayaka.moe/tags/Lonely-Star/"}]},{"title":"新设计的 Logo =￣ω￣=","slug":"011","date":"2016-04-16T03:30:25.000Z","updated":"2017-01-20T05:39:02.000Z","comments":true,"path":"2016/04/16/011/","link":"","permalink":"https://neko.ayaka.moe/2016/04/16/011/","excerpt":"原版蓝色。Original Blue","text":"原版蓝色。Original Blue 这个新图标其实是我在设计另一个图标的时候有灵感的，于是今天我几乎在所有社交网站上都更新了这个图标~要是哪个大佬能拉我进Dribbble就好了233333.希望你们喜欢~~ 有6个版本~ 至于内在故事嘛……","categories":[{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/categories/Design/"}],"tags":[{"name":"平面设计","slug":"平面设计","permalink":"https://neko.ayaka.moe/tags/%E5%B9%B3%E9%9D%A2%E8%AE%BE%E8%AE%A1/"},{"name":"设计","slug":"设计","permalink":"https://neko.ayaka.moe/tags/%E8%AE%BE%E8%AE%A1/"},{"name":"UI设计","slug":"UI设计","permalink":"https://neko.ayaka.moe/tags/UI%E8%AE%BE%E8%AE%A1/"},{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/tags/Design/"},{"name":"logo","slug":"logo","permalink":"https://neko.ayaka.moe/tags/logo/"}]},{"title":"YouTube 的新 Banner","slug":"010","date":"2016-04-16T02:04:40.000Z","updated":"2017-01-20T05:38:02.000Z","comments":true,"path":"2016/04/16/010/","link":"","permalink":"https://neko.ayaka.moe/2016/04/16/010/","excerpt":"","text":"YouTube频道终于迎来了自主版权的这一刻。这是封面~ 依然是熟悉的扁平风星球设计加上全新的图标。可以欢呼下~~~","categories":[{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/categories/Design/"}],"tags":[{"name":"平面设计","slug":"平面设计","permalink":"https://neko.ayaka.moe/tags/%E5%B9%B3%E9%9D%A2%E8%AE%BE%E8%AE%A1/"},{"name":"设计","slug":"设计","permalink":"https://neko.ayaka.moe/tags/%E8%AE%BE%E8%AE%A1/"},{"name":"UI设计","slug":"UI设计","permalink":"https://neko.ayaka.moe/tags/UI%E8%AE%BE%E8%AE%A1/"},{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/tags/Design/"},{"name":"YouTube频道管理","slug":"YouTube频道管理","permalink":"https://neko.ayaka.moe/tags/YouTube%E9%A2%91%E9%81%93%E7%AE%A1%E7%90%86/"}]},{"title":"太阳系壁纸系列 · V 女神·土星和她的卫星","slug":"009","date":"2016-03-22T14:10:58.000Z","updated":"2017-01-20T05:20:03.000Z","comments":true,"path":"2016/03/22/009/","link":"","permalink":"https://neko.ayaka.moe/2016/03/22/009/","excerpt":"","text":"第二张就是土星啦～【太阳系系列壁纸：女神·土星和她的卫星】土星设计花了一晚上吧…光环也是做出来不好看删掉又重做。考察了大量资料发现土星的卫星大多数颜色都和月球一样，就只放上这三颗了。土卫二也好漂亮（所以设计成蓝色的）Inspried by @Nina Geometrieva感觉第二卫星都好好看的样子～（我记得土星有62颗卫星，木星有63颗的样子？）希望你们能喜欢～","categories":[{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/categories/Design/"}],"tags":[{"name":"平面设计","slug":"平面设计","permalink":"https://neko.ayaka.moe/tags/%E5%B9%B3%E9%9D%A2%E8%AE%BE%E8%AE%A1/"},{"name":"设计","slug":"设计","permalink":"https://neko.ayaka.moe/tags/%E8%AE%BE%E8%AE%A1/"},{"name":"UI设计","slug":"UI设计","permalink":"https://neko.ayaka.moe/tags/UI%E8%AE%BE%E8%AE%A1/"},{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/tags/Design/"}]},{"title":"太阳系壁纸系列 · IV 我们的守护神·木星和她的卫星","slug":"008","date":"2016-03-22T14:04:58.000Z","updated":"2017-01-20T05:13:03.000Z","comments":true,"path":"2016/03/22/008/","link":"","permalink":"https://neko.ayaka.moe/2016/03/22/008/","excerpt":"","text":"时隔三天没有发布新的太阳系系列壁纸，今天来两发。这个是第一张：【太阳系系列壁纸：我们的守护神·木星和她的卫星】木星设计花了我好久…不知道这样的设计你们喜不喜欢，原本是有一个大红斑的，但是贴上去之后发现效果不好就删掉了。Inspried by @Nina Geometrieva木星的卫星真的是好好看（现实世界里最爱木卫二）","categories":[{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/categories/Design/"}],"tags":[{"name":"平面设计","slug":"平面设计","permalink":"https://neko.ayaka.moe/tags/%E5%B9%B3%E9%9D%A2%E8%AE%BE%E8%AE%A1/"},{"name":"设计","slug":"设计","permalink":"https://neko.ayaka.moe/tags/%E8%AE%BE%E8%AE%A1/"},{"name":"UI设计","slug":"UI设计","permalink":"https://neko.ayaka.moe/tags/UI%E8%AE%BE%E8%AE%A1/"},{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/tags/Design/"}]},{"title":"太阳系壁纸系列 · III 岩石行星","slug":"007","date":"2016-03-18T15:04:58.000Z","updated":"2017-01-20T04:50:03.000Z","comments":true,"path":"2016/03/18/007/","link":"","permalink":"https://neko.ayaka.moe/2016/03/18/007/","excerpt":"","text":"Inspired by @Nina Geometrieva这次是水星和金星，加了点星空。前两张的带星空的也制作完成了，等下发～希望你们也喜欢～","categories":[{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/categories/Design/"}],"tags":[{"name":"平面设计","slug":"平面设计","permalink":"https://neko.ayaka.moe/tags/%E5%B9%B3%E9%9D%A2%E8%AE%BE%E8%AE%A1/"},{"name":"设计","slug":"设计","permalink":"https://neko.ayaka.moe/tags/%E8%AE%BE%E8%AE%A1/"},{"name":"UI设计","slug":"UI设计","permalink":"https://neko.ayaka.moe/tags/UI%E8%AE%BE%E8%AE%A1/"},{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/tags/Design/"}]},{"title":"太阳系壁纸系列 · II 火星，我们的邻居","slug":"005","date":"2016-03-17T15:04:58.000Z","updated":"2017-01-20T03:44:02.000Z","comments":true,"path":"2016/03/17/005/","link":"","permalink":"https://neko.ayaka.moe/2016/03/17/005/","excerpt":"","text":"Inspired by @Nina Geometrieva这次是火星和火星的火卫一、火卫二。科幻想象了一下以后的移民船（个人觉得并不是很完美）","categories":[{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/categories/Design/"}],"tags":[{"name":"平面设计","slug":"平面设计","permalink":"https://neko.ayaka.moe/tags/%E5%B9%B3%E9%9D%A2%E8%AE%BE%E8%AE%A1/"},{"name":"设计","slug":"设计","permalink":"https://neko.ayaka.moe/tags/%E8%AE%BE%E8%AE%A1/"},{"name":"UI设计","slug":"UI设计","permalink":"https://neko.ayaka.moe/tags/UI%E8%AE%BE%E8%AE%A1/"},{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/tags/Design/"}]},{"title":"太阳系壁纸系列 · 额外 火星和地球的手机壁纸","slug":"006","date":"2016-03-17T15:04:58.000Z","updated":"2017-01-20T03:49:03.000Z","comments":true,"path":"2016/03/17/006/","link":"","permalink":"https://neko.ayaka.moe/2016/03/17/006/","excerpt":"地球：","text":"地球： 火星： 太阳系壁纸的手机版，火星还是很好看的对不对？","categories":[{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/categories/Design/"}],"tags":[{"name":"平面设计","slug":"平面设计","permalink":"https://neko.ayaka.moe/tags/%E5%B9%B3%E9%9D%A2%E8%AE%BE%E8%AE%A1/"},{"name":"设计","slug":"设计","permalink":"https://neko.ayaka.moe/tags/%E8%AE%BE%E8%AE%A1/"},{"name":"UI设计","slug":"UI设计","permalink":"https://neko.ayaka.moe/tags/UI%E8%AE%BE%E8%AE%A1/"},{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/tags/Design/"}]},{"title":"太阳系壁纸系列 · I 地球，我们的家","slug":"004","date":"2016-03-16T15:02:22.000Z","updated":"2017-01-20T02:02:38.000Z","comments":true,"path":"2016/03/16/004/","link":"","permalink":"https://neko.ayaka.moe/2016/03/16/004/","excerpt":"","text":"灵感迸发。这次我加水印加得很随意…有谁要盗图就盗图吧 Inspired by @Nina Geometrieva","categories":[{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/categories/Design/"}],"tags":[{"name":"平面设计","slug":"平面设计","permalink":"https://neko.ayaka.moe/tags/%E5%B9%B3%E9%9D%A2%E8%AE%BE%E8%AE%A1/"},{"name":"设计","slug":"设计","permalink":"https://neko.ayaka.moe/tags/%E8%AE%BE%E8%AE%A1/"},{"name":"UI设计","slug":"UI设计","permalink":"https://neko.ayaka.moe/tags/UI%E8%AE%BE%E8%AE%A1/"},{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/tags/Design/"}]},{"title":"Mac OS 版 Battle.Net 安装（战网客户端）","slug":"003","date":"2016-02-22T06:35:30.000Z","updated":"2016-09-20T13:40:01.000Z","comments":true,"path":"2016/02/22/003/","link":"","permalink":"https://neko.ayaka.moe/2016/02/22/003/","excerpt":"战网安装错误如果你按照普通的安装思路： 打开官网下载的压缩包 把里面的Battle.net拖出来，拖到你的目录 打开目录找到战网图标，会发现出现一个提示：“无法打开Battle.net-Setup” 普通思想走不了。接下来我们排查一下。 错误排查来试试到底是发生了什么导致这个东西无法安装","text":"战网安装错误如果你按照普通的安装思路： 打开官网下载的压缩包 把里面的Battle.net拖出来，拖到你的目录 打开目录找到战网图标，会发现出现一个提示：“无法打开Battle.net-Setup” 普通思想走不了。接下来我们排查一下。 错误排查来试试到底是发生了什么导致这个东西无法安装 普通错误#1：未设置Mac软件源许可 打开系统偏好设定 打开安全性与隐私 解锁并把软件许可设定为“任何来源”。 再次打开战网安装，依然提示：“无法打开Battle.net-Setup” 普通错误#2：编码错误 强制打开法，对战网安装包右键，选择“显示包内容” 打开以下路径 /Battle.net-Setup.app/Contents/MacOS/，打开最后这个Battle.net Setup 提示编码错误，安装包使用非UTF-8 权限错误既然上面的方法都不可用，大概就是权限问题导致的了 先看看战网官网的说明吧：官网在说明文件中提到：System RequirementMac OS 10.7 El Captain 都是10.11了，暴雪也不重新编译一下这个安装文件我们自己解决一下权限问题吧www打开终端（Terminal），输入以下命令： cd /Users/[你的电脑用户名]/[安装程序下级地址] /*比如你的安装程序在桌面上，你就输入：*/ cd /Users/[你的电脑用户名]/Desktop /*英文翻译如下*/ /*桌面 Desktop*/ /*下载 Downloads*/ /*文稿 Documents*/ chmod +x Battle.net-Setup.app/Contents/MacOS/Battle.net\\ Setup 现在退出终端，回到Finder打开战网安装包，你就能打开了。","categories":[{"name":"Mac OS","slug":"Mac-OS","permalink":"https://neko.ayaka.moe/categories/Mac-OS/"}],"tags":[{"name":"Battle.net","slug":"Battle-net","permalink":"https://neko.ayaka.moe/tags/Battle-net/"},{"name":"战网","slug":"战网","permalink":"https://neko.ayaka.moe/tags/%E6%88%98%E7%BD%91/"},{"name":"炉石传说","slug":"炉石传说","permalink":"https://neko.ayaka.moe/tags/%E7%82%89%E7%9F%B3%E4%BC%A0%E8%AF%B4/"},{"name":"魔兽世界","slug":"魔兽世界","permalink":"https://neko.ayaka.moe/tags/%E9%AD%94%E5%85%BD%E4%B8%96%E7%95%8C/"},{"name":"WOW","slug":"WOW","permalink":"https://neko.ayaka.moe/tags/WOW/"}]},{"title":"建站帮助（二）·插件","slug":"002","date":"2016-02-07T14:35:30.000Z","updated":"2016-09-20T13:32:01.000Z","comments":true,"path":"2016/02/07/002/","link":"","permalink":"https://neko.ayaka.moe/2016/02/07/002/","excerpt":"插件列表 (Hexo官方的插件列表或者GitHub上的Wiki插件列表) 【管理插件】Hexo Admin (hexo-admin) 【管理插件】Hexo Hey (hexo-hey) 【功能插件】Search Engine (hexo-generator-search) 【功能插件】Hexo Aplyer (hexo-tag-aplayer基于DIYGod的Aplyer) 【功能插件】Hexo Bilibili (hexo-tag-bilibili) 【功能插件】Hexo Link Broken Detector (hexo-broken-link-checker) 【功能插件】Hexo Imagemin (hexo-imagemin) 【功能插件】Hexo Notify (hexo-notify) 【功能插件】Hexo Xvideos (hexo-tag-xvideos) 【辅助插件】Hexo JSON Content (hexo-generator-json-content) 【辅助插件】Hexo Cil Extra (hexo-cil-extra) 插件使用这里包含了装载的所有插件的使用方法以及配置方法。","text":"插件列表 (Hexo官方的插件列表或者GitHub上的Wiki插件列表) 【管理插件】Hexo Admin (hexo-admin) 【管理插件】Hexo Hey (hexo-hey) 【功能插件】Search Engine (hexo-generator-search) 【功能插件】Hexo Aplyer (hexo-tag-aplayer基于DIYGod的Aplyer) 【功能插件】Hexo Bilibili (hexo-tag-bilibili) 【功能插件】Hexo Link Broken Detector (hexo-broken-link-checker) 【功能插件】Hexo Imagemin (hexo-imagemin) 【功能插件】Hexo Notify (hexo-notify) 【功能插件】Hexo Xvideos (hexo-tag-xvideos) 【辅助插件】Hexo JSON Content (hexo-generator-json-content) 【辅助插件】Hexo Cil Extra (hexo-cil-extra) 插件使用这里包含了装载的所有插件的使用方法以及配置方法。 首要插件 - Hexo Admin (hexo-admin插件)在之前的建站教程中会有两个本地管理插件安装，这个是我认识的最早的插件，但是自定义的选项比较少。这个插件的好与不好： 简洁明了 渲染效果不错 可以设置自己的密码来访问（我觉得Hexo Hey的界面更好看） 似乎是官方的 不能自定义显示字体（我还没找到修改的地方。我偏好中文选择黑体或者雅黑，但是原版是宋体…简直就是虐杀） 没有中文（可以汉化的说） Hexo Admin插件在准备好使用之后（确保在之前输入了npm install hexo-admin –save，如果没有安装，Shell会报错），打开Git Shell（如果你安装了Git的话，使用Git Bash也是一样的效果），使用命令cd到你的hexo根目录。然后运行以下命令 $ hexo server -d INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop. /*你会看到这样的结果*/ 现在在你的浏览器中输入http://localhost:4000/admin/来前往你的管理界面。管理预览你的博客就在这个页面中进行。 首要插件 - Hexo Hey (hexo-hey插件)这是另一个本地管理插件，后面在Hexo官网上找到的，用起来感觉还不错。这个插件的好与不好： 简洁明了（和Hexo Admin没什么区别） 渲染好看（渲染出来的是浏览器默认字体） 支持中文（懒人们可以不用汉化） 自定义选项很多，可以自己编辑 可以设置密码来访问 还是不能自定义字体2333333 界面的元素有点错位（可以自己改） Hexo Hey插件在安装完成后（如果没有安装，在Git Shell或者你的Git Bash中输入以下命令： $ npm install hexo-hey --save 安装完成后不要急着输入hexo s打开本地预览，Hey要求先配置以下。使用你的文字编辑器（我首推Atom）打开hexo根目录下的_config.yml文件并添加以下代码： admin: name: username /*这个是用户名，改成你想要的用户名*/ password: password /*这个是密码，改成你要的密码*/ secret: The password is like that /*官方Hexo Hey给的说明里面没有提及这个是什么，估计是密码提示。*/ expire: 60*1 /*超时设定，默认60分钟？*/ # cors: http://localhost:3000 /*这个是隔离选项，如果你装了admin并且想要一起使用的话，把注释取消，在浏览器中输入这个地址访问即可。*/ 自定义插件 - Search自定义站内搜索 (hexo-generator-search)这是一个可以让你建立一个站内搜索的插件，比如这里官方的演示。这个插件的好处与坏处： 代替Hexo原本自带的Google站内搜索 可以进行大量自定义 插件预览安装Search插件（如果你看过建站教程，你应该会意识到在插件安装的命令行中提到了这个插件），如果没有安装的话，打开你的Git Shell或者Git Bash，键入以下内容 $ npm install hexo-generator-search --save /*请确保你安装了Search插件再进行下一步！*/ 用你的文版编辑器打开hexo根目录下的_config.yml文件并且在最后一行添加： search: path: search.xml field: post","categories":[{"name":"GitHub Blog","slug":"GitHub-Blog","permalink":"https://neko.ayaka.moe/categories/GitHub-Blog/"}],"tags":[{"name":"指南","slug":"指南","permalink":"https://neko.ayaka.moe/tags/%E6%8C%87%E5%8D%97/"},{"name":"Hexo","slug":"Hexo","permalink":"https://neko.ayaka.moe/tags/Hexo/"},{"name":"建站","slug":"建站","permalink":"https://neko.ayaka.moe/tags/%E5%BB%BA%E7%AB%99/"},{"name":"GitHub Blog","slug":"GitHub-Blog","permalink":"https://neko.ayaka.moe/tags/GitHub-Blog/"}]},{"title":"建站帮助","slug":"001","date":"2016-02-07T11:20:30.000Z","updated":"2016-09-15T10:09:01.000Z","comments":true,"path":"2016/02/07/001/","link":"","permalink":"https://neko.ayaka.moe/2016/02/07/001/","excerpt":"这是我第一篇使用Hexo写的文章，使用方法详见文稿。关于Hexo的任何问题以及错误可以前往问题解答页面查看，也可以直接寻找Hexo GitHub求解。 建站安装Node.js环境和Git Desktop从Node.js的官网站点下载并安装。从Github的官方网站下载GitHub Desktop并安装。 安装Hexo安装好Git和Node之后，打开在桌面上（或者去开始菜单）的“Git Shell”输入以下命令。 $ npm install -g hexo /*如果报错，使用taobao.org的源进行下载*/ $ npm install -g cnpm --registry=https://registry.npm.taobao.org /*下面的命令行一定要运行*/ $ npm install hexo --save 安装完成后，根据自己喜好建立目录（如I:\\fanff0324\\GitHub\\hexo），进入Git Shell切换到该路径下I:\\fanff0324\\GitHub\\hexo执行以下指令 # 切换路径的方法是 $ cd 你的路径 # 比如我的是I:\\fanff0324\\GitHub\\hexo我可以这样切换： $ cd I:\\fanff0324\\GitHub\\hexo","text":"这是我第一篇使用Hexo写的文章，使用方法详见文稿。关于Hexo的任何问题以及错误可以前往问题解答页面查看，也可以直接寻找Hexo GitHub求解。 建站安装Node.js环境和Git Desktop从Node.js的官网站点下载并安装。从Github的官方网站下载GitHub Desktop并安装。 安装Hexo安装好Git和Node之后，打开在桌面上（或者去开始菜单）的“Git Shell”输入以下命令。 $ npm install -g hexo /*如果报错，使用taobao.org的源进行下载*/ $ npm install -g cnpm --registry=https://registry.npm.taobao.org /*下面的命令行一定要运行*/ $ npm install hexo --save 安装完成后，根据自己喜好建立目录（如I:\\fanff0324\\GitHub\\hexo），进入Git Shell切换到该路径下I:\\fanff0324\\GitHub\\hexo执行以下指令 # 切换路径的方法是 $ cd 你的路径 # 比如我的是I:\\fanff0324\\GitHub\\hexo我可以这样切换： $ cd I:\\fanff0324\\GitHub\\hexo 初始化Hexo文件安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。 $ hexo init &lt;folder&gt; $ cd &lt;folder&gt; $ npm install /*初始化过程应该会很快，初始化完成后，在文件管理器中根目录应该是这个样子的（_drafts文件夹可能不存在，可以手动创建）*/ . ├── _config.yml ├── package.json ├── scaffolds ├── scripts ├── source | ├── _drafts | └── _posts └── themes 必要插件安装$ npm install hexo-generator-index --save /*主页生成插件*/ $ npm install hexo-generator-archive --save /*归档页面以及侧边栏生成插件*/ $ npm install hexo-generator-category --save /*分类以及侧边栏生成插件*/ $ npm install hexo-generator-tag --save /*标签插件*/ $ npm install hexo-server --save /*本地预览模式插件*/ $ npm install hexo-deployer-git --save /*GitHub部署插件*/ $ npm install hexo-deployer-heroku --save /*Herku部署插件*/ $ npm install hexo-deployer-rsync --save /*Rsync部署插件*/ $ npm install hexo-deployer-openshift --save /*OpenShift部署插件*/ $ npm install hexo-renderer-marked@0.2 --save /*marked渲染器*/ $ npm install hexo-renderer-stylus@0.2 --save /*stylus渲染器*/ $ npm install hexo-generator-feed@1 --save /*RSS订阅Feed生成插件*/ $ npm install hexo-generator-sitemap@1 --save /*导航栏以及地图布局生成插件*/ $ npm install hexo generator-search --save /*站内搜索插件*/ $ npm install hexo-tag-owl --save /*媒体Tag插件*/ $ npm install hexo-admin --save /*本地内容管理插件（这个是我知道的最早的一个管理插件）*/ $ npm install hexo-hey --save /*本地内容管理插件（这个是我目前觉得最好用的，指令不同，可以交叉使用）*/ 如果没有安装好插件，下面的命令以及网页渲染会有一定问题。 创建本地服务器预览效果继续执行以下命令 $ hexo server /*简洁命令是*/ $ hexo s /*等待你看到这个反馈*/ $ Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 现在可以在在浏览器中输入localhost:4000查看预览效果。如果要停止服务器，按下Ctrl+C即可。 以上内容来自wsgzao提供的指南。更多内容请等待更新，会包括问题修复，文件管理等等。","categories":[{"name":"GitHub Blog","slug":"GitHub-Blog","permalink":"https://neko.ayaka.moe/categories/GitHub-Blog/"}],"tags":[{"name":"指南","slug":"指南","permalink":"https://neko.ayaka.moe/tags/%E6%8C%87%E5%8D%97/"},{"name":"Hexo","slug":"Hexo","permalink":"https://neko.ayaka.moe/tags/Hexo/"},{"name":"建站","slug":"建站","permalink":"https://neko.ayaka.moe/tags/%E5%BB%BA%E7%AB%99/"},{"name":"GitHub Blog","slug":"GitHub-Blog","permalink":"https://neko.ayaka.moe/tags/GitHub-Blog/"}]},{"title":"无题","slug":"996","date":"2016-01-04T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2016/01/04/996/","link":"","permalink":"https://neko.ayaka.moe/2016/01/04/996/","excerpt":"不安感，无助感，孤独感。几曾何时的理想，早已灰飞烟灭不见踪影。大脑一片空白之后，充斥的是不安感。心中只是想着，“真希望放弃这一切，我去干点我真正想干的事情”。","text":"不安感，无助感，孤独感。几曾何时的理想，早已灰飞烟灭不见踪影。大脑一片空白之后，充斥的是不安感。心中只是想着，“真希望放弃这一切，我去干点我真正想干的事情”。 我确信我没有想太多…我确信我没有想太多…我确信我没有想太多… 无论这个选择在我看来是否值得，不去试试怎么会知道是否真的值得。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"难过","slug":"难过","permalink":"https://neko.ayaka.moe/tags/%E9%9A%BE%E8%BF%87/"}]},{"title":"回归LOFTER","slug":"995","date":"2015-11-02T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2015/11/02/995/","link":"","permalink":"https://neko.ayaka.moe/2015/11/02/995/","excerpt":"","text":"经过好久好久的离开，这段时间都在忙其他东西，比如Minecraft的服务器，比如开发自己的项目，还有等等等等。 该更新的文章也没有更新， 在这里表示歉意。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://neko.ayaka.moe/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"好久没去 LOFTER 了","slug":"994","date":"2015-01-16T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2015/01/16/994/","link":"","permalink":"https://neko.ayaka.moe/2015/01/16/994/","excerpt":"","text":"好久没有来LOFTER了…","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[]},{"title":"星际穿越 - 经典台词","slug":"990","date":"2014-11-14T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/11/14/990/","link":"","permalink":"https://neko.ayaka.moe/2014/11/14/990/","excerpt":"按剧情发展顺序记录（影院字幕版）—— 现在我们就是孩子们以后的回忆了，有了孩子，你就是孩子未来的幽灵。当我在外太空高度休眠，或者以接近光速航行，或者接近黑洞的时候，时间会产生变化，会比平常慢很多，我们的时间会不一样，等我回来的时候我可能会跟我女儿一样大。","text":"按剧情发展顺序记录（影院字幕版）—— 现在我们就是孩子们以后的回忆了，有了孩子，你就是孩子未来的幽灵。当我在外太空高度休眠，或者以接近光速航行，或者接近黑洞的时候，时间会产生变化，会比平常慢很多，我们的时间会不一样，等我回来的时候我可能会跟我女儿一样大。 不要温顺地走进这个良夜激情不能被消沉的暮色淹没咆哮吧，咆哮，痛斥那光的退缩智者在临终的时候对黑暗妥协是因为他们的语言已黯然失色他们也不想被夜色迷惑咆哮吧，咆哮，痛斥那光的退缩 他们是五维空间的生命体，对他们来说时间可能是另一种空间实体，过去可能就是一个可以爬进去的山谷，而未来，是一座可以爬上去的山。 当你做了父母之后，最重要的，那就是要保证让你的孩子感到安全，所以不能跟一个十岁孩子说世界末日到了。 我们去了多久二十三年四个月零八天 你说过等我们再见面时，我们可能是一样的年纪，今天我就到了你离开时的年龄，所以现在就是你应该回来的时候了。我害怕的是时间。 爱不是人类发明的东西，它一直存在，而且很强大，是有意义的。也许意味着更多，更多我们还无法理解的，也许是某种证据，来自更高维度文明而且我们目前无法感知。我风尘仆仆穿越宇宙寻找一个消失了十年的人，我也知道，他可能已经死了……爱是一种力量，能让我们超越时空的维度来感知它的存在。尽管我们还不能真正地理解它，能见到爱德蒙斯的机会再渺茫我也不放弃，这不意味着我错了。 （Love is the one thing that transcends time and space. · 其他译本：爱是唯一能穿越所有维度的矢量。 · 影院译本：爱是一种力量，让我们超越时空的维度感知它的存在。） 根本不是什么他们，而是我们自己。 我们在这里跟三维世界交流，就像桥梁一样，拯救这世界，他们拥有无限的时间和空间，又没有任何束缚，他们不能在时间里找到特定的位置，他们没法沟通，所以我会在这儿，我要找到办法告诉墨菲，就好像我发现这个时刻。 怎么沟通？ 爱，塔斯，是爱。就像布兰德说的，我和墨菲之间的交流是可以量化的，这才是关键。 那现在该怎么做？ 找到沟通方式，那块儿表。 【不要温和地走进那个良夜】（网络翻译版） Do not go gentle into that good night by 狄兰·托马斯 Dylan Thomas Do not go gentle into that good night,Old age should burn and rave at close of day;Rage, rage against the dying of the light.不要温和地走进那个良夜白昼将尽，暮年仍应燃烧咆哮怒斥吧，怒斥光的消逝 Though wise men at their end know dark is right,Because their words had forked no lightning theyDo not go gentle into that good night.虽然在白昼尽头，智者自知该踏上夜途因为言语未曾迸发出电光，他们不要温和地走进那个良夜 Good men, the last wave by, crying how brightTheir frail deeds might have danced in a green bay,Rage, rage against the dying of the light.好人，当最后一浪过去，高呼着他们脆弱的善行本来也许可以在绿湾上快意地舞蹈所以，他们怒斥，怒斥光的消逝 Wild men who caught and sang the sun in flight,And learn, too late, they grieved it on its way,Do not go gentle into that good night.狂人抓住稍纵即逝的阳光，为之歌唱并意识到，太迟了，他们过去总为时光伤逝不要温和地走进那个良夜 Grave men, near death, who see with blinding sightBlind eyes could blaze like meteors and be gay,Rage, rage against the dying of the light.严肃的人，在生命尽头，用模糊的双眼看到失明的眼可以像流星般闪耀，欢欣雀跃所以，他们怒斥，怒斥光的消逝 And you, my father, there on the sad height,Curse, bless, me now with your fierce tears, I pray.Do not go gentle into that good night.Rage, rage against the dying of the light.而您，我的父亲，在生命那悲哀之极我求您现在用您的热泪诅咒我，祝福我吧不要温和地走进那个良夜怒斥吧，怒斥光的消逝","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Interstellar","slug":"Interstellar","permalink":"https://neko.ayaka.moe/tags/Interstellar/"},{"name":"星际穿越","slug":"星际穿越","permalink":"https://neko.ayaka.moe/tags/%E6%98%9F%E9%99%85%E7%A9%BF%E8%B6%8A/"}]},{"title":"星际穿越 - 不要温和地走进那个良夜","slug":"991","date":"2014-11-14T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/11/14/991/","link":"","permalink":"https://neko.ayaka.moe/2014/11/14/991/","excerpt":"【不要温和地走进那个良夜】Do not go gentle into that good nightby 狄兰·托马斯 Dylan Thomas Do not go gentle into that good night,Old age should burn and rave at close of day;Rage, rage against the dying of the light.不要温和地走进那个良夜白昼将尽，暮年仍应燃烧咆哮怒斥吧，怒斥光的消逝","text":"【不要温和地走进那个良夜】Do not go gentle into that good nightby 狄兰·托马斯 Dylan Thomas Do not go gentle into that good night,Old age should burn and rave at close of day;Rage, rage against the dying of the light.不要温和地走进那个良夜白昼将尽，暮年仍应燃烧咆哮怒斥吧，怒斥光的消逝 Though wise men at their end know dark is right,Because their words had forked no lightning theyDo not go gentle into that good night.虽然在白昼尽头，智者自知该踏上夜途因为言语未曾迸发出电光，他们不要温和地走进那个良夜 Good men, the last wave by, crying how brightTheir frail deeds might have danced in a green bay,Rage, rage against the dying of the light.好人，当最后一浪过去，高呼着他们脆弱的善行本来也许可以在绿湾上快意地舞蹈所以，他们怒斥，怒斥光的消逝 Wild men who caught and sang the sun in flight,And learn, too late, they grieved it on its way,Do not go gentle into that good night.狂人抓住稍纵即逝的阳光，为之歌唱并意识到，太迟了，他们过去总为时光伤逝不要温和地走进那个良夜 Grave men, near death, who see with blinding sightBlind eyes could blaze like meteors and be gay,Rage, rage against the dying of the light.严肃的人，在生命尽头，用模糊的双眼看到失明的眼可以像流星般闪耀，欢欣雀跃所以，他们怒斥，怒斥光的消逝 And you, my father, there on the sad height,Curse, bless, me now with your fierce tears, I pray.Do not go gentle into that good night.Rage, rage against the dying of the light.而您，我的父亲，在生命那悲哀之极我求您现在用您的热泪诅咒我，祝福我吧不要温和地走进那个良夜怒斥吧，怒斥光的消逝","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Interstellar","slug":"Interstellar","permalink":"https://neko.ayaka.moe/tags/Interstellar/"},{"name":"星际穿越","slug":"星际穿越","permalink":"https://neko.ayaka.moe/tags/%E6%98%9F%E9%99%85%E7%A9%BF%E8%B6%8A/"}]},{"title":"我今天吃醋，你能借我点饺子用么？","slug":"993","date":"2014-11-10T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/11/10/993/","link":"","permalink":"https://neko.ayaka.moe/2014/11/10/993/","excerpt":"","text":"我今天吃醋，你能借我点饺子用么？","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"难过","slug":"难过","permalink":"https://neko.ayaka.moe/tags/%E9%9A%BE%E8%BF%87/"},{"name":"感伤","slug":"感伤","permalink":"https://neko.ayaka.moe/tags/%E6%84%9F%E4%BC%A4/"}]},{"title":"沙漠中的日落","slug":"992","date":"2014-10-19T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/10/19/992/","link":"","permalink":"https://neko.ayaka.moe/2014/10/19/992/","excerpt":"","text":"沙漠中的日落","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"摄影","slug":"摄影","permalink":"https://neko.ayaka.moe/tags/%E6%91%84%E5%BD%B1/"},{"name":"沙漠","slug":"沙漠","permalink":"https://neko.ayaka.moe/tags/%E6%B2%99%E6%BC%A0/"},{"name":"日落","slug":"日落","permalink":"https://neko.ayaka.moe/tags/%E6%97%A5%E8%90%BD/"}]},{"title":"宋冬野 - 斑马，斑马","slug":"989","date":"2014-10-13T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/10/13/989/","link":"","permalink":"https://neko.ayaka.moe/2014/10/13/989/","excerpt":"","text":"你的浏览器不支持网页播放器 感觉还不错呢~ 虽然常年驻扎在生活了十多年的地方，不能说不爱这里，但是也没有那个我顶多一年才回几次的故乡感情深 但是距离更远，会不会思乡更深，致游子，勿忘家。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"音乐","slug":"音乐","permalink":"https://neko.ayaka.moe/tags/%E9%9F%B3%E4%B9%90/"},{"name":"游子","slug":"游子","permalink":"https://neko.ayaka.moe/tags/%E6%B8%B8%E5%AD%90/"},{"name":"离家远行","slug":"离家远行","permalink":"https://neko.ayaka.moe/tags/%E7%A6%BB%E5%AE%B6%E8%BF%9C%E8%A1%8C/"}]},{"title":"盐湖城的山","slug":"988","date":"2014-10-05T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/10/05/988/","link":"","permalink":"https://neko.ayaka.moe/2014/10/05/988/","excerpt":"","text":"","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"手机摄影","slug":"手机摄影","permalink":"https://neko.ayaka.moe/tags/%E6%89%8B%E6%9C%BA%E6%91%84%E5%BD%B1/"},{"name":"Lonely Star","slug":"Lonely-Star","permalink":"https://neko.ayaka.moe/tags/Lonely-Star/"},{"name":"Salt Lake City","slug":"Salt-Lake-City","permalink":"https://neko.ayaka.moe/tags/Salt-Lake-City/"}]},{"title":"我会离开这个城市很久吗？","slug":"987","date":"2014-10-02T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/10/02/987/","link":"","permalink":"https://neko.ayaka.moe/2014/10/02/987/","excerpt":"","text":"我离开这个城市，会变得很久很久，不知道它会不会将我忘却摄影 @笑談","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"难过","slug":"难过","permalink":"https://neko.ayaka.moe/tags/%E9%9A%BE%E8%BF%87/"},{"name":"手机摄影","slug":"手机摄影","permalink":"https://neko.ayaka.moe/tags/%E6%89%8B%E6%9C%BA%E6%91%84%E5%BD%B1/"},{"name":"伤心","slug":"伤心","permalink":"https://neko.ayaka.moe/tags/%E4%BC%A4%E5%BF%83/"}]},{"title":"在 South Jordan 吃得最饱的晚餐","slug":"986","date":"2014-09-28T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/09/28/986/","link":"","permalink":"https://neko.ayaka.moe/2014/09/28/986/","excerpt":"","text":"","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"手机摄影","slug":"手机摄影","permalink":"https://neko.ayaka.moe/tags/%E6%89%8B%E6%9C%BA%E6%91%84%E5%BD%B1/"},{"name":"食物","slug":"食物","permalink":"https://neko.ayaka.moe/tags/%E9%A3%9F%E7%89%A9/"},{"name":"晒出你的今日搭配","slug":"晒出你的今日搭配","permalink":"https://neko.ayaka.moe/tags/%E6%99%92%E5%87%BA%E4%BD%A0%E7%9A%84%E4%BB%8A%E6%97%A5%E6%90%AD%E9%85%8D/"}]},{"title":"Legends of the Fall: The Ludlows by James Horner","slug":"985","date":"2014-09-27T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/09/27/985/","link":"","permalink":"https://neko.ayaka.moe/2014/09/27/985/","excerpt":"","text":"你的浏览器不支持网页播放器 最后的小提琴独奏美哭","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"难过","slug":"难过","permalink":"https://neko.ayaka.moe/tags/%E9%9A%BE%E8%BF%87/"},{"name":"音乐","slug":"音乐","permalink":"https://neko.ayaka.moe/tags/%E9%9F%B3%E4%B9%90/"}]},{"title":"分享一段文字","slug":"984","date":"2014-09-23T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/09/23/984/","link":"","permalink":"https://neko.ayaka.moe/2014/09/23/984/","excerpt":"","text":"这段话，理解了，会成长很多的啊。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[]},{"title":"时光若刻","slug":"983","date":"2014-09-21T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/09/21/983/","link":"","permalink":"https://neko.ayaka.moe/2014/09/21/983/","excerpt":"1我开始发现自己和别人不一样是在5岁那年，准确地说是在1990年的11月2号。 那是一个起风的星期五，天气有些阴霾，早晨起床时妈妈让我多穿点，因为今天开始要降温。那天早上一进幼儿园，我就因为和一个名叫高恒的小胖子打架，被我们的孙老师给抓住了。孙老师是一个很温柔的女老师，那年她23岁，刚从大学毕业不久，那天她穿着一件暖黄色的线衣，梳着一个很好看的马尾辫。","text":"1我开始发现自己和别人不一样是在5岁那年，准确地说是在1990年的11月2号。 那是一个起风的星期五，天气有些阴霾，早晨起床时妈妈让我多穿点，因为今天开始要降温。那天早上一进幼儿园，我就因为和一个名叫高恒的小胖子打架，被我们的孙老师给抓住了。孙老师是一个很温柔的女老师，那年她23岁，刚从大学毕业不久，那天她穿着一件暖黄色的线衣，梳着一个很好看的马尾辫。 她把我和高恒揪到角落，问我们为什么打架，高恒一脸茫然地摇摇头，说：“我不知道，他今天一进来就打我，说要找我算账。” 于是她转而问我要跟他算什么账，我义正词严地告诉她：“三天前下午放学回家的时候他在我屁股上踢了一脚，他说有本事三天后找他报仇，所以我今天就打他了。” 孙老师笑着摸了一下我的头，说你这孩子可真是记仇呢，小朋友之间要相互友爱。 我说：“他才没跟我友爱呢，他从认识我到今天总共踢过我7次屁股，揪过我5次耳朵，还捏过我两个8次脸。” 那时候我只学到10以内的算术，所以只能用这种方式来描述16。 听我这么说完，原本微笑着的孙老师顿时就表情凝固了，她把高恒打发走，然后就拎着我到园长办公室给我妈打了个电话。 后来事情的发展就没有什么悬念了，她们惊奇地发现我是一个不正常的孩子，我能清晰地记得从自己记事开始的每一件事的每一个细节，细致到每天的每一顿饭吃的是什么东西，电视播了什么节目什么新闻，天气是好是坏刮风还是下雨，甚至谁在什么地方和我说了什么话，每一个画面都历历在目，只要我去回忆，它们就像过电影一样清晰。而且除了睡觉的时间外，没有任何的空白之处。 而我也从那一刻才开始明白，原来人是种会“遗忘”的动物，他们会把眼前这如此清晰、真实而不停流动着的画面在转瞬间忘得一干二净，甚至连自己说过的话，做过的事，听过的歌，读过的文字都能够在一段时间后无情地抛之脑后，而且遗忘的比率和效率都是如此的高，就好像西瓜经过后榨汁机后留下的那些少得可怜的残渣一般，我甚至有些担心他们会不会有一天连自己是谁都忘掉呢。 可我自己却完全没法体会这种“遗忘”的感觉，就好像活着的人永远无法领悟“死亡”的虚无感一般，我只能无助地坐在那里，看着家人因我将前一天晚上的新闻联播一字不差地背出来后那惊奇而又惊恐的眼神，然后忧愁地交谈着这究竟是一种什么病，会不会对大脑的发育有影响之类的话题。 然而成人的世界终归是功利的，当我在邻居面前把《三字经》、《弟子规》像倒豆子一样倒背如流的时候，我看到了父母得意的眼神，尽管这只花了我总共不到一个小时的时间而已。而他们打电话的时候，也只要喊一声“七大舅”或者“八大姑”，我就能把号码完完整整地报出来，比查电话簿要方便快捷多了。甚至连我奶奶也会问我“缝衣针放在哪里了”，“昨天午饭吃的是什么”，“早晨我说要去谁家串门来着”之类的问题，从此之后他们再也没有讨论过我脑子的结构，只夸我是个聪明的孩子。 不过其实我并不是个聪明的孩子，只是我的头脑像影印机那般清晰而高效，又像电脑一样冰冷而精确。 2很多年后，当我以全省第一名的成绩考入一所全国知名的大学后，我才知道原来我的病叫“超忆症”。 得这种病的患者记忆力会异于常人，能够记得生活中的每一个细节，且过目不忘，这就是我之所以能够毫不费力地考入名牌大学的原因，我从小学开始就基本没有认真学过什么，只要是我看过的书，上过的课，做过的题，到考试时就能像放电影一般在脑海里回放，简直就像作弊一样。由于我的逻辑思维能力并没有那么出众，只是单纯记得原有的题目而已，所以我的理科一直都不好。但自从我报了文科，我的高中生活便再也没有学习二字了，历史地理政治三年所有的课本，我一周就全看完了，从此以后大小考试都和开卷考无异，需要引用书上的论点时，我的答案从来都是一字不差，连标点符号都一模一样。 据我所知，全世界得这个病的也就那么几个，而能够病到我这个程度的，估计应该不会有第二个了。 从小到大我都过得很开心，因为父母从来没有担心过我的学习，而我也因为我的特殊能力交到了很多朋友，我会跟他们讲各种各样的笑话，说千奇百怪的故事，甚至可以告诉他们在某年某月某一天，他们穿什么衣服，在什么地方说了一句什么话。而他们也会听得津津有味，瞪大眼睛如痴如醉般出神地望着我，就好像在听别人的故事一样。 也就是在这样的时刻，我开始羡慕他们，羡慕他们眼神里流露出的那种东西。我从来无法理解他们对于回忆的眷恋，他们总会很怀旧地拿起一个多年前的明信片，围在一起回味一张泛黄的旧照片，甚至看一部很久之前看过的电影，这些东西对我来说都是没有任何意义的，毕竟在我的脑海里它们清晰到触手可及：明信片上的每一个字我都能默写下来，照片上发生的事情我一眼就知道是哪一天的哪个时刻，而旧电影的每一个剧情每一句台词，我都能躺在床上闭上眼睛完整地放映一遍。 这是一种痛苦的羡慕之情，甚至渐渐演变成了一种嫉妒，我感觉自己是一个没有回忆的人，只因为我的脑海里满满都是所谓的“回忆”。 我开始变得郁郁寡欢，也不再愿意与人接触，在大学里我开始翘课，躲在宿舍里打一天游戏，或是在图书馆看一下午书，甚至仅仅只是坐在湖边发呆，什么也不去想，因为这些都是除了睡觉之外减少回忆的最有效的方式。只要我不去创造回忆，那我就不会有回忆了吧，我默默地想着，看着湛蓝的天空中云卷云舒，看着树叶从树上掉落到草地上再滚落到林荫小道上，看着年轻的人们匆匆的脚步，以及随着时光流逝的青春。 直到有一天，我遇到了一个名叫如冰的姑娘。 那是2006年9月14日，她穿着一袭碎花连衣裙走到我的身旁，问我是不是那个什么事情都知道的人。 我笑着对她说：“我并不是什么都知道，我只是什么都记得。” 然后她就跟我聊了起来，上至天文，下至地理，我发现她其实懂得并不比我少，而且我仅仅只是记得发生过什么而已，她却能对发生过的事情有着自己的看法。 “你虽然什么都记得，可是‘记得’本身又有什么用呢，发生过的事情终归是发生了，你又不能改变什么，如果你不能将它们赋予属于自己的意义，只是像个放映机一样放着那些东西，那它们终究也将成为虚妄不是吗？” 我看着她的眼睛，陷入了久久的沉思中，那是一段很长很长的时间，空中有五只飞鸟飞过，一对情侣从湖的一端走到了另一端，不远处还开过一辆黑色的汽车。 “你叫什么名字？”我问她道。 “如冰。” “像冰一样的意思吗？” “如果你非要这么理解的话。”她噗嗤一声笑了，她笑起来很好看，就像七岁那年路过自家楼底时，俯身在墙角看见的那支鸢尾花。 “唔，就像我的脑子一样，冷冰冰的。” “怎么说？” “我时常觉得它很无情，总是把一切无论好的坏的快乐的悲伤的都这样一丝不苟地记录下来，丝毫没有经过我的同意，也没有给过我任何选择的权利。” “但你知道吗，遗忘也未曾是我们的选择呀，有时候在不经意间就把曾经刻骨铭心的东西就这样忘掉了，没有留下一点痕迹，就连后悔的余地也没有，毕竟你怎么会去惋惜某个你已经忘掉的东西呢。” 她说这番话的时候眼神里有很复杂的情绪在涌动，让人很想认真从中阅读出更多的故事来。 “我可以知道你的电话号码吗？”我弱弱地问她道。 “可以啊，我发给你？” “不用了，你说一遍就够了，一辈子都不会忘记的。” 她很羞涩地看了我一眼，但我却没有告诉她这其实并不是什么虚情假意的肉麻，而是一句真真切切的实话。 3后来的10天里我又见了如冰7次，一起吃了5顿饭，去过1次图书馆。 那天傍晚在图书馆里，她忽然问我，如果给我足够多的时间，我是不是能够把图书馆里所有的书都装进脑子里呢。 我笑笑说：“给几只猴子几台打印机，他们在无限的时间里也能打出莎士比亚全集呢。” “别贫嘴，我只是很好奇。” “可以是可以，不过我似乎没有这么做的必要吧，而且这将是相当长的一段时间，就算你把图书馆里的书全拿去打印店打印一遍，不也得很久很久么，更何况我必须一个字一个字地读过，才能记下来，而且我读书不是为了背下来，我对文字本身还是很依赖的。” “所以其实你是一台有感情的机器，并不像你形容的那么冷冰冰。”她笑道。 “嗯，我不知道，有时候我觉得我在感情上的确很迟钝，或许思维的速度太快了，在情感上反而变得笨拙起来，上天是很公平的吧，我终归不是个善于表达自己的人。” “你喜欢过女生么？” “没有。” “从来没有？” “从来没有，我的记忆力太好了，我觉得如果我喜欢上谁，也许永远也不会忘掉了。” “所以你只是害怕。” “害怕？害怕什么？” “就像有的人永远不会养宠物一样，大多数宠物的生命必然比主人要短，这注定了未来将要有一场生离死别，有的人觉得自己既然承受不了这种既定的悲伤，索性选择永远不养宠物。” “这听起来似乎有那么点道理，但是谈恋爱这种事情用养宠物来打比方，似乎有点奇怪。”我笑着摇了摇头道。 那天晚上从图书馆出来后，我们在操场上坐了一整夜，南方的9月依然燥热，但夜晚的微风总能消散许多白天积累的烦闷与不安。 “我还有个问题，你有想过未来自己要做什么吗，我觉得你很有成为画家或者音乐家的潜质，只要你看过的画或者乐谱，马上都能牢牢记在脑子里不是吗？”如冰忽然转过头问我道。 “有种东西叫做‘天赋’，就拿画画来说，有的人即使看着画临摹，不也画得很差劲嘛，弹琴这种东西，更是需要情感和技巧啦，光记得谱子有什么用。” “所以看来还真是没什么用啊，真替你的未来感到担心呐。”她冲我调皮地笑笑，月色下她的笑容很美，我清晰地记得，那时候的空气里，掺杂着她洗发水的香味，操场上塑胶的怪味，还有那属于夏夜特有的气息。 我轻轻闭上眼睛，聆听着耳畔的虫鸣声，还有如冰均匀的呼吸声，这时她将手偷偷搭在了我的手上，那时自己的心跳声，至今依然有回响。 4我和如冰在一起总共不过1年零7个月18天，那是一段刻骨铭心的日子，尽管我似乎并没有资格这么说，毕竟所有的日子在我的脑海里都是如此的平等。 但每当闭上眼睛回想起那些日子的时候，我却又真切地感到它们是如此的特别，我发现自己第一次开始从某段特定的回忆里感到一丝温暖和感动。 每次牵我的手，她都会问我这是我们第几次牵手了，我总能一次一次地把数字报给她听，从十到一百再到一千，而我也会在她耳边告诉她，她一共说过几次爱我，每一次分别在哪一天，哪个时刻，哪个地点，她穿着怎样的衣服。我们之间从来都不需要什么承诺，她也从来不要我给她承诺，因为她知道我都记得，而且一辈子也忘不了。 我们之间也会有闹矛盾的时候，比如我翻她的旧账，说她在几时曾经无理取闹过，或者否认她翻我的旧账，反驳她某天我其实应该是怎么怎么样的，这些都让她出奇的愤怒，尽管她知道我不是有意要记她的不好。不过无论怎么生气，事后她总能原谅我，从不会跟我大吵大闹，毕竟她知道对我而言，事情无论好坏都是会深深刻在脑海里的，她不想等到几十年后我再把这事提起来。 但很遗憾的是，她最终还是没能等到几十年后的那一天。她最终选择离开了我，原因是她无法接受一个我这样的人，我会给她太大的压力，毕竟在我这里她必须小心翼翼，不能犯错，不然这样一个残缺的她就会永远留在我的回忆里，无法抹去。 如冰走后，我又回归了自己一个人的日子，每天发呆，看书，打游戏，睡觉，把自己关在自己的世界里，与世隔绝。朋友们都来劝我，试图给我点安慰，但他们最后却都无奈地走了，毕竟他们也知道，“时间会治愈一切”这句话对我并不管用，我不是一个会自动痊愈的人，我的伤口会不停地流血，直到流干的那一天为止，只因为我没有一种叫做“遗忘”的能力。 我时常想，或许她比起我来，要幸运得多，因为她至少和所有人一样，都在时间的洪流中，不停地被冲刷着，总有一天会淡忘关于我的一切，而我却只能站在岸边，在一个所有情感都被凝固成一堵大堤的港口，直到生命的终结。 但事实上我却比他们想象中要来得坚强，我只要一直在做事，不给自己留下时间空间去回忆，自然也不会感觉到悲伤。于是我开始尝试着写文章，把自己二十年的记忆改编成小说，有如此清晰的回忆，加上自己曾经看过那么多的书，这是一个并不困难的过程。而且我发现，写文字的速度要远远慢于自己思考的速度，因此只要我的笔在动，我的思维就会跟着一起慢下来，它让我不再沉浸在那些冰冷的回忆中，让我对自己的人生有了新的认识和思考。 于是我无端想起了如冰对我说的那句话：“发生的事情终归是发生了，你既然无法改变，不如给它赋予属于你的意义。” 合上自己写完的稿子，闭着眼睛想象她第一次吻我时候嘴唇的温度，我的嘴角竟然开始微微上扬。 未曾想过，这个“像冰一样”的姑娘，让我二十年冰冷的回忆，顿时变得温暖了起来。 5今年我三十一岁，现在是一名作家，我的书卖得很好，却没有人记得我是一个超忆症患者。 前天跟出版社的编辑一起吃饭，他问我现在新书写得怎么样了，让我说一下大致的剧情，然后我就把最近一章的内容完完整整背出来给他听了一遍，把他怔了半天说不出话来。 “话说你竟然把你自己写的东西给背下来了，你真是太有时间了。”他的表情像极了二十二年前幼儿园里孙老师的模样。 “时间这东西，留着不用，也不能省下来以后再用，不是吗。”我笑道。 “背东西不是很浪费时间吗，我从小到大记忆力都超级差的，前一天晚上背的课文，第二天老师一抽背就忘了，那时候经常抄课本，就总琢磨着，要是真有那种记忆面包该多好啊，想要记住的东西，吃下去就马上记住了，而且永远都忘不了。”他摇头晃脑地说着，像是陶醉在了自己的幻想中。 “那要是有想要忘记的事情呢？” “貌似不用刻意去忘记吧，毕竟没有什么事情是永远忘不了的，在当时看起来再了不得的一件事情，总有一天你都会什么也不记得了不是吗，人的记忆力是这个世界上最靠不住的一个东西了。” 我喝掉杯里的咖啡，笑着摇了摇头。 “对了，我这段时间在做一个读者调查，也想把这个问题问问你，看你怎么回答。”他说道。 “什么问题？” “如果有一个机会让你询问死神自己死亡的具体时间，你会不会去问他？” “当然问了，为什么不问。”我很干脆地回答道。 “那你知道了以后呢，要做什么？”他似乎觉得很惊讶。 “我会提前1年零7个月18天躺在床上。” “然后呢？” “回忆我的整个人生。” 引用自－ 陈谌，90后作者。微博ID：陈谌CC。已在「一个」App发表《冰箱里的企鹅》、《口琴》","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"文字","slug":"文字","permalink":"https://neko.ayaka.moe/tags/%E6%96%87%E5%AD%97/"},{"name":"ONE一个","slug":"ONE一个","permalink":"https://neko.ayaka.moe/tags/ONE%E4%B8%80%E4%B8%AA/"},{"name":"陈谌","slug":"陈谌","permalink":"https://neko.ayaka.moe/tags/%E9%99%88%E8%B0%8C/"}]},{"title":"随手画一个icon，欢迎吐槽","slug":"982","date":"2014-09-11T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/09/11/982/","link":"","permalink":"https://neko.ayaka.moe/2014/09/11/982/","excerpt":"","text":"","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Photoshop","slug":"Photoshop","permalink":"https://neko.ayaka.moe/tags/Photoshop/"},{"name":"icon","slug":"icon","permalink":"https://neko.ayaka.moe/tags/icon/"},{"name":"图标","slug":"图标","permalink":"https://neko.ayaka.moe/tags/%E5%9B%BE%E6%A0%87/"}]},{"title":"Brian Crain - Morning Light","slug":"981","date":"2014-09-08T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/09/08/981/","link":"","permalink":"https://neko.ayaka.moe/2014/09/08/981/","excerpt":"","text":"你的浏览器不支持网页播放器 悠扬，不仅仅是晨曦，更是希望的晨曦。音乐中透露的一点伤感，总能唤醒人心。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"音乐","slug":"音乐","permalink":"https://neko.ayaka.moe/tags/%E9%9F%B3%E4%B9%90/"},{"name":"钢琴曲","slug":"钢琴曲","permalink":"https://neko.ayaka.moe/tags/%E9%92%A2%E7%90%B4%E6%9B%B2/"},{"name":"轻音乐","slug":"轻音乐","permalink":"https://neko.ayaka.moe/tags/%E8%BD%BB%E9%9F%B3%E4%B9%90/"}]},{"title":"流光","slug":"980","date":"2014-09-07T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/09/07/980/","link":"","permalink":"https://neko.ayaka.moe/2014/09/07/980/","excerpt":"","text":"","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Canon EOS 600D","slug":"Canon-EOS-600D","permalink":"https://neko.ayaka.moe/tags/Canon-EOS-600D/"},{"name":"摄影","slug":"摄影","permalink":"https://neko.ayaka.moe/tags/%E6%91%84%E5%BD%B1/"}]},{"title":"Donut Fall","slug":"977","date":"2014-09-04T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/09/04/977/","link":"","permalink":"https://neko.ayaka.moe/2014/09/04/977/","excerpt":"","text":"水流潺潺，朽木石流，远山之中，渐闻叮咚。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Canon EOS 600D","slug":"Canon-EOS-600D","permalink":"https://neko.ayaka.moe/tags/Canon-EOS-600D/"},{"name":"摄影","slug":"摄影","permalink":"https://neko.ayaka.moe/tags/%E6%91%84%E5%BD%B1/"}]},{"title":"朽木已朽","slug":"978","date":"2014-09-04T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/09/04/978/","link":"","permalink":"https://neko.ayaka.moe/2014/09/04/978/","excerpt":"","text":"朽木已朽，碎石已碎，水从中过，慢慢沿。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Canon EOS 600D","slug":"Canon-EOS-600D","permalink":"https://neko.ayaka.moe/tags/Canon-EOS-600D/"},{"name":"摄影","slug":"摄影","permalink":"https://neko.ayaka.moe/tags/%E6%91%84%E5%BD%B1/"}]},{"title":"我爬向那高处，越过碎石，尽管受伤，也要将最美献给我爱的你。","slug":"979","date":"2014-09-04T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/09/04/979/","link":"","permalink":"https://neko.ayaka.moe/2014/09/04/979/","excerpt":"","text":"","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Canon EOS 600D","slug":"Canon-EOS-600D","permalink":"https://neko.ayaka.moe/tags/Canon-EOS-600D/"},{"name":"摄影","slug":"摄影","permalink":"https://neko.ayaka.moe/tags/%E6%91%84%E5%BD%B1/"}]},{"title":"在草坪上静栖的喵～","slug":"976","date":"2014-08-30T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/08/30/976/","link":"","permalink":"https://neko.ayaka.moe/2014/08/30/976/","excerpt":"","text":"","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Canon EOS 600D","slug":"Canon-EOS-600D","permalink":"https://neko.ayaka.moe/tags/Canon-EOS-600D/"},{"name":"摄影","slug":"摄影","permalink":"https://neko.ayaka.moe/tags/%E6%91%84%E5%BD%B1/"},{"name":"猫","slug":"猫","permalink":"https://neko.ayaka.moe/tags/%E7%8C%AB/"},{"name":"Cat","slug":"Cat","permalink":"https://neko.ayaka.moe/tags/Cat/"},{"name":"喵","slug":"喵","permalink":"https://neko.ayaka.moe/tags/%E5%96%B5/"}]},{"title":"末夏","slug":"975","date":"2014-08-23T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/08/23/975/","link":"","permalink":"https://neko.ayaka.moe/2014/08/23/975/","excerpt":"抓住夏天的尾巴，就是现在。看到很多作品比如小说啊、动漫一类的，也包括音乐，总是将许多美好的记忆和记忆在内心深刻的东西，编成一个故事，让他们发生在夏天。最明显的就是沿海城市和日本等等的地区，至少在我喜欢的许多作品里面，都是这样的情节。","text":"抓住夏天的尾巴，就是现在。看到很多作品比如小说啊、动漫一类的，也包括音乐，总是将许多美好的记忆和记忆在内心深刻的东西，编成一个故事，让他们发生在夏天。最明显的就是沿海城市和日本等等的地区，至少在我喜欢的许多作品里面，都是这样的情节。 也或许是我也喜欢夏季这个大怪物吧，有些时候总能给我们一些能深刻记忆的东西。即使是离别，也许是欢笑。也或许是因为夏天的假期，总是那么快乐，故事也会发生。 夏天的尾巴，末夏 家乡的天气不是很炎热，大概是20摄氏度的样子吧。可是我是一个游子，远离家乡。现在是夏季离开的时候，它跟随我的脚步，慢慢离开我曾经所居住的小世界。 现在身为游子，明白这是每个人都将经历的，不论是为了梦想，还是为了生活，甚至获得幸福。在我看来，只要你乐观而且积极，任何问题都会迎刃而解。 就像现在我起草撰写的《清风中的柚子茶》一样，我演绎这一个角色，时有欢喜，也时有悲伤的角色。即便这样，也要演绎出最好的一面，我们也不得不去面对社会和人群。 清风中，追逐那尾巴 这是夏末，也是末夏。不论是假期还是新学期，离别的，已经发生过了，我们也将面对新的生活，就像那初升的太阳。不断，不断，不断地升起又落下，带来新的一天，也带来静寂的夜晚。夏季的夜晚，坐在乡村屋顶上，抬头就可以看见星星，那些满天繁星。他们或许很孤独，即便能看见周围的伙伴，但是那太遥远，说的话传不到那些地方。远离地球的地方，寒冷，空旷，没有温度。有远方射来的强光，但是温度已经消亡，依然的寒冷，光也会旅行至远方。他们生活在那里，我们能仰首翘望，不会在意你的言语，或许只想散发光芒。我不能抓住那夏，雨水将会掩盖它的离去，直至秋天到来，替代我的哀伤。 末夏，我记得那时光 夏，你就要离开，那些时光，我仍记得。是否回忆起，那或许是以后的事。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"文字","slug":"文字","permalink":"https://neko.ayaka.moe/tags/%E6%96%87%E5%AD%97/"},{"name":"感想","slug":"感想","permalink":"https://neko.ayaka.moe/tags/%E6%84%9F%E6%83%B3/"},{"name":"随笔","slug":"随笔","permalink":"https://neko.ayaka.moe/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"美国看见哒，瞬间感觉好亲切～","slug":"974","date":"2014-08-17T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/08/17/974/","link":"","permalink":"https://neko.ayaka.moe/2014/08/17/974/","excerpt":"","text":"","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"手机摄影","slug":"手机摄影","permalink":"https://neko.ayaka.moe/tags/%E6%89%8B%E6%9C%BA%E6%91%84%E5%BD%B1/"},{"name":"LOFT","slug":"LOFT","permalink":"https://neko.ayaka.moe/tags/LOFT/"},{"name":"美国","slug":"美国","permalink":"https://neko.ayaka.moe/tags/%E7%BE%8E%E5%9B%BD/"},{"name":"我在这里你在哪里","slug":"我在这里你在哪里","permalink":"https://neko.ayaka.moe/tags/%E6%88%91%E5%9C%A8%E8%BF%99%E9%87%8C%E4%BD%A0%E5%9C%A8%E5%93%AA%E9%87%8C/"}]},{"title":"手闲在车上用电脑撸的药丸，技术明显就是个渣，欢迎吐槽~","slug":"973","date":"2014-08-16T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/08/16/973/","link":"","permalink":"https://neko.ayaka.moe/2014/08/16/973/","excerpt":"","text":"","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Photoshop","slug":"Photoshop","permalink":"https://neko.ayaka.moe/tags/Photoshop/"}]},{"title":"後會無期","slug":"969","date":"2014-07-29T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/07/29/969/","link":"","permalink":"https://neko.ayaka.moe/2014/07/29/969/","excerpt":"昨天，又錯過一次與朋友們聚會玩耍的機會。 僅僅只有13天，我就要離開這個城市，離開這個國家。","text":"昨天，又錯過一次與朋友們聚會玩耍的機會。 僅僅只有13天，我就要離開這個城市，離開這個國家。乘坐飛機飛過山和大海，去到另外一個國家。去到那裡學習，10個月之後才會回到這裡，與你們重見，再回到以前。一個月前，我們從我們待了3年的地方離開，互相說再見。我那個時候還不是很完全的意識得到，許多人的最後一次見面，真的就是最後一次。或許以後還會在哪裡碰見妳，但是我們都不會再認出對方，或許原因就是那些時間里，我們尚未見過。 時間可以衝破一切，打破一切，甚至是你的內心，深入進去，讓你似乎有些傷感。比如，小時候的許多事，已久便會被遺忘，但是，有些記憶是抹不去的。那些記憶，存留的要不就是獲獎那一時刻的衝動與開心，也會是和朋友們玩到盡興特別開心的時光片段，當然有那些揪心的痛楚和不忘的傷痛。 時間可以抹去所有，我很天真的以為只要我牢牢記住那些片段，他不會從我的心中把這些抹去。但是我錯了，除非像原來一樣，記憶會一點一點補充，否則……同名音樂唱到“當一艘船盛入海底，當一個人 成了謎，你不知道，他們為何離去，那聲再見竟是最後一句”。的確啊，也能給我最大感悟的，不過如此，我們不知道，那個人不知不覺也就這樣成了謎，也和我們，甚至僅僅是我也就是最後一句去說說“再見”兩個字。 還唱到“我不知道，我也不想知道，和相聚之間的距離”，我們的的確確不知道，不能了解。相距的距離，可遠可近，但我們不曾知道，這之前，也就只是結局了。 真的不會知道，你們以後，是否會成了謎，我，會不會在你們的心中成了謎。但我現在知道一點，和一些人的再見，也就是最後一句話了，就像江河老師和浩漢的離別，是終生的，最後一句。胡生的被拋棄，也就是既有的結局。再見了，對你們說，我想珍惜最後十三天，圓滿這個既有的，後會無期。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"难过","slug":"难过","permalink":"https://neko.ayaka.moe/tags/%E9%9A%BE%E8%BF%87/"},{"name":"感想","slug":"感想","permalink":"https://neko.ayaka.moe/tags/%E6%84%9F%E6%83%B3/"},{"name":"随笔","slug":"随笔","permalink":"https://neko.ayaka.moe/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"睡莲","slug":"970","date":"2014-07-29T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/07/29/970/","link":"","permalink":"https://neko.ayaka.moe/2014/07/29/970/","excerpt":"","text":"用LR调调色，原本拍的时候黯淡无光，现在超级棒。如果热度足够我会把它放到我的ART里。谢谢捧场~","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Canon EOS 600D","slug":"Canon-EOS-600D","permalink":"https://neko.ayaka.moe/tags/Canon-EOS-600D/"},{"name":"摄影","slug":"摄影","permalink":"https://neko.ayaka.moe/tags/%E6%91%84%E5%BD%B1/"}]},{"title":"超级奇怪的设计 - 摄影","slug":"971","date":"2014-07-29T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/07/29/971/","link":"","permalink":"https://neko.ayaka.moe/2014/07/29/971/","excerpt":"","text":"","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Canon EOS 600D","slug":"Canon-EOS-600D","permalink":"https://neko.ayaka.moe/tags/Canon-EOS-600D/"},{"name":"摄影","slug":"摄影","permalink":"https://neko.ayaka.moe/tags/%E6%91%84%E5%BD%B1/"}]},{"title":"後會無期 後會無期","slug":"972","date":"2014-07-29T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/07/29/972/","link":"","permalink":"https://neko.ayaka.moe/2014/07/29/972/","excerpt":"","text":"片中的台词让你捧腹大笑，片中的插曲让你感触至深，最后的结局让人陷入遐想，我不禁想到：“我想你，但不会见你，只有你也想见我的时候，我们的见面才有意义”，谁说后会无期是遥遥无期？我信必定会有佳期。 引用自 閱讀文字","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"电影","slug":"电影","permalink":"https://neko.ayaka.moe/tags/%E7%94%B5%E5%BD%B1/"}]},{"title":"家乡，个旧","slug":"968","date":"2014-07-11T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/07/11/968/","link":"","permalink":"https://neko.ayaka.moe/2014/07/11/968/","excerpt":"","text":"","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"手机摄影","slug":"手机摄影","permalink":"https://neko.ayaka.moe/tags/%E6%89%8B%E6%9C%BA%E6%91%84%E5%BD%B1/"},{"name":"回不去的叫家乡","slug":"回不去的叫家乡","permalink":"https://neko.ayaka.moe/tags/%E5%9B%9E%E4%B8%8D%E5%8E%BB%E7%9A%84%E5%8F%AB%E5%AE%B6%E4%B9%A1/"}]},{"title":"深邃的蓝天","slug":"958","date":"2014-07-08T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/07/08/958/","link":"","permalink":"https://neko.ayaka.moe/2014/07/08/958/","excerpt":"","text":"深邃的蓝天，曦如白逝的云。仿佛在遥远的太空遥望大海，深邃而又未知。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Photoshop","slug":"Photoshop","permalink":"https://neko.ayaka.moe/tags/Photoshop/"}]},{"title":"云中，雨中，路上","slug":"965","date":"2014-07-08T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/07/08/965/","link":"","permalink":"https://neko.ayaka.moe/2014/07/08/965/","excerpt":"很久的高温过后，见到下雨，不免有些欣喜。 今天得知，6月17日到19日考完中考，6月26日就将要迎接碰上毕业典礼，计算下来，只有很简短的几天，过后就将要离开你们。","text":"很久的高温过后，见到下雨，不免有些欣喜。 今天得知，6月17日到19日考完中考，6月26日就将要迎接碰上毕业典礼，计算下来，只有很简短的几天，过后就将要离开你们。云中，迷茫的走过。 初次见到你们，很久很久以前不曾忆起，从幼稚成长到现在，演变，遇见千千万万，了解那些众多的事物， 经历云中的旅行。但是我们不像飞机那样有导航和GPS可以轻而易举地走出这片云，或多或少也被荆棘划伤过，被喜欢的人拒绝过，或是考试落榜痛苦过。这不是悲伤之时，我们完成一次蜕变，就在刚刚，而是庆祝之时。蜕变，我们长出自己的翅膀，奋力向前，只为冲出这片迷惘之地。水汽扑面而来，没有温度，没有温暖，让你觉得呼吸困难，难以喘息。仍然在奋力飞行，当觉得眼前一闪，便知那是方向。或许候鸟在遇到云雨时会避让开来，但不是他不会遇到困难，而是去体验山河之间穿梭，饥饿苦闷之感。他活下来，我们也活下来，这就是云中。 那是指明方向的光亮吗？随光而去，又会遇到什么；那或许不是光，是闪瞬间劈过的雷电。但我们不是迷失其中，而是错误地摔下层云，离去，离去…… 我是一颗孤独的明星，只为在星河中漫步的独行者们指明方向。 我站在雨中，不知所措。似乎是醒来还未清醒，看着眼前的人群来来往往。 雨是从何而来，来的如此猛烈，如此匆匆。温度骤降，仅比云中高出一点点，毕竟云中有冰的结核。这样不足以使温暖，雨的背后或许隐藏一种情感。 或者是说，安静的立在那里，一动不动。回忆风风雨雨，回忆那些笑颜。那一刻，不觉得时间流逝，冰冷的雨水滴落，令我打个寒颤才回到现实。眼前，不是人群，是云中的旅程，滴落在我背颊的不是雨水，是寒凉，孤寂感。 雨中，雨中。雨下的很迅速，留下凉爽，留下回荡的雨声，便匆匆离去。雷电不惜雨的离开，交加闪烁，却无法挽回这个事实，然而，每一个清醒的人都亲眼看见，雷电的做法。但是他不知道，只希望雨能多陪她一会儿，就只要那么一会儿。 回家路上，汽车驶过，行人走过。如同雨，不将脚步停下，驻足看看来往的人群，只是沉闷在急急忙忙的赶路上，继续健步而去。路面潮湿，看起来不是那么滑腻，只觉得比前几天都要干净，都要沁人心脾。走着走着，光影追上我的脚步，我回首看见，云散了。 看来，电闪雷鸣已随风雨而去，不留下一片云彩。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"文字","slug":"文字","permalink":"https://neko.ayaka.moe/tags/%E6%96%87%E5%AD%97/"},{"name":"难过","slug":"难过","permalink":"https://neko.ayaka.moe/tags/%E9%9A%BE%E8%BF%87/"},{"name":"散文","slug":"散文","permalink":"https://neko.ayaka.moe/tags/%E6%95%A3%E6%96%87/"},{"name":"云","slug":"云","permalink":"https://neko.ayaka.moe/tags/%E4%BA%91/"},{"name":"雨","slug":"雨","permalink":"https://neko.ayaka.moe/tags/%E9%9B%A8/"},{"name":"回忆","slug":"回忆","permalink":"https://neko.ayaka.moe/tags/%E5%9B%9E%E5%BF%86/"},{"name":"感伤","slug":"感伤","permalink":"https://neko.ayaka.moe/tags/%E6%84%9F%E4%BC%A4/"},{"name":"感想","slug":"感想","permalink":"https://neko.ayaka.moe/tags/%E6%84%9F%E6%83%B3/"}]},{"title":"终于做出属于自己的手写水印，先用一段时间吧~","slug":"967","date":"2014-07-08T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/07/08/967/","link":"","permalink":"https://neko.ayaka.moe/2014/07/08/967/","excerpt":"","text":"","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Photoshop","slug":"Photoshop","permalink":"https://neko.ayaka.moe/tags/Photoshop/"}]},{"title":"舍不得做太大的修改。","slug":"963","date":"2014-07-07T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/07/07/963/","link":"","permalink":"https://neko.ayaka.moe/2014/07/07/963/","excerpt":"","text":"","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Canon EOS 600D","slug":"Canon-EOS-600D","permalink":"https://neko.ayaka.moe/tags/Canon-EOS-600D/"}]},{"title":"V 字仇杀队 电影语录","slug":"966","date":"2014-06-29T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/06/29/966/","link":"","permalink":"https://neko.ayaka.moe/2014/06/29/966/","excerpt":"","text":"“Vi veri veniversum vivus vici”By the power of truth, I, while living, have conquered the universe.籍由真理的力量，我在有生之年得以征服万物。 — Faust from V for Vendetta","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"电影","slug":"电影","permalink":"https://neko.ayaka.moe/tags/%E7%94%B5%E5%BD%B1/"},{"name":"V字仇杀队","slug":"V字仇杀队","permalink":"https://neko.ayaka.moe/tags/V%E5%AD%97%E4%BB%87%E6%9D%80%E9%98%9F/"},{"name":"电影台词","slug":"电影台词","permalink":"https://neko.ayaka.moe/tags/%E7%94%B5%E5%BD%B1%E5%8F%B0%E8%AF%8D/"}]},{"title":"不要想你失去的，想想你拥有的。","slug":"964","date":"2014-06-05T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/06/05/964/","link":"","permalink":"https://neko.ayaka.moe/2014/06/05/964/","excerpt":"","text":"不要想你失去的，想想你拥有的。–雪舞","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[]},{"title":"Deemo 最爱的曲子","slug":"954","date":"2014-06-03T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/06/03/954/","link":"","permalink":"https://neko.ayaka.moe/2014/06/03/954/","excerpt":"","text":"Perfect music for Deemo!","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"音乐","slug":"音乐","permalink":"https://neko.ayaka.moe/tags/%E9%9F%B3%E4%B9%90/"}]},{"title":"V.K. 克 - 海洋之息","slug":"962","date":"2014-06-03T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/06/03/962/","link":"","permalink":"https://neko.ayaka.moe/2014/06/03/962/","excerpt":"","text":"你的浏览器不支持网页播放器 深海，神秘、陌生，停下来，似乎听得到海洋之息","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"音乐","slug":"音乐","permalink":"https://neko.ayaka.moe/tags/%E9%9F%B3%E4%B9%90/"}]},{"title":"它从未消失","slug":"960","date":"2014-06-02T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/06/02/960/","link":"","permalink":"https://neko.ayaka.moe/2014/06/02/960/","excerpt":"","text":"仰望，看不到星星。又是那句话，它从未消失，只是换了一种方式存在。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"文字","slug":"文字","permalink":"https://neko.ayaka.moe/tags/%E6%96%87%E5%AD%97/"}]},{"title":"弯弯的月","slug":"961","date":"2014-06-02T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/06/02/961/","link":"","permalink":"https://neko.ayaka.moe/2014/06/02/961/","excerpt":"","text":"那是月，弯弯的月。与渐黑的夜空相衬，似乎是在证明自己的纯洁。周围没有星星陪伴，你会不会孤独？我在看着你呀！","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"文字","slug":"文字","permalink":"https://neko.ayaka.moe/tags/%E6%96%87%E5%AD%97/"}]},{"title":"五华政府大楼 - 手机摄影","slug":"959","date":"2014-06-01T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/06/01/959/","link":"","permalink":"https://neko.ayaka.moe/2014/06/01/959/","excerpt":"","text":"你如巨人般宏伟的立于此，我翘首仰望，发现你抓住那太阳，似乎不想让它从你的手中逃跑。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"手机摄影","slug":"手机摄影","permalink":"https://neko.ayaka.moe/tags/%E6%89%8B%E6%9C%BA%E6%91%84%E5%BD%B1/"},{"name":"2014《国家地理》全球摄影大赛","slug":"2014《国家地理》全球摄影大赛","permalink":"https://neko.ayaka.moe/tags/2014%E3%80%8A%E5%9B%BD%E5%AE%B6%E5%9C%B0%E7%90%86%E3%80%8B%E5%85%A8%E7%90%83%E6%91%84%E5%BD%B1%E5%A4%A7%E8%B5%9B/"}]},{"title":"我可以蹲下来，陪你做一只蘑菇","slug":"957","date":"2014-05-29T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/05/29/957/","link":"","permalink":"https://neko.ayaka.moe/2014/05/29/957/","excerpt":"有一个精神病人，以为自己是一只蘑菇。于是他每天都撑着一把伞蹲在房间的墙角里，不吃不喝，像一只真正的蘑菇一样。 心理医生想了一个办法。","text":"有一个精神病人，以为自己是一只蘑菇。于是他每天都撑着一把伞蹲在房间的墙角里，不吃不喝，像一只真正的蘑菇一样。 心理医生想了一个办法。 有一天，心理医生也撑了一把伞，蹲坐在病人的旁边。病人很奇怪的问：你是谁呀？医生回答：我也是一只蘑菇呀。病人点了点头，继续做他的蘑菇。过了一会儿，医生站了起来，在房间里走来走去。病人就问他：你不是蘑菇么，怎么可以走来走去？医生回答说：蘑菇当然可以走来走去啦！病人觉得有道理，就也站起来走走。过了一会，医生拿出一个汉堡，开始吃。病人又问：你不是蘑菇么，怎么可以吃东西？医生理直气壮的回答：蘑菇当然也可以吃东西啦。病人觉得很对，于是也开始吃东西。几个星期以后，这个病人已经像一个正常人一样生活了。 虽然，他依然觉得自己是一只蘑菇。 其实…… 一个人可以带着他的创伤继续，只要他把悲伤放在心里一个小圈圈里，不要让悲苦浸染他的生命。 当一个人悲伤得难以自持的时候，也许，他不需要太多的劝解和安慰，训诫和指明。他需要的，只是能有一个可以在他身边蹲下来，陪他做一只蘑菇的人。 我可以蹲下来，陪你做一只蘑菇。我愿意分担你的不快乐，只是在你的世界下雨时单纯的为你撑起一把伞，请你不要封闭自己的心，不要自己一个人承受那么多。 你知道的，只要你睁开眼，你从来都不是一个人。 我是你的蘑菇。 录入文字自Qzone","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"文字","slug":"文字","permalink":"https://neko.ayaka.moe/tags/%E6%96%87%E5%AD%97/"},{"name":"故事","slug":"故事","permalink":"https://neko.ayaka.moe/tags/%E6%95%85%E4%BA%8B/"}]},{"title":"What if I leave you?","slug":"956","date":"2014-05-28T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/05/28/956/","link":"","permalink":"https://neko.ayaka.moe/2014/05/28/956/","excerpt":"仅只剩下如此几天，墙上亦或白板上的倒计时，一天一天的减少。时光从我们的故事中穿梭而去，不留下它的脚印。 距离真正的考验还有18天，那毕业照，已是两周前。我们的故事，似乎没有放慢脚步，而是越来越多，更加丰富，也更加精彩。我不知道应该说什么，我想我到最后离别的那天也不知道应该说什么，心中就只是最简单的祝福你们。","text":"仅只剩下如此几天，墙上亦或白板上的倒计时，一天一天的减少。时光从我们的故事中穿梭而去，不留下它的脚印。 距离真正的考验还有18天，那毕业照，已是两周前。我们的故事，似乎没有放慢脚步，而是越来越多，更加丰富，也更加精彩。我不知道应该说什么，我想我到最后离别的那天也不知道应该说什么，心中就只是最简单的祝福你们。离别也离别，伤恨久远也久远。 正如苏轼有名的词中所写“人有悲欢离合，月有阴晴圆缺，此事古难全”一样，我们不能阻止这一切，离开亦是一种成长，一种心灵上的成长，一种精神上的考验。有人说过“我们无法回到过去，追忆那些有何用，我们应该踏踏实实，珍惜眼前的人，展望未来。” 是啊，未来是如此陌生，带给我们一种莫名的恐惧，一种对新事物的惧怕。新的学校，新的同学，亦或是新的闺蜜，新的好基友，应该憧憬这些才是。再加把力考好最后的考试，面对最终的结果，看清未来的真面目才对。 阳光洒下，雨露作响。 这是每一滴时间逃跑的声音，它是抓不住的，我们有梦，梦很重，很遥远。 题目叫What if I leave you, 实际上是表达我对你们的不舍， 而我又奈何于什么，只希望时间再慢一些，能多看你们几眼。那是即将变为事实的，是我们无法阻止的，这几天过后，我们又能再见几面。有些朋友或许此生再也不见，亦或许还会联系，但是又能回到这三年吗？当然不能。 when I leave you, are you happy or study hard? That I cannot tell you the answer. I don’t know that my friends still remenber me, I don’t know I will remenber or forget you in future. I just want to hope you good luck. Although someone hate me. What if I forget you? What if you still remenber me?","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"文字","slug":"文字","permalink":"https://neko.ayaka.moe/tags/%E6%96%87%E5%AD%97/"}]},{"title":"V.K. 克 - 雪舞","slug":"955","date":"2014-05-26T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/05/26/955/","link":"","permalink":"https://neko.ayaka.moe/2014/05/26/955/","excerpt":"","text":"你的浏览器不支持网页播放器 壮观的，史诗般的场景，正如其出处。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"音乐","slug":"音乐","permalink":"https://neko.ayaka.moe/tags/%E9%9F%B3%E4%B9%90/"}]},{"title":"Nick Cave - To Be By Your Side","slug":"952","date":"2014-05-22T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/05/22/952/","link":"","permalink":"https://neko.ayaka.moe/2014/05/22/952/","excerpt":"","text":"你的浏览器不支持网页播放器 我与你似远似近，但千里迢迢飞来只为接近你。","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"音乐","slug":"音乐","permalink":"https://neko.ayaka.moe/tags/%E9%9F%B3%E4%B9%90/"}]},{"title":"DJ OKAWARI - Flower Dance","slug":"953","date":"2014-05-22T11:20:30.000Z","updated":"2020-08-07T10:09:01.000Z","comments":true,"path":"2014/05/22/953/","link":"","permalink":"https://neko.ayaka.moe/2014/05/22/953/","excerpt":"","text":"你的浏览器不支持网页播放器 I am happy,I am not happy,I am here,I am there","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"音乐","slug":"音乐","permalink":"https://neko.ayaka.moe/tags/%E9%9F%B3%E4%B9%90/"}]},{"title":"静静的，云散了","slug":"951","date":"2014-05-12T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2014/05/12/951/","link":"","permalink":"https://neko.ayaka.moe/2014/05/12/951/","excerpt":"好想回到那一天，见见消瘦的你内心的暖意，早已被泪水变寒只要能回到那一天，去弥补心中的空洞，填补我那后悔的心抱歉，我没能在最后一刻陪你抱歉，原谅我那时的幼稚抱歉，我没能在离去之前给你拥抱抱歉……","text":"好想回到那一天，见见消瘦的你内心的暖意，早已被泪水变寒只要能回到那一天，去弥补心中的空洞，填补我那后悔的心抱歉，我没能在最后一刻陪你抱歉，原谅我那时的幼稚抱歉，我没能在离去之前给你拥抱抱歉…… 好想回到那一天，将云聚拢过来心中的伤感，早已被泪水覆盖只要能回到那一天，去避免那云散开来，抚慰我那善感的心抱歉，我早已离开家乡远去抱歉，我没能好好关心你抱歉，原谅我幼时的胡闹抱歉…… 好想回到那一天，哪怕是悄悄陪着你脑海中浮现，早已被你面孔占据只要能回到那一天，只要能回到那一天……我的错，幼时只知道玩耍我的过，没有细细品味你的精神啊原谅我，我曾不知感伤，只是希望陪伴，而抛弃下你原谅我，我曾没有能力去照顾你时间啊，可以再给我一次机会，去陪陪那朵云吗？ 回到那年……回到那天……不论是牺牲什么，我只希望能赎回我丢失的那一天 那朵云，消散你曾经是那样的健康你曾经是那样的温暖你曾经是那样的令人喜爱谢谢你陪我玩耍谢谢你陪我…那几年 那朵云，迷失我曾经是那样的胡闹我曾经是那样的无礼我曾经是那样的幼稚但只希望你能陪我玩耍你来了，的确来了，但是那下一秒，云消散 那朵云……我不知如何挽回我愧疚在我没能再回去我不知如何吃下那后悔药我后悔那天的决心使我离去谢谢你陪我谢谢你能来陪我谢谢你…对我所做的一切 消散后，你现在应该已住在新的房间迷失过，我抱歉没能陪你 我有时会想，如果我那一天在那里陪着你，你会不会也多陪我一会儿我也还小，但是现在已经知道感伤是如此难过我希望你能原谅我…即使你从未怨恨我 我爱你你也爱我 致逝去的、亲爱的、我爱的、会陪我的外公","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"文字","slug":"文字","permalink":"https://neko.ayaka.moe/tags/%E6%96%87%E5%AD%97/"},{"name":"难过","slug":"难过","permalink":"https://neko.ayaka.moe/tags/%E9%9A%BE%E8%BF%87/"},{"name":"散文","slug":"散文","permalink":"https://neko.ayaka.moe/tags/%E6%95%A3%E6%96%87/"},{"name":"逝去","slug":"逝去","permalink":"https://neko.ayaka.moe/tags/%E9%80%9D%E5%8E%BB/"}]},{"title":"心的归宿。","slug":"950","date":"2013-12-01T11:20:30.000Z","updated":"2020-08-13T10:09:01.000Z","comments":true,"path":"2013/12/01/950/","link":"","permalink":"https://neko.ayaka.moe/2013/12/01/950/","excerpt":"","text":"","categories":[{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"}],"tags":[{"name":"Photoshop","slug":"Photoshop","permalink":"https://neko.ayaka.moe/tags/Photoshop/"},{"name":"手机摄影","slug":"手机摄影","permalink":"https://neko.ayaka.moe/tags/%E6%89%8B%E6%9C%BA%E6%91%84%E5%BD%B1/"}]}],"categories":[{"name":"Guide","slug":"Guide","permalink":"https://neko.ayaka.moe/categories/Guide/"},{"name":"Demo","slug":"Demo","permalink":"https://neko.ayaka.moe/categories/Demo/"},{"name":"Thoughts","slug":"Thoughts","permalink":"https://neko.ayaka.moe/categories/Thoughts/"},{"name":"LaterAdded","slug":"LaterAdded","permalink":"https://neko.ayaka.moe/categories/LaterAdded/"},{"name":"Thoughts","slug":"LaterAdded/Thoughts","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/"},{"name":"日记","slug":"LaterAdded/Thoughts/日记","permalink":"https://neko.ayaka.moe/categories/LaterAdded/Thoughts/%E6%97%A5%E8%AE%B0/"},{"name":"Letter","slug":"Letter","permalink":"https://neko.ayaka.moe/categories/Letter/"},{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/categories/%E6%97%A5%E8%AE%B0/"},{"name":"内心","slug":"内心","permalink":"https://neko.ayaka.moe/categories/%E5%86%85%E5%BF%83/"},{"name":"LOFTER 迁移","slug":"LOFTER-迁移","permalink":"https://neko.ayaka.moe/categories/LOFTER-%E8%BF%81%E7%A7%BB/"},{"name":"Neko","slug":"Neko","permalink":"https://neko.ayaka.moe/categories/Neko/"},{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/categories/Design/"},{"name":"Mac OS","slug":"Mac-OS","permalink":"https://neko.ayaka.moe/categories/Mac-OS/"},{"name":"GitHub Blog","slug":"GitHub-Blog","permalink":"https://neko.ayaka.moe/categories/GitHub-Blog/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"https://neko.ayaka.moe/tags/Vue/"},{"name":"Webpack","slug":"Webpack","permalink":"https://neko.ayaka.moe/tags/Webpack/"},{"name":"区块链","slug":"区块链","permalink":"https://neko.ayaka.moe/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"},{"name":"P2P","slug":"P2P","permalink":"https://neko.ayaka.moe/tags/P2P/"},{"name":"区块纺","slug":"区块纺","permalink":"https://neko.ayaka.moe/tags/%E5%8C%BA%E5%9D%97%E7%BA%BA/"},{"name":"Arweave","slug":"Arweave","permalink":"https://neko.ayaka.moe/tags/Arweave/"},{"name":"CryptoMeetup","slug":"CryptoMeetup","permalink":"https://neko.ayaka.moe/tags/CryptoMeetup/"},{"name":"Three.js","slug":"Three-js","permalink":"https://neko.ayaka.moe/tags/Three-js/"},{"name":"3D","slug":"3D","permalink":"https://neko.ayaka.moe/tags/3D/"},{"name":"地球","slug":"地球","permalink":"https://neko.ayaka.moe/tags/%E5%9C%B0%E7%90%83/"},{"name":"2D转3D","slug":"2D转3D","permalink":"https://neko.ayaka.moe/tags/2D%E8%BD%AC3D/"},{"name":"指南","slug":"指南","permalink":"https://neko.ayaka.moe/tags/%E6%8C%87%E5%8D%97/"},{"name":"Hexo","slug":"Hexo","permalink":"https://neko.ayaka.moe/tags/Hexo/"},{"name":"GitHub Blog","slug":"GitHub-Blog","permalink":"https://neko.ayaka.moe/tags/GitHub-Blog/"},{"name":"Matataki","slug":"Matataki","permalink":"https://neko.ayaka.moe/tags/Matataki/"},{"name":"Fan票","slug":"Fan票","permalink":"https://neko.ayaka.moe/tags/Fan%E7%A5%A8/"},{"name":"Mapbox","slug":"Mapbox","permalink":"https://neko.ayaka.moe/tags/Mapbox/"},{"name":"mapbox-gl","slug":"mapbox-gl","permalink":"https://neko.ayaka.moe/tags/mapbox-gl/"},{"name":"内心","slug":"内心","permalink":"https://neko.ayaka.moe/tags/%E5%86%85%E5%BF%83/"},{"name":"前端","slug":"前端","permalink":"https://neko.ayaka.moe/tags/%E5%89%8D%E7%AB%AF/"},{"name":"笔记","slug":"笔记","permalink":"https://neko.ayaka.moe/tags/%E7%AC%94%E8%AE%B0/"},{"name":"React","slug":"React","permalink":"https://neko.ayaka.moe/tags/React/"},{"name":"日记","slug":"日记","permalink":"https://neko.ayaka.moe/tags/%E6%97%A5%E8%AE%B0/"},{"name":"悲伤的年份","slug":"悲伤的年份","permalink":"https://neko.ayaka.moe/tags/%E6%82%B2%E4%BC%A4%E7%9A%84%E5%B9%B4%E4%BB%BD/"},{"name":"在奇怪地方的记述","slug":"在奇怪地方的记述","permalink":"https://neko.ayaka.moe/tags/%E5%9C%A8%E5%A5%87%E6%80%AA%E5%9C%B0%E6%96%B9%E7%9A%84%E8%AE%B0%E8%BF%B0/"},{"name":"Farewell","slug":"Farewell","permalink":"https://neko.ayaka.moe/tags/Farewell/"},{"name":"Neko","slug":"Neko","permalink":"https://neko.ayaka.moe/tags/Neko/"},{"name":"网易云音乐","slug":"网易云音乐","permalink":"https://neko.ayaka.moe/tags/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/"},{"name":"网易云音乐API","slug":"网易云音乐API","permalink":"https://neko.ayaka.moe/tags/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90API/"},{"name":"API文档","slug":"API文档","permalink":"https://neko.ayaka.moe/tags/API%E6%96%87%E6%A1%A3/"},{"name":"Elite Dangerous","slug":"Elite-Dangerous","permalink":"https://neko.ayaka.moe/tags/Elite-Dangerous/"},{"name":"精英危险","slug":"精英危险","permalink":"https://neko.ayaka.moe/tags/%E7%B2%BE%E8%8B%B1%E5%8D%B1%E9%99%A9/"},{"name":"Elite Dangerous Horizon","slug":"Elite-Dangerous-Horizon","permalink":"https://neko.ayaka.moe/tags/Elite-Dangerous-Horizon/"},{"name":"The Formidine Rift","slug":"The-Formidine-Rift","permalink":"https://neko.ayaka.moe/tags/The-Formidine-Rift/"},{"name":"Reshade","slug":"Reshade","permalink":"https://neko.ayaka.moe/tags/Reshade/"},{"name":"EDFX","slug":"EDFX","permalink":"https://neko.ayaka.moe/tags/EDFX/"},{"name":"Reshade 3.0","slug":"Reshade-3-0","permalink":"https://neko.ayaka.moe/tags/Reshade-3-0/"},{"name":"画面后期特效","slug":"画面后期特效","permalink":"https://neko.ayaka.moe/tags/%E7%94%BB%E9%9D%A2%E5%90%8E%E6%9C%9F%E7%89%B9%E6%95%88/"},{"name":"Graphic Post Effects","slug":"Graphic-Post-Effects","permalink":"https://neko.ayaka.moe/tags/Graphic-Post-Effects/"},{"name":"FactoCraft","slug":"FactoCraft","permalink":"https://neko.ayaka.moe/tags/FactoCraft/"},{"name":"Factorio","slug":"Factorio","permalink":"https://neko.ayaka.moe/tags/Factorio/"},{"name":"Forge","slug":"Forge","permalink":"https://neko.ayaka.moe/tags/Forge/"},{"name":"Java","slug":"Java","permalink":"https://neko.ayaka.moe/tags/Java/"},{"name":"Minecraft","slug":"Minecraft","permalink":"https://neko.ayaka.moe/tags/Minecraft/"},{"name":"Mod","slug":"Mod","permalink":"https://neko.ayaka.moe/tags/Mod/"},{"name":"编程","slug":"编程","permalink":"https://neko.ayaka.moe/tags/%E7%BC%96%E7%A8%8B/"},{"name":"LGBT","slug":"LGBT","permalink":"https://neko.ayaka.moe/tags/LGBT/"},{"name":"宗教","slug":"宗教","permalink":"https://neko.ayaka.moe/tags/%E5%AE%97%E6%95%99/"},{"name":"同性恋","slug":"同性恋","permalink":"https://neko.ayaka.moe/tags/%E5%90%8C%E6%80%A7%E6%81%8B/"},{"name":"双性恋","slug":"双性恋","permalink":"https://neko.ayaka.moe/tags/%E5%8F%8C%E6%80%A7%E6%81%8B/"},{"name":"跨性别者","slug":"跨性别者","permalink":"https://neko.ayaka.moe/tags/%E8%B7%A8%E6%80%A7%E5%88%AB%E8%80%85/"},{"name":"Gays","slug":"Gays","permalink":"https://neko.ayaka.moe/tags/Gays/"},{"name":"Lesbians","slug":"Lesbians","permalink":"https://neko.ayaka.moe/tags/Lesbians/"},{"name":"Transgender","slug":"Transgender","permalink":"https://neko.ayaka.moe/tags/Transgender/"},{"name":"MtF","slug":"MtF","permalink":"https://neko.ayaka.moe/tags/MtF/"},{"name":"Bisexuals","slug":"Bisexuals","permalink":"https://neko.ayaka.moe/tags/Bisexuals/"},{"name":"文字","slug":"文字","permalink":"https://neko.ayaka.moe/tags/%E6%96%87%E5%AD%97/"},{"name":"难过","slug":"难过","permalink":"https://neko.ayaka.moe/tags/%E9%9A%BE%E8%BF%87/"},{"name":"随笔","slug":"随笔","permalink":"https://neko.ayaka.moe/tags/%E9%9A%8F%E7%AC%94/"},{"name":"发泄","slug":"发泄","permalink":"https://neko.ayaka.moe/tags/%E5%8F%91%E6%B3%84/"},{"name":"人生转折","slug":"人生转折","permalink":"https://neko.ayaka.moe/tags/%E4%BA%BA%E7%94%9F%E8%BD%AC%E6%8A%98/"},{"name":"平面设计","slug":"平面设计","permalink":"https://neko.ayaka.moe/tags/%E5%B9%B3%E9%9D%A2%E8%AE%BE%E8%AE%A1/"},{"name":"设计","slug":"设计","permalink":"https://neko.ayaka.moe/tags/%E8%AE%BE%E8%AE%A1/"},{"name":"Photoshop","slug":"Photoshop","permalink":"https://neko.ayaka.moe/tags/Photoshop/"},{"name":"Lonely Star","slug":"Lonely-Star","permalink":"https://neko.ayaka.moe/tags/Lonely-Star/"},{"name":"YouTube","slug":"YouTube","permalink":"https://neko.ayaka.moe/tags/YouTube/"},{"name":"扁平化","slug":"扁平化","permalink":"https://neko.ayaka.moe/tags/%E6%89%81%E5%B9%B3%E5%8C%96/"},{"name":"宇宙","slug":"宇宙","permalink":"https://neko.ayaka.moe/tags/%E5%AE%87%E5%AE%99/"},{"name":"UI设计","slug":"UI设计","permalink":"https://neko.ayaka.moe/tags/UI%E8%AE%BE%E8%AE%A1/"},{"name":"Design","slug":"Design","permalink":"https://neko.ayaka.moe/tags/Design/"},{"name":"logo","slug":"logo","permalink":"https://neko.ayaka.moe/tags/logo/"},{"name":"YouTube频道管理","slug":"YouTube频道管理","permalink":"https://neko.ayaka.moe/tags/YouTube%E9%A2%91%E9%81%93%E7%AE%A1%E7%90%86/"},{"name":"Battle.net","slug":"Battle-net","permalink":"https://neko.ayaka.moe/tags/Battle-net/"},{"name":"战网","slug":"战网","permalink":"https://neko.ayaka.moe/tags/%E6%88%98%E7%BD%91/"},{"name":"炉石传说","slug":"炉石传说","permalink":"https://neko.ayaka.moe/tags/%E7%82%89%E7%9F%B3%E4%BC%A0%E8%AF%B4/"},{"name":"魔兽世界","slug":"魔兽世界","permalink":"https://neko.ayaka.moe/tags/%E9%AD%94%E5%85%BD%E4%B8%96%E7%95%8C/"},{"name":"WOW","slug":"WOW","permalink":"https://neko.ayaka.moe/tags/WOW/"},{"name":"建站","slug":"建站","permalink":"https://neko.ayaka.moe/tags/%E5%BB%BA%E7%AB%99/"},{"name":"Interstellar","slug":"Interstellar","permalink":"https://neko.ayaka.moe/tags/Interstellar/"},{"name":"星际穿越","slug":"星际穿越","permalink":"https://neko.ayaka.moe/tags/%E6%98%9F%E9%99%85%E7%A9%BF%E8%B6%8A/"},{"name":"感伤","slug":"感伤","permalink":"https://neko.ayaka.moe/tags/%E6%84%9F%E4%BC%A4/"},{"name":"摄影","slug":"摄影","permalink":"https://neko.ayaka.moe/tags/%E6%91%84%E5%BD%B1/"},{"name":"沙漠","slug":"沙漠","permalink":"https://neko.ayaka.moe/tags/%E6%B2%99%E6%BC%A0/"},{"name":"日落","slug":"日落","permalink":"https://neko.ayaka.moe/tags/%E6%97%A5%E8%90%BD/"},{"name":"音乐","slug":"音乐","permalink":"https://neko.ayaka.moe/tags/%E9%9F%B3%E4%B9%90/"},{"name":"游子","slug":"游子","permalink":"https://neko.ayaka.moe/tags/%E6%B8%B8%E5%AD%90/"},{"name":"离家远行","slug":"离家远行","permalink":"https://neko.ayaka.moe/tags/%E7%A6%BB%E5%AE%B6%E8%BF%9C%E8%A1%8C/"},{"name":"手机摄影","slug":"手机摄影","permalink":"https://neko.ayaka.moe/tags/%E6%89%8B%E6%9C%BA%E6%91%84%E5%BD%B1/"},{"name":"Salt Lake City","slug":"Salt-Lake-City","permalink":"https://neko.ayaka.moe/tags/Salt-Lake-City/"},{"name":"伤心","slug":"伤心","permalink":"https://neko.ayaka.moe/tags/%E4%BC%A4%E5%BF%83/"},{"name":"食物","slug":"食物","permalink":"https://neko.ayaka.moe/tags/%E9%A3%9F%E7%89%A9/"},{"name":"晒出你的今日搭配","slug":"晒出你的今日搭配","permalink":"https://neko.ayaka.moe/tags/%E6%99%92%E5%87%BA%E4%BD%A0%E7%9A%84%E4%BB%8A%E6%97%A5%E6%90%AD%E9%85%8D/"},{"name":"ONE一个","slug":"ONE一个","permalink":"https://neko.ayaka.moe/tags/ONE%E4%B8%80%E4%B8%AA/"},{"name":"陈谌","slug":"陈谌","permalink":"https://neko.ayaka.moe/tags/%E9%99%88%E8%B0%8C/"},{"name":"icon","slug":"icon","permalink":"https://neko.ayaka.moe/tags/icon/"},{"name":"图标","slug":"图标","permalink":"https://neko.ayaka.moe/tags/%E5%9B%BE%E6%A0%87/"},{"name":"钢琴曲","slug":"钢琴曲","permalink":"https://neko.ayaka.moe/tags/%E9%92%A2%E7%90%B4%E6%9B%B2/"},{"name":"轻音乐","slug":"轻音乐","permalink":"https://neko.ayaka.moe/tags/%E8%BD%BB%E9%9F%B3%E4%B9%90/"},{"name":"Canon EOS 600D","slug":"Canon-EOS-600D","permalink":"https://neko.ayaka.moe/tags/Canon-EOS-600D/"},{"name":"猫","slug":"猫","permalink":"https://neko.ayaka.moe/tags/%E7%8C%AB/"},{"name":"Cat","slug":"Cat","permalink":"https://neko.ayaka.moe/tags/Cat/"},{"name":"喵","slug":"喵","permalink":"https://neko.ayaka.moe/tags/%E5%96%B5/"},{"name":"感想","slug":"感想","permalink":"https://neko.ayaka.moe/tags/%E6%84%9F%E6%83%B3/"},{"name":"LOFT","slug":"LOFT","permalink":"https://neko.ayaka.moe/tags/LOFT/"},{"name":"美国","slug":"美国","permalink":"https://neko.ayaka.moe/tags/%E7%BE%8E%E5%9B%BD/"},{"name":"我在这里你在哪里","slug":"我在这里你在哪里","permalink":"https://neko.ayaka.moe/tags/%E6%88%91%E5%9C%A8%E8%BF%99%E9%87%8C%E4%BD%A0%E5%9C%A8%E5%93%AA%E9%87%8C/"},{"name":"电影","slug":"电影","permalink":"https://neko.ayaka.moe/tags/%E7%94%B5%E5%BD%B1/"},{"name":"回不去的叫家乡","slug":"回不去的叫家乡","permalink":"https://neko.ayaka.moe/tags/%E5%9B%9E%E4%B8%8D%E5%8E%BB%E7%9A%84%E5%8F%AB%E5%AE%B6%E4%B9%A1/"},{"name":"散文","slug":"散文","permalink":"https://neko.ayaka.moe/tags/%E6%95%A3%E6%96%87/"},{"name":"云","slug":"云","permalink":"https://neko.ayaka.moe/tags/%E4%BA%91/"},{"name":"雨","slug":"雨","permalink":"https://neko.ayaka.moe/tags/%E9%9B%A8/"},{"name":"回忆","slug":"回忆","permalink":"https://neko.ayaka.moe/tags/%E5%9B%9E%E5%BF%86/"},{"name":"V字仇杀队","slug":"V字仇杀队","permalink":"https://neko.ayaka.moe/tags/V%E5%AD%97%E4%BB%87%E6%9D%80%E9%98%9F/"},{"name":"电影台词","slug":"电影台词","permalink":"https://neko.ayaka.moe/tags/%E7%94%B5%E5%BD%B1%E5%8F%B0%E8%AF%8D/"},{"name":"2014《国家地理》全球摄影大赛","slug":"2014《国家地理》全球摄影大赛","permalink":"https://neko.ayaka.moe/tags/2014%E3%80%8A%E5%9B%BD%E5%AE%B6%E5%9C%B0%E7%90%86%E3%80%8B%E5%85%A8%E7%90%83%E6%91%84%E5%BD%B1%E5%A4%A7%E8%B5%9B/"},{"name":"故事","slug":"故事","permalink":"https://neko.ayaka.moe/tags/%E6%95%85%E4%BA%8B/"},{"name":"逝去","slug":"逝去","permalink":"https://neko.ayaka.moe/tags/%E9%80%9D%E5%8E%BB/"}]}